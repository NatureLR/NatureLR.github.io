[{"title":"ansible基本使用","url":"/2020/12/16/ansible%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","content":"<p>Ansible是一个自动化运维工具，可以实现批量配置，部署，命令等功能</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>yum 安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> ansible<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>pip安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> ansible<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"配置路径\"><a href=\"#配置路径\" class=\"headerlink\" title=\"配置路径\"></a>配置路径</h4><p>默认读取<code>/etc/ansible/</code>目录下的<code>主机清单</code>和<code>规则</code></p>\n<h4 id=\"主机清单\"><a href=\"#主机清单\" class=\"headerlink\" title=\"主机清单\"></a>主机清单</h4><blockquote>\n<p>记录ansible需要执行操作的目标机器文件，默认读取<code>/etc/ansible/hosts</code>，一般通过 <code>-i</code>参数指定,也可以分类写到一个文件夹下</p>\n</blockquote>\n<ul>\n<li>#开头为注释</li>\n<li>忽略空行</li>\n<li>组由[组名]定义</li>\n<li>主机名和域名都可以</li>\n<li>一个ip或域名可以是组的成员</li>\n<li>没有分组的主机写在任意的一个组的前面</li>\n</ul>\n<h5 id=\"连续IP\"><a href=\"#连续IP\" class=\"headerlink\" title=\"连续IP\"></a>连续IP</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token comment\"># 等价于 192.168.1.1 192.168.1.2 192.168.1.2 192.168.1.3 192.168.1.4等等</span>\n192.168.1.[1:4]\n\n<span class=\"token comment\"># 等价于 server1.example.com server2.example.com server3.example.com等等</span>\nserver[1:3].example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token key attr-name\">192.168.1.1 ansible_ssh_user</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root ansible_ssh_pass=root</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"常用参数\"><a href=\"#常用参数\" class=\"headerlink\" title=\"常用参数\"></a>常用参数</h6><ul>\n<li>ansible_ssh_host              目标主机地址</li>\n<li>ansible_ssh_port              目标主机端口，默认22</li>\n<li>ansible_ssh_user              目标主机用户</li>\n<li>ansible_ssh_pass              目标主机ssh密码</li>\n<li>ansible_sudo_pass             sudo密码</li>\n<li>ansible_sudo_exe</li>\n<li>ansible_connection            与主机的连接类型，比如：local,ssh或者paramiko</li>\n<li>ansible_ssh_private_key_file  私钥地址</li>\n<li>ansible_shell_type            目标系统的shell类型</li>\n<li>ansible_python_interpreter    python版本</li>\n</ul>\n<h5 id=\"别名\"><a href=\"#别名\" class=\"headerlink\" title=\"别名\"></a>别名</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token key attr-name\">test1 ansible_ssh_port</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">22 ansible_ssh_host=192.168.1.1 ansible_ssh_user=root  　　# 别名test1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"主机组\"><a href=\"#主机组\" class=\"headerlink\" title=\"主机组\"></a>主机组</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">foo</span><span class=\"token punctuation\">]</span></span>\n192.168.1.1\n192.168.2.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"主机组嵌套\"><a href=\"#主机组嵌套\" class=\"headerlink\" title=\"主机组嵌套\"></a>主机组嵌套</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">db</span><span class=\"token punctuation\">]</span></span>\n192.168.1.1\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">server</span><span class=\"token punctuation\">]</span></span>\n192.168.2.1\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">all:children</span><span class=\"token punctuation\">]</span></span>\ndb\nserver<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"主机组参数\"><a href=\"#主机组参数\" class=\"headerlink\" title=\"主机组参数\"></a>主机组参数</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">test</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">name1 ansible_ssh_host</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">192.168.1.[1:3]</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">test:vars</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">ansible_ssh_user</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span>\n<span class=\"token key attr-name\">ansible_ssh_pass</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"<span class=\"token inner-value\">root</span>\"</span>\n<span class=\"token key attr-name\">testvar</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"<span class=\"token inner-value\">test</span>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h4><blockquote>\n<p>ansible的功能都是通过模块来完成的 <br><code>ansible-doc -s &lt;模块名&gt;</code>查看模块的参数 <br><code>ansible-doc -l</code> 查看所有模块</p>\n</blockquote>\n<h5 id=\"常用模块\"><a href=\"#常用模块\" class=\"headerlink\" title=\"常用模块\"></a>常用模块</h5><blockquote>\n<p>参数中的<code>free_form</code>是各个模块的命令或args，并不是一个存在的参数</p>\n</blockquote>\n<h6 id=\"command\"><a href=\"#command\" class=\"headerlink\" title=\"command\"></a>command</h6><blockquote>\n<p>在目标主机上执行命令</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>free_form              必选表在目标机器上执行的命令</li>\n<li>chdir                  在目标主机的哪里执行命令</li>\n<li>creates                文件存在时就不执行此命令</li>\n<li>removes                和creates相反存在时就执行</li>\n</ul>\n</li>\n<li>例子：ansible test -m command -a “chdir&#x3D;&#x2F;var&#x2F;log removes&#x3D;kern.log cat kern.log” &#x2F;var&#x2F;log下kern.log存在就查看kern.log</li>\n</ul>\n<h6 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h6><blockquote>\n<p>和command一样不过command不支持重定向等管道操作，shell会调用<code>/bin/sh</code>执行</p>\n</blockquote>\n<ul>\n<li>参数：  <ul>\n<li>free_form:             执行的命令</li>\n<li>chdir:                 改变运行执行的目录</li>\n<li>creates:               文件存在则不就不执行命令</li>\n<li>executable:            改变命令说用的shell解释器，默认为&#x2F;bin&#x2F;sh</li>\n<li>removes:               和creates相反存在时就执行</li>\n</ul>\n</li>\n<li>例子：ansible  test -m shell -a “cat &#x2F;etc&#x2F;hosts”</li>\n</ul>\n<h6 id=\"script\"><a href=\"#script\" class=\"headerlink\" title=\"script\"></a>script</h6><blockquote>\n<p>在目标主机上执行本地主机的脚本</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>free_form:             需要执行的脚本路径</li>\n<li>chdir:                 执行脚本的目录</li>\n<li>creates:               目标机器的文件存在则不执行</li>\n<li>removes:               目标机器的文件存在则不执行</li>\n</ul>\n</li>\n<li>例子： ansible test -m script -a “test.sh”</li>\n</ul>\n<h6 id=\"copy\"><a href=\"#copy\" class=\"headerlink\" title=\"copy\"></a>copy</h6><blockquote>\n<p>复制本地文件或文件夹到目标主机上</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>src：                   指定需要copy的文件或目录</li>\n<li>dest：                  文件将被拷贝到目标主机的哪个目录中，dest为必须参数</li>\n<li>content                 不适用src时用此参数写入内容</li>\n<li>force:                  目标主机路径已经有文件且内容不相同时是否覆盖</li>\n<li>backup:                 目标主机已经有文件且内容不同时是否备份</li>\n<li>owner:                  拷贝到目标主机后的所有者</li>\n<li>group:                  拷贝到目标主机后的属组</li>\n<li>mode:                   拷贝到目标主机后的权限</li>\n</ul>\n</li>\n<li>例子： ansible test -m copy -a “src&#x3D;&#x2F;root&#x2F;test.sh dest&#x3D;&#x2F;tmp”</li>\n</ul>\n<h6 id=\"file\"><a href=\"#file\" class=\"headerlink\" title=\"file\"></a>file</h6><blockquote>\n<p>对目标主机的文件管理</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>path：                  指定目标目录或文件</li>\n<li>state：<ul>\n<li>directory：           如果目录不存在，创建目录</li>\n<li>file：                即使文件不存在，也不会被创建</li>\n<li>link：                创建软连接</li>\n<li>hard：                创建硬连接</li>\n<li>touch：               如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时</li>\n<li>absent：              删除目录、文件或者取消链接文</li>\n</ul>\n</li>\n<li>src：                   当state设置为link或者hard时，需要操作的源文件</li>\n<li>force:                  需要在两种情况下强制创建软连接，一种是源文件不存在但之后会建立的情况下；另一种是目标连接已存在，需要先取消之前的软连接，有两个选项：yes|no</li>\n<li>owner：                 指定被操作文件的所有者，</li>\n<li>group：                 指定被操作文件的所属组</li>\n<li>mode：                  权限</li>\n<li>recurse：               文件为目录时，递归目录</li>\n</ul>\n</li>\n<li>例子：<ul>\n<li>设置权限为777所属组为minikube所有者为：ansible test -m file -a “path&#x3D;&#x2F;tmp&#x2F;test.sh  mode&#x3D;777 owner&#x3D;minikube group&#x3D;minikube”</li>\n<li>创建<code>/etc/hosts</code>的软连接到home目录：ansible test -m file -a “path&#x3D;&#x2F;root&#x2F;hosts  src&#x3D;&#x2F;etc&#x2F;hosts state&#x3D;link”</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"blockinfile\"><a href=\"#blockinfile\" class=\"headerlink\" title=\"blockinfile\"></a>blockinfile</h6><blockquote>\n<p>在指定的文件里修改一段文本</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>path：                 必须参数，指定要操作的文件</li>\n<li>block：                指定要操作的一段文本</li>\n<li>marker：               ansibel默认修改时会添加一个以#开头标记，可以改为自定义</li>\n<li>state:                 present为插入或者更新;absent删除</li>\n<li>insertafter：          默认会将文本插入到指定的位置的后面</li>\n<li>insertbefore：         默认会将文本插入到指定的位置的前面</li>\n<li>backup：               是否在修改文件之前对文件进行备份。</li>\n<li>create：               当要操作的文件并不存在时，是否创建对应的文件。</li>\n</ul>\n</li>\n<li>例子：<ul>\n<li>在目标主机的&#x2F;tmp&#x2F;test文件中插入ansible-test且标记内容为teststart：ansible localhost -m blockinfile -a “path&#x3D;&#x2F;tmp&#x2F;test block&#x3D;ansible-test marker&#x3D;’#{mark}teststart’”</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"lineinfile\"><a href=\"#lineinfile\" class=\"headerlink\" title=\"lineinfile\"></a>lineinfile</h6><blockquote>\n<p>和<code>blockinfile</code>相似不过是一行还可以使用正则表达式</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>path：                  必须参数，指定要操作的文件</li>\n<li>line:                   要指定的文本内容</li>\n<li>regexp：                正则匹配对应的行，当替换文本时，如果有多行文本都能被匹配，则只有最后面被匹配到的那行文本才会被替换，当删除文本时，如果有多行文本都能被匹配，这么这些行都会被删除</li>\n<li>state：                 absent为删除，state的默认值为present</li>\n<li>backrefs：              在使用正则匹配时如果没有匹配到默认会在文件的末尾插入要替换的文本，设置为yes则不会</li>\n<li>insertafter：           默认会将文本插入到指定的位置的后面</li>\n<li>insertbefore：          默认会将文本插入到指定的位置的前面</li>\n<li>backup：                是否在修改文件之前对文件进行备份</li>\n<li>create：                当要操作的文件并不存在时，是否创建对应的文件<br>-例子：</li>\n<li>将&#x2F;tmp&#x2F;test的文件中#kern开头行换成kern.* &#x2F;var&#x2F;log&#x2F;kern.log:ansible localhost -m lineinfile -a ‘path&#x3D;&#x2F;tmp&#x2F;test regexp&#x3D;”^#kern” line&#x3D;”kern.* &#x2F;var&#x2F;log&#x2F;kern.log”‘</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace\"></a>replace</h6><blockquote>\n<p>文本替换模块</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>path：                 必须参数，指定要操作的文件，2.3版本之前，只能使用dest, destfile, name指定要操作的文件，2.4版本中，仍然可以使用这些参数名，这些参数名作为path参数的别名使用。</li>\n<li>regexp:                必须参数，指定一个python正则表达式，文件中与正则匹配的字符串将会被替换。</li>\n<li>replace：              指定最终要替换成的字符串。</li>\n<li>backup：               是否在修改文件之前对文件进行备份，最好设置为yes。</li>\n</ul>\n</li>\n<li>例子：将&#x2F;etc&#x2F;test文件中所有的<code>localhost</code>换成<code>FOO</code>: ansible localhost -m replace -a ‘path&#x3D;&#x2F;tmp&#x2F;test  regexp&#x3D;”localhost” replace&#x3D;foo’</li>\n</ul>\n<h6 id=\"systemd\"><a href=\"#systemd\" class=\"headerlink\" title=\"systemd\"></a>systemd</h6><blockquote>\n<p>运行systemd相关的命令</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>enabled:               是否设置为开机启动</li>\n<li>name:                  systemd模块名字</li>\n<li>state:                 想要设置的状态，比如<code>restartd</code>重启<code>started</code>启动、<code>stopped</code>停止、<code>reloaded</code>重新加载</li>\n<li>daemon_reload:         运行daemon-reload命令</li>\n<li>daemon_reexec:         运行daemon_reexec命令</li>\n</ul>\n</li>\n<li>例子：ansible test -m systemd -a “name&#x3D;rsyslog state&#x3D;restarted”</li>\n</ul>\n<h6 id=\"yum\"><a href=\"#yum\" class=\"headerlink\" title=\"yum\"></a>yum</h6><blockquote>\n<p>yum包管理</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>action: yum</li>\n<li>conf_file              yum的配置文件</li>\n<li>disable_gpg_check      关闭gpg_check</li>\n<li>disablerepo            不启用某个源</li>\n<li>enablerepo             启用某个源</li>\n<li>name                   指定要安装的包，如果有多个版本需要指定版本，否则安装最新的包</li>\n<li>state                  安装:<code>present</code>，安装最新版:<code>latest</code>，卸载程序包:<code>absent</code></li>\n</ul>\n</li>\n<li>例子: 安装最新版psree命令：ansible localhost -m yum -a “name&#x3D;psmisc state&#x3D;latest”</li>\n</ul>\n<h6 id=\"cron\"><a href=\"#cron\" class=\"headerlink\" title=\"cron\"></a>cron</h6><blockquote>\n<p>定时模块</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>backup                 如果设置，创建一个crontab备份</li>\n<li>cron_file              如果指定, 使用这个文件cron.d，而不是单个用户crontab</li>\n<li>day                    日应该运行的工作( 1-31, *, *&#x2F;2, etc )</li>\n<li>hour                   小时 ( 0-23, *, *&#x2F;2, etc )</li>\n<li>job                    指明运行的命令是什么</li>\n<li>minute                 分钟( 0-59, *, *&#x2F;2, etc )</li>\n<li>month                  月( 1-12, *, *&#x2F;2, etc )</li>\n<li>name                   定时任务描述</li>\n<li>reboot                 任务在重启时运行，不建议使用，建议使用special_time</li>\n<li>special_time           特殊的时间范围，参数：reboot（重启时）,annually（每年）,monthly（每月）,weekly（每周）,daily（每天）,hourly（每小时）</li>\n<li>state                  指定状态，默认<code>prsent</code>添加定时任务，<code>absent</code>删除定时任务</li>\n<li>user                   以哪个用户的身份执行</li>\n<li>weekday                周 ( 0-6 for Sunday-Saturday, *, etc )</li>\n</ul>\n</li>\n<li>例子：<ul>\n<li>每天8点半执行cat &#x2F;etc&#x2F;hosts这个命令：ansible localhost -m cron -a “name&#x3D;test minute&#x3D;30 hour&#x3D;8 day&#x3D;* job&#x3D;’cat &#x2F;etc&#x2F;hosts’”</li>\n<li>删除test这个cronjob：ansible localhost -m cron -a “name&#x3D;test state&#x3D;absent”</li>\n<li>重启时rm -rf &#x2F;tmp命令： ansible test -m cron -a ‘name&#x3D;”test” special_time&#x3D;reboot job&#x3D;”rm -rf &#x2F;tmp”‘</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"执行命令\"><a href=\"#执行命令\" class=\"headerlink\" title=\"执行命令\"></a>执行命令</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ansible &lt;主机> -m &lt;模块> -a &lt;模块参数></span>\nansible <span class=\"token operator\">&lt;</span>主机<span class=\"token operator\">></span> <span class=\"token parameter variable\">-m</span> shell <span class=\"token parameter variable\">-a</span> <span class=\"token string\">\"cat /etc/hosts\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"指定某些机器执行\"><a href=\"#指定某些机器执行\" class=\"headerlink\" title=\"指定某些机器执行\"></a>指定某些机器执行</h5><p>ansbile &lt;主机组&gt; -m &lt;模块&gt; -a &lt;参数&gt; –limit &lt;主机&gt;  指定执行主机<br>ansbile &lt;主机组&gt; -m &lt;模块&gt; -a &lt;参数&gt; –limit &lt;!主机&gt; 排除执行的主机<br>ansbile &lt;主机组&gt; -m &lt;模块&gt; -a &lt;参数&gt; –limit &lt;主机1：主机2&gt; 只在主机1和主机2中执行</p>\n<h5 id=\"一步一步的执行且确认\"><a href=\"#一步一步的执行且确认\" class=\"headerlink\" title=\"一步一步的执行且确认\"></a>一步一步的执行且确认</h5><p>在执行 剧本的时候加上 –step，每执行一个任务就询问一次</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ansible-playbook  <span class=\"token parameter variable\">-i</span> inventories test.yaml <span class=\"token parameter variable\">--step</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"playbook\"><a href=\"#playbook\" class=\"headerlink\" title=\"playbook\"></a>playbook</h4><blockquote>\n<p>剧本就是一系列ansible命令组合类似shell脚本和shell命令</p>\n</blockquote>\n<p>一个将内核日志输出到&#x2F;var&#x2F;log&#x2F;kern.log的剧本</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> all                 <span class=\"token comment\"># 要执行的主机组</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改rsyslog配置文件 <span class=\"token comment\"># 任务名字</span>\n    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog            <span class=\"token comment\"># 任务标签</span>\n    <span class=\"token key atrule\">lineinfile</span><span class=\"token punctuation\">:</span>              <span class=\"token comment\"># 任务模块</span>\n       <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/rsyslog.conf\n       <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item.regexp &#125;&#125;\"</span>\n       <span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item.line &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>              <span class=\"token comment\"># 循环执行</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'^#kern'</span><span class=\"token punctuation\">,</span><span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'kern.* /var/log/kern.log'</span> <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'^#\\$ModLoad imklog'</span><span class=\"token punctuation\">,</span><span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'$ModLoad imklog'</span> <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'^#\\$ModLoad imjournal'</span><span class=\"token punctuation\">,</span><span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'$ModLoad imjournal'</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改logrotate的syslog配置\n    <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> sed <span class=\"token punctuation\">-</span>i '1i\\\\/var\\/log\\/kern.log' /etc/logrotate.d/syslog\n    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> logrotate\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 重启rsyslog服务\n    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog\n    <span class=\"token key atrule\">systemd</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> rsyslog\n      <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> restarted\n      <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"tags\"><a href=\"#tags\" class=\"headerlink\" title=\"tags\"></a>tags</h5><blockquote>\n<p>标签可以灵活的选择执行那些task或其他的对象</p>\n</blockquote>\n<p>特殊的标签：</p>\n<ul>\n<li>always 当把标签设置为always即使使用–tags指定tags任务也会执行，可以使用–skip-tags always跳过</li>\n<li>never  和always相反即使用–tags指定也不会执行</li>\n<li>tagged 只执行有标签的任务</li>\n<li>untagged 只执行未打标签的含有always也会执行</li>\n<li>all 所有都执行不用指定</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建文件test1\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> test1\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/test1\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建文件test2\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> always\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/test2\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建文件test3\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/test3\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h5><blockquote>\n<p>变量非常常用</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建文件test1\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> test1\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; path &#125;&#125;test1\"</span>\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"DEBUG\"><a href=\"#DEBUG\" class=\"headerlink\" title=\"DEBUG\"></a>DEBUG</h6><blockquote>\n<p>调试打印</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建文件test1\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> test1\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; path &#125;&#125;test1\"</span>\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> print var\n      <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">var</span><span class=\"token punctuation\">:</span> path\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> msg\n      <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> this is debug info<span class=\"token punctuation\">,</span>The test file has been touched<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"注册变量\"><a href=\"#注册变量\" class=\"headerlink\" title=\"注册变量\"></a>注册变量</h6><blockquote>\n<p>将模块运行的返回值进行赋值</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test shell\n    <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"cat /etc/hosts\"</span>\n    <span class=\"token key atrule\">register</span><span class=\"token punctuation\">:</span> testvar\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> shell 模块返回值\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">var</span><span class=\"token punctuation\">:</span> testvar\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 指定shell模块的返回\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;testvar.stdout&#125;&#125;\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"交互\"><a href=\"#交互\" class=\"headerlink\" title=\"交互\"></a>交互</h6><blockquote>\n<p>命令行交互输入的变脸类似c语言的scan函数</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">vars_prompt</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"user\"</span>\n      <span class=\"token key atrule\">prompt</span><span class=\"token punctuation\">:</span> \"请选择帐号 \\n\n      root \\n\n      poweruser \\n\n      test \\n\n      \"\n      <span class=\"token key atrule\">private</span><span class=\"token punctuation\">:</span> no <span class=\"token comment\"># 输入的字符显示出来</span>\n      <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span> root <span class=\"token comment\"># 默认值</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"passwd\"</span>\n      <span class=\"token key atrule\">prompt</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"请输入密码\"</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n   <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 输出变量\n     <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> 你的帐号：<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>user<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>;你的密码：<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>passwd<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"命令行传值\"><a href=\"#命令行传值\" class=\"headerlink\" title=\"命令行传值\"></a>命令行传值</h6><blockquote>\n<p>通过命令行输入变量的值</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">var2</span><span class=\"token punctuation\">:</span> default\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"通过命令行传值\"</span>\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> var的值是：<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>var<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>;var2的值： <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>var2<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>将上面的yaml保存为test.yaml然后执行 <code>ansible-playbook -i inventories test.yaml --extra-vars &quot;var=test&quot; -e &quot;var2=test2&quot;</code>,-e是–extra-vars的缩写，<code>命令行的值会覆盖默认值</code><br>还可以使用<code>@</code>传变量文件</p>\n<h6 id=\"主机-组-变量\"><a href=\"#主机-组-变量\" class=\"headerlink\" title=\"主机(组)变量\"></a>主机(组)变量</h6><blockquote>\n<p>为每个主机（组）设置的变量，当使用次主机时变量生效</p>\n</blockquote>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">test</span><span class=\"token punctuation\">]</span></span>\n\n<span class=\"token key attr-name\">localhost hostvar1</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">test_host_var hostvar2=host_var_test</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">test:vars</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">groupvar</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">testgroupvar</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"主机变量\"</span>\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> hostvar1的值是：<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>hostvar1<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>;hostvar2的值： <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>hostvar2<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"主机组变量\"</span>\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> test组的变量是：<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>groupvar<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"set-fact定义变量\"><a href=\"#set-fact定义变量\" class=\"headerlink\" title=\"set_fact定义变量\"></a>set_fact定义变量</h6><blockquote>\n<p>通过set_fact模块配置变量</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">set_fact</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">testvasr</span><span class=\"token punctuation\">:</span> testvas\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 打印值\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;testvasr&#125;&#125;\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"内置变量\"><a href=\"#内置变量\" class=\"headerlink\" title=\"内置变量\"></a>内置变量</h6><blockquote>\n<p>ansible有一些保留变量</p>\n</blockquote>\n<ul>\n<li>ansible_version</li>\n<li>hostvars</li>\n<li>inventory_hostname</li>\n<li>inventory_hostname_short</li>\n<li>play_hosts</li>\n<li>groups</li>\n<li>group_names</li>\n</ul>\n<h5 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h5><h6 id=\"with-items\"><a href=\"#with-items\" class=\"headerlink\" title=\"with_items\"></a>with_items</h6><blockquote>\n<p>以条目为单位循环with_items下的的元素</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 循环打印变量\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token number\">1</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token number\">2</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token number\">3</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 循环打印kv变量\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"k的值是：&#123;&#123;item.k&#125;&#125;:v的值是：&#123;&#123;item.v&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token key atrule\">k</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">v</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token key atrule\">k</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">v</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-list\"><a href=\"#with-list\" class=\"headerlink\" title=\"with_list\"></a>with_list</h6><blockquote>\n<p>以list为单位循环元素,也即是一次性答应出一个list而不是list里面的元素</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 循环打印变量\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印list\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-flattened\"><a href=\"#with-flattened\" class=\"headerlink\" title=\"with_flattened\"></a>with_flattened</h6><blockquote>\n<p>和with_item很像将item一个元素一个元素的打印出来</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 循环打印item\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印list\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_list</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印flattened\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_flattened</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-together\"><a href=\"#with-together\" class=\"headerlink\" title=\"with_together\"></a>with_together</h6><blockquote>\n<p>将list的元素纵排打印</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 循环打印item\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印together\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_together</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-cartesian\"><a href=\"#with-cartesian\" class=\"headerlink\" title=\"with_cartesian\"></a>with_cartesian</h6><blockquote>\n<p>将list的元素交叉打印出来</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印with_cartesian\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_cartesian</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-indexed-items\"><a href=\"#with-indexed-items\" class=\"headerlink\" title=\"with_indexed_items\"></a>with_indexed_items</h6><blockquote>\n<p>将所有list变成一个大的list然后将这个大的list按顺序从0开始添加索引和值</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印with_indexed_items\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_indexed_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-sequence\"><a href=\"#with-sequence\" class=\"headerlink\" title=\"with_sequence\"></a>with_sequence</h6><blockquote>\n<p>类似golang序言的for循环，定义步长开始值，结束值</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> with_sequence\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_sequence</span><span class=\"token punctuation\">:</span> start=1 end=10 stride=2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-dict\"><a href=\"#with-dict\" class=\"headerlink\" title=\"with_dict\"></a>with_dict</h6><blockquote>\n<p>顾名思义是循环处理字典的</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">account</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root\n      <span class=\"token key atrule\">passwd</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123456</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> with_dict\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"键是：&#123;&#123; item.key &#125;&#125; ；值是：&#123;&#123; item.value &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_dict</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;account&#125;&#125;\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-subelements\"><a href=\"#with-subelements\" class=\"headerlink\" title=\"with_subelements\"></a>with_subelements</h6><blockquote>\n<p>也是对字典镜像操作，制定的字段作为key把其他字段作为value</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">account</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">root</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root\n        <span class=\"token key atrule\">passwd</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123456</span>\n        <span class=\"token key atrule\">open</span><span class=\"token punctuation\">:</span> \n          <span class=\"token punctuation\">-</span> tmp\n          <span class=\"token punctuation\">-</span> server\n      <span class=\"token key atrule\">test</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> test\n        <span class=\"token key atrule\">passwd</span><span class=\"token punctuation\">:</span> abc\n        <span class=\"token key atrule\">open</span><span class=\"token punctuation\">:</span> \n          <span class=\"token punctuation\">-</span> hosts\n          <span class=\"token punctuation\">-</span> log\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> with_sequence\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_subelements</span><span class=\"token punctuation\">:</span> \n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"&#123;&#123;account&#125;&#125;\"</span>\n      <span class=\"token punctuation\">-</span> open<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-file\"><a href=\"#with-file\" class=\"headerlink\" title=\"with_file\"></a>with_file</h6><blockquote>\n<p>按行读取一个文件的内容</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> with_file\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_file</span><span class=\"token punctuation\">:</span> \n      <span class=\"token punctuation\">-</span> /etc/hosts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-fileglob\"><a href=\"#with-fileglob\" class=\"headerlink\" title=\"with_fileglob\"></a>with_fileglob</h6><blockquote>\n<p>读取文件名字</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> with_fileglob\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_fileglob</span><span class=\"token punctuation\">:</span> \n      <span class=\"token punctuation\">-</span> /etc/*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"判断\"><a href=\"#判断\" class=\"headerlink\" title=\"判断\"></a>判断</h5><h6 id=\"比较符\"><a href=\"#比较符\" class=\"headerlink\" title=\"比较符\"></a>比较符</h6><ul>\n<li>&#x3D;&#x3D; 相等</li>\n<li>!&#x3D; 不等</li>\n<li>&gt; 大于</li>\n<li>&lt;  小于</li>\n<li>&gt;&#x3D;小于等于</li>\n<li>&lt;&#x3D;大于等于</li>\n</ul>\n<h6 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h6><ul>\n<li>and 与</li>\n<li>or 或</li>\n<li>not 非</li>\n<li>() 组合</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 判断\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">2</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">3</span>\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> item <span class=\"token punctuation\">></span> 2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"文件判断\"><a href=\"#文件判断\" class=\"headerlink\" title=\"文件判断\"></a>文件判断</h6><ul>\n<li>is exists 如果文件存在则为真</li>\n<li>is not exists  如果文件不存在则为假</li>\n<li>not &lt;path&gt; is exists 和is not相同</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token comment\">#gather_facts: false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">testpath</span><span class=\"token punctuation\">:</span> /tmp/test\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 判断/tmp/test文件是否存在\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> 是centos\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span>  testpath is not exists<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"变量判断\"><a href=\"#变量判断\" class=\"headerlink\" title=\"变量判断\"></a>变量判断</h6><ul>\n<li>is defined 定义则为真</li>\n<li>is undefined 没定义则为真</li>\n<li>is none 为空则为真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token comment\">#gather_facts: false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">testpath</span><span class=\"token punctuation\">:</span> /tmp/test\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 判断testpath是否存在\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> testpath文件存在\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> testpath is defined<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"执行结果判断\"><a href=\"#执行结果判断\" class=\"headerlink\" title=\"执行结果判断\"></a>执行结果判断</h6><ul>\n<li>success 或 succeeded 执行成功则返回真</li>\n<li>failure 或 failed    执行失败则返回真</li>\n<li>change 或 changed    执行状态为changed则返回真</li>\n<li>skip 或 skipped      没有满足条件，而被跳过执行时，则返回真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token comment\">#gather_facts: false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> cat /etc/hosts\n    <span class=\"token key atrule\">register</span><span class=\"token punctuation\">:</span> ret\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"执行成功\"</span>\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> ret is success<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"文件类型判断\"><a href=\"#文件类型判断\" class=\"headerlink\" title=\"文件类型判断\"></a>文件类型判断</h6><ul>\n<li>file 是文件则为真</li>\n<li>directory 是目录则为真</li>\n<li>link 软连接则为真</li>\n<li>mount 挂载点则为真</li>\n<li>exists 存在则为真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token comment\">#gather_facts: false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /etc/hosts\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; path &#125;&#125; 是个文件\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> path is file<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"字符串判断\"><a href=\"#字符串判断\" class=\"headerlink\" title=\"字符串判断\"></a>字符串判断</h6><ul>\n<li>lower 字符为小写则为真</li>\n<li>upper 字符为大写则为真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token comment\">#gather_facts: false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> TEST\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; path &#125;&#125; 是大写\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> path is upper<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"整除判断\"><a href=\"#整除判断\" class=\"headerlink\" title=\"整除判断\"></a>整除判断</h6><ul>\n<li>even  偶数为真</li>\n<li>odd  奇数为真</li>\n<li>divisibleby(num) 整除则为真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">X</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n    <span class=\"token key atrule\">Y</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6</span>\n    <span class=\"token key atrule\">Z</span><span class=\"token punctuation\">:</span> <span class=\"token number\">66</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; X &#125;&#125; 是奇数\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> X is odd\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; Y &#125;&#125; 是偶数\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> Y is even\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; Z &#125;&#125; 能被66整除\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> Z is divisibleby(66)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"其他判断\"><a href=\"#其他判断\" class=\"headerlink\" title=\"其他判断\"></a>其他判断</h6><ul>\n<li>version 判断版本大小</li>\n<li>string 是字符则为真</li>\n<li>number 是数字则为真</li>\n<li>subset 一个list是另一个list的子集则为真</li>\n<li>superset 一个list<code>不</code>是另一个list的子集则为真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">Versions</span><span class=\"token punctuation\">:</span> 1.2.4\n    <span class=\"token key atrule\">A</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token number\">3</span>\n    <span class=\"token key atrule\">B</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">str</span><span class=\"token punctuation\">:</span> test\n    <span class=\"token key atrule\">str2</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; Versions &#125;&#125; 版本是否大于1.2.1\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> Versions is version(\"1.2.1\"<span class=\"token punctuation\">,</span>\"<span class=\"token punctuation\">></span>\")\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> b是a的子集\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> B is subset(A)\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> str是字符串\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> str is string\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> str2 是数字\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> str2 is number<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"handler\"><a href=\"#handler\" class=\"headerlink\" title=\"handler\"></a>handler</h5><blockquote>\n<p>在上面的例子中无论前面修改配置文件是否修改都会执行rsyslog重启，这样有些不妥 <br>handler的执行顺序与被notify的顺序无关</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 这样只有配置文件真正被修改了才会执行重启</span>\n<span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改rsyslog配置文件\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog\n      <span class=\"token key atrule\">lineinfile</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/rsyslog.conf\n         <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> ^<span class=\"token comment\">#kern</span>\n         <span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> kern.* /var/log/kern.log\n      <span class=\"token key atrule\">notify</span><span class=\"token punctuation\">:</span>                <span class=\"token comment\"># 引用handlers</span>\n        重启rsyslog服务\n  <span class=\"token key atrule\">handlers</span><span class=\"token punctuation\">:</span>                  <span class=\"token comment\"># 和tasks同级</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 重启rsyslog服务\n      <span class=\"token key atrule\">systemd</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> rsyslog\n         <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> restarted\n         <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>meta关键字可以让notify之后立刻执行handlers</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改rsyslog配置文件\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog\n      <span class=\"token key atrule\">lineinfile</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/rsyslog.conf\n         <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> ^<span class=\"token comment\">#kern</span>\n         <span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> kern.* /var/log/kern.log\n      <span class=\"token key atrule\">notify</span><span class=\"token punctuation\">:</span>\n        重启rsyslog服务\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">meta</span><span class=\"token punctuation\">:</span> flush_handlers\n    \n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 查看配置文件状态\n      <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> cat /etc/rsyslog.conf <span class=\"token punctuation\">|</span>grep \"kern.\\<span class=\"token important\">*\"</span>\n      <span class=\"token key atrule\">register</span><span class=\"token punctuation\">:</span> ps\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> msg=<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> ps.stdout <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token key atrule\">handlers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 重启rsyslog服务\n      <span class=\"token key atrule\">systemd</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> rsyslog\n         <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> restarted\n         <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>listen handlers组</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改rsyslog配置文件\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog\n      <span class=\"token key atrule\">lineinfile</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/rsyslog.conf\n         <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> ^<span class=\"token comment\">#kern</span>\n         <span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> kern.* /var/log/kern.log\n      <span class=\"token key atrule\">notify</span><span class=\"token punctuation\">:</span>\n         handler group1 <span class=\"token comment\"># 通知了handler group1</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">meta</span><span class=\"token punctuation\">:</span> flush_handlers \n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 查看配置文件状态\n      <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> cat /etc/rsyslog.conf <span class=\"token punctuation\">|</span>grep \"kern.\\<span class=\"token important\">*\"</span>\n      <span class=\"token key atrule\">register</span><span class=\"token punctuation\">:</span> ps\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> msg=<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> ps.stdout <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token key atrule\">handlers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 重启rsyslog服务\n      <span class=\"token key atrule\">listen</span><span class=\"token punctuation\">:</span> handler group1\n      <span class=\"token key atrule\">systemd</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> rsyslog\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> restarted\n        <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> yes\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建测试文件\n      <span class=\"token key atrule\">listen</span><span class=\"token punctuation\">:</span> handler group1\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/test\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"include-import-tasks\"><a href=\"#include-import-tasks\" class=\"headerlink\" title=\"include &amp;&amp; import tasks\"></a>include &amp;&amp; import tasks</h5><blockquote>\n<p>当task越来越多的时候如果都在一个文件不是很好管理，将一些相关性很强的写到一个文件然后引用另外的yaml文件 <br>import_tasks静态的，在playbook解析阶段将所有文件中的变量读取加载 <br>include_tasks动态则是在执行playbook之前才会加载自己变量</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改rsyslog配置文件\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog\n      <span class=\"token key atrule\">lineinfile</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/rsyslog.conf\n         <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> ^<span class=\"token comment\">#kern</span>\n         <span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> kern.* /var/log/kern.log\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 查看配置文件状态\n      <span class=\"token key atrule\">import_tasks</span><span class=\"token punctuation\">:</span> config.yaml\n<span class=\"token punctuation\">---</span>\n<span class=\"token comment\"># config.yaml</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 查看配置文件状态\n  <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> cat /etc/rsyslog.conf <span class=\"token punctuation\">|</span>grep \"kern.\\<span class=\"token important\">*\"</span>\n  <span class=\"token key atrule\">register</span><span class=\"token punctuation\">:</span> ps\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> msg=<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> ps.stdout <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"模版\"><a href=\"#模版\" class=\"headerlink\" title=\"模版\"></a>模版</h5><blockquote>\n<p>有些时候应用的配置文件会根据部署的机器调整一些参数，但是大部分参数不需要调整额这个时候就需要模版来处理 <br>ansibel的template<code>模块</code>使用python的jinja2模版引擎</p>\n</blockquote>\n<ul>\n<li>参数:<ul>\n<li>owner  在目标主机上通过模版生成的文件的所属者</li>\n<li>group  在目标主机上通过模版生成的文件的所属组</li>\n<li>mode   在目标主机上通过模版生成的文件的权限</li>\n<li>force  目标主机上已经有了文件是否强制覆盖</li>\n<li>backup 目标主机上已经有了文件是否覆盖</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"占位符\"><a href=\"#占位符\" class=\"headerlink\" title=\"占位符\"></a>占位符</h6><ul>\n<li>&lt;!–swig￼52–&gt; 表达式，比如变量、运算表达式、比较表达式等写法参考<a href=\"#%E6%AF%94%E8%BE%83%E7%AC%A6\">比较符</a></li>\n<li>&lt;!–swig￼53–&gt; 控制语句,如if控制结构，for循环控制结构</li>\n<li>注释，模板文件被渲染后，注释不会包含在最终生成的文件中</li>\n</ul>\n<h6 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h6><p>模版文件：</p>\n<pre class=\"line-numbers language-j2\" data-language=\"j2\"><code class=\"language-j2\">基本变量替换\n&#123;&#123; testvar &#125;&#125;\n\n逻辑计算\n\n&#123;&#123; number &gt; 1 &#125;&#125;\n\n&#123;&#123; number is defined &#125;&#125;\n\n&#123;&#123; &#39;&#x2F;tmp&#39; is exists  &#125;&#125;\n\n数据结构取值\n&#123;&#123; account.user &#125;&#125;\n&#123;&#123; numbers.1 &#125;&#125;\n\n&#123;# 这个是注释 #&#125;\n&#123;# \n这个是多行注释，\n不会在生成的末班中显示\n#&#125;\n\n判断\n&#123;% if numbers.1&gt;1 %&#125;\n嘿嘿嘿\n&#123;% endif %&#125;\n\n循环\n&#123;% for i in [3,14,15,9,26] -%&#125;\n&#123;&#123; i &#125;&#125; &#123;&#123;&#39; &#39;&#125;&#125;\n&#123;%- endfor %&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>playbook如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">testvar</span><span class=\"token punctuation\">:</span> footest\n    <span class=\"token key atrule\">number</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n    <span class=\"token key atrule\">account</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root\n        <span class=\"token key atrule\">passwd</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123456</span>\n    <span class=\"token key atrule\">numbers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">2</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">3</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span> \n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">src</span><span class=\"token punctuation\">:</span> test.j2\n      <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /tmp/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行 <code>ansible-playbook  -i inventories test.yaml</code></p>\n<h5 id=\"角色\"><a href=\"#角色\" class=\"headerlink\" title=\"角色\"></a>角色</h5><blockquote>\n<p>当任务越来越多时一个文件放这么多有些不一样配合include和import分门别类的存放ansible资源文件</p>\n</blockquote>\n<h6 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h6><blockquote>\n<p>每个目录下都有an.yaml用语导入此目录其他的yaml</p>\n</blockquote>\n<pre class=\"line-numbers language-dir\" data-language=\"dir\"><code class=\"language-dir\">.\n├── inventories\n├── roles\n│   ├── defaults\n│   ├── files       # 文件的目录\n│   ├── handlers    # handler目录\n│   ├── meta        # 特殊设定及其依赖关系\n│   ├── tasks       # 存放task的目录\n│   ├── templates   # 存放模版\n│   └── vars        # 存放变量\n└── test.yaml       # 剧本文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"角色例子\"><a href=\"#角色例子\" class=\"headerlink\" title=\"角色例子\"></a>角色例子</h6><p>在和roles文件同级目录创建剧本</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">roles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> roles\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在roles文件夹的task中创建task</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n    <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> hahaha\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>运行<code>ansible-playbook  -i inventories test.yaml</code></p>\n<h5 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h5><blockquote>\n<p>对一些数据进行处理</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">testvar</span><span class=\"token punctuation\">:</span> haha\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; testvar | upper &#125;&#125;\"</span>    <span class=\"token comment\"># 将全部字母转换成大写</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>基本格式就像上面一样其他功能只需要将<code>upper</code>替换为其他的字段即可</p>\n<p>常用过滤器</p>\n<ul>\n<li>upper 字符转换为大写</li>\n<li>lower 字符转换为小写</li>\n<li>indent 设置缩进</li>\n<li>json_query 将字符串作为json</li>\n<li>dirname 路径字符串的路径名</li>\n<li>hash() 进行hash处理</li>\n<li>password_hash 密码专用的hash</li>\n<li>checksum  计算md5</li>\n<li>ipaddr() 需要安装netaddr，针对ip地址处理</li>\n</ul>\n<h5 id=\"lookup\"><a href=\"#lookup\" class=\"headerlink\" title=\"lookup\"></a>lookup</h5><blockquote>\n<p>上面的过滤器和lookup其实都是插件具体介绍:<a href=\"https://docs.ansible.com/ansible/latest/plugins/plugins.html\">https://docs.ansible.com/ansible/latest/plugins/plugins.html</a></p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 渲染模版到变量\n  <span class=\"token key atrule\">set_fact</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">yaml</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&#123;&#123; lookup(\"template\", \"test.j2\") &#125;&#125;'</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 读取文件到变量\n  <span class=\"token key atrule\">set_fact</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&#123;&#123; lookup(\"file\", \"/etc/hosts\") &#125;&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"在本地-只执行一次\"><a href=\"#在本地-只执行一次\" class=\"headerlink\" title=\"在本地&amp;&amp;只执行一次\"></a>在本地&amp;&amp;只执行一次</h5><blockquote>\n<p>有些时候一些剧本在本地执行，就像本地执行shell一样,由于在本地执行所以需要搭配<code>run_once</code></p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> localhost\n  <span class=\"token key atrule\">connection</span><span class=\"token punctuation\">:</span> local\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">run_once</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> no\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> echo \"test\" <span class=\"token punctuation\">></span> /tmp/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"并行执行\"><a href=\"#并行执行\" class=\"headerlink\" title=\"并行执行\"></a>并行执行</h5><blockquote>\n<p>在机器比较多时一台一台执行太慢<code>serial</code>可以指定并行执行的数量</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">serial</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token comment\">#serial: 20% 按百分比</span>\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> no\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> echo \"test\" <span class=\"token punctuation\">></span> /tmp/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"http://www.zsythink.net/archives/category/%e8%bf%90%e7%bb%b4%e7%9b%b8%e5%85%b3/ansible/\">http://www.zsythink.net/archives/category/%e8%bf%90%e7%bb%b4%e7%9b%b8%e5%85%b3/ansible/</a><br><a href=\"https://docs.ansible.com/\">https://docs.ansible.com/</a><br><a href=\"http://www.ansible.com.cn/\">http://www.ansible.com.cn/</a></p>\n","tags":["ansible"]},{"title":"Apache Guacamole","url":"/2020/10/29/apache-Guacamole/","content":"<p>Apache Guacamole是一个基于web的远程终端支持ssh,vnc,rdp等协议</p>\n<span id=\"more\"></span>\n\n<h4 id=\"架构图如下\"><a href=\"#架构图如下\" class=\"headerlink\" title=\"架构图如下\"></a>架构图如下</h4><p>官网地址：<a href=\"http://guacamole.apache.org/\">http://guacamole.apache.org</a></p>\n<p><img src=\"/../images/pasted-4.png\" alt=\"guac-arch\"></p>\n<blockquote>\n<p>从图中可看出分为guacamole服务和guacd服务，guacd服务负责连接远程的vpc，rdp，ssh等服务器</p>\n</blockquote>\n<h4 id=\"安装部署\"><a href=\"#安装部署\" class=\"headerlink\" title=\"安装部署\"></a>安装部署</h4><p>这里使用k8s部署，注意本安装仅用于测试使用，由于mysql没做持久化重启之后数据会丢失</p>\n<h5 id=\"部署guacamole\"><a href=\"#部署guacamole\" class=\"headerlink\" title=\"部署guacamole\"></a>部署guacamole</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kubectl apply <span class=\"token parameter variable\">-f</span> -</span>\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: guacamole\nspec:\n  selector:\n    matchLabels:\n      app: guacamole\n  template:\n    metadata:\n      labels:\n        app: guacamole\n    spec:\n      containers:\n      - env:\n        - name: GUACD_HOSTNAME # guacd地址\n          value: guacamole-guacd\n        - name: MYSQL_DATABASE # mysql数据库\n          value: guacamole\n        - name: MYSQL_HOSTNAME # mysql地址\n          value: guacamole-mysql\n        - name: MYSQL_PASSWORD # mysql密码\n          value: root\n        - name: MYSQL_USER # mysql用户\n          value: root\n        image: guacamole/guacamole:latest # 这里使用了最新版\n        name: guacamole\n        ports:\n        - containerPort: 8080\n          name: 8080tcp02\n          protocol: TCP\n        resources: &#123;&#125;\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: guacamole\nspec:\n  ports:\n  - port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: guacamole\n  type: NodePort # 使用nodeport进行访问，也可以用ingress\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"部署guacd\"><a href=\"#部署guacd\" class=\"headerlink\" title=\"部署guacd\"></a>部署guacd</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kubectl apply <span class=\"token parameter variable\">-f</span> -</span>\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: guacamole-guacd\nspec:\n  selector:\n    matchLabels:\n      app: guacamole-guacd\n  template:\n    metadata:\n      labels:\n        app: guacamole-guacd\n    spec:\n      containers:\n      - name: guacamole-guacd\n        image: guacamole/guacd:latest\n        resources: &#123;&#125;\n        ports:\n        - containerPort: 4822\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: guacamole-guacd\nspec:\n  selector:\n    app: guacamole-guacd\n  ports:\n  - port: 4822\n    targetPort: 4822\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"部署mysql\"><a href=\"#部署mysql\" class=\"headerlink\" title=\"部署mysql\"></a>部署mysql</h5><blockquote>\n<p>mysql可以使用已经有的,且以下资源未做持久化重启之后数据会丢失不要用于生产！！！</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kubectl apply <span class=\"token parameter variable\">-f</span> -</span>\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: guacamole-mysql\nspec:\n  selector:\n    matchLabels:\n      app: guacamole-mysql\n  template:\n    metadata:\n      labels:\n        app: guacamole-mysql\n    spec:\n      containers:\n      - name: guacamole-mysql\n        image: mysql:latest\n        env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: root\n        resources: &#123;&#125;\n        ports:\n        - containerPort: 3306\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: guacamole-mysql\nspec:\n  selector:\n    app: guacamole-mysql\n  ports:\n  - port: 3306\n    targetPort: 3306\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"初始化mysql\"><a href=\"#初始化mysql\" class=\"headerlink\" title=\"初始化mysql\"></a>初始化mysql</h5><ol>\n<li><p>将guacamole的Entrypoint改为<code>sleep 1h</code>以方便进入容器</p>\n</li>\n<li><p>容器里执行<code>/opt/guacamole/bin/initdb.sh --mysql &gt; initdb.sql</code> 导出mysql的表结构</p>\n</li>\n<li><p><code>apt update &amp;&amp; apt install mysql-client</code>安装mysql客户端</p>\n</li>\n<li><p><code>mysql -h guacamole-mysql -uroot -proot</code>登录mysql数据库</p>\n<ul>\n<li>如果出现 ERROR 2059 (HY000): Authentication plugin ‘caching_sha2_password’ cannot be loaded 错误则需要在guacamole-mysql容器里登录数据库执行<br> <code>ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;root&#39;;</code></li>\n</ul>\n</li>\n<li><p><code>create database guacamole;</code> 创建数据库</p>\n</li>\n<li><p><code>use guacamole;</code> 进入数据库， <code>source initdb.sql</code>导入表结构</p>\n</li>\n</ol>\n<h5 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h5><ul>\n<li>因为是nodeport所有可以使用 &lt;nodePort&gt;&#x2F;guacamole</li>\n<li>默认账号密码为guacadmin&#x2F;guacadmin</li>\n</ul>\n<h5 id=\"添加链接\"><a href=\"#添加链接\" class=\"headerlink\" title=\"添加链接\"></a>添加链接</h5><p><img src=\"/../images/pasted-5.png\" alt=\"upload successful\"></p>\n<p>进入配置界面配置根据目标主机的情况填写</p>\n<p><img src=\"/../images/pasted-6.png\" alt=\"upload successful\"></p>\n<p>这个时候首页就出现了可以连接的机器，点击即可连接此机器</p>\n<p><img src=\"/../images/pasted-7.png\" alt=\"upload successful\"></p>\n<p>Ctrl + Alt + Shift 可以打开控制面板，复制文件也可以直接拖进去</p>\n","tags":["终端"]},{"title":"cdi","url":"/2024/07/09/cdi/","content":"<p>CDI(container device interface)是一个容器运行时支持第三方设备的一个规范，类似CNI一样对添加设备进行抽象</p>\n<span id=\"more\"></span>\n\n<p>现有的情况下添加如gpu的一些设备则需要使用nvidia的runtime来替代默认的runtime，这样只能支持nvidia的gpu方法不通用</p>\n<p>设备由完全限定名称唯一指定，该名称由供应商 ID、设备类别以及每个供应商 ID-设备类别对唯一的名称构成</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vendor.com/class<span class=\"token operator\">=</span>unique_name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>cdi的目录在<code>/etc/cdi</code>和<code>/var/run/cdi</code></p>\n<h4 id=\"nvidia\"><a href=\"#nvidia\" class=\"headerlink\" title=\"nvidia\"></a>nvidia</h4><ul>\n<li>nvidia的ctk</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvidia-ctk cdi generate <span class=\"token parameter variable\">--output</span><span class=\"token operator\">=</span>/etc/cdi/nvidia.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"containerd\"><a href=\"#containerd\" class=\"headerlink\" title=\"containerd\"></a>containerd</h4><pre class=\"line-numbers language-toml\" data-language=\"toml\"><code class=\"language-toml\"><span class=\"token punctuation\">[</span><span class=\"token table class-name\">plugins.\"io.containerd.grpc.v1.cri\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key property\">enable_cdi</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token key property\">cdi_spec_dirs</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/etc/cdi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/var/run/cdi\"</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h4><ul>\n<li><code>/etc/docker/daemon.json</code>中配置开启cdi,随后重启</li>\n</ul>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"features\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"cdi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://github.com/cncf-tags/container-device-interface\">https://github.com/cncf-tags/container-device-interface</a><br><a href=\"https://developer.aliyun.com/article/1180698\">https://developer.aliyun.com/article/1180698</a></p>\n","tags":["docker","k8s","gpu"]},{"title":"cilium安装部署","url":"/2023/06/21/cilium%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/","content":"<p>clium是一个使用ebpf实现的cni</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><div class=\"note warning\"><p>ebpf需要高版本内核支持,建议5.0以上</p>\n</div>\n\n<ul>\n<li>下载二进制文件</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">CILIUM_CLI_VERSION</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> https://raw.githubusercontent.com/cilium/cilium-cli/master/stable.txt<span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">CLI_ARCH</span><span class=\"token operator\">=</span>amd64\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-m</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"aarch64\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> <span class=\"token assign-left variable\">CLI_ARCH</span><span class=\"token operator\">=</span>arm64<span class=\"token punctuation\">;</span> <span class=\"token keyword\">fi</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> <span class=\"token parameter variable\">--fail</span> --remote-name-all https://github.com/cilium/cilium-cli/releases/download/<span class=\"token variable\">$&#123;CILIUM_CLI_VERSION&#125;</span>/cilium-linux-<span class=\"token variable\">$&#123;CLI_ARCH&#125;</span>.tar.gz<span class=\"token punctuation\">&#123;</span>,.sha256sum<span class=\"token punctuation\">&#125;</span>\nsha256sum <span class=\"token parameter variable\">--check</span> cilium-linux-<span class=\"token variable\">$&#123;CLI_ARCH&#125;</span>.tar.gz.sha256sum\n<span class=\"token function\">sudo</span> <span class=\"token function\">tar</span> xzvfC cilium-linux-<span class=\"token variable\">$&#123;CLI_ARCH&#125;</span>.tar.gz /usr/local/bin\n<span class=\"token function\">rm</span> cilium-linux-<span class=\"token variable\">$&#123;CLI_ARCH&#125;</span>.tar.gz<span class=\"token punctuation\">&#123;</span>,.sha256sum<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>安装cilium</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cilium <span class=\"token function\">install</span>\n\ncilium status\n\ncilium hubble <span class=\"token builtin class-name\">enable</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>开启hubble可观测性界面</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 下载二进制文件</span>\n<span class=\"token function\">wget</span> https://github.com/cilium/hubble/releases/download/v0.10.0/hubble-linux-amd64.tar.gz\n\n<span class=\"token comment\"># 开启hubble界面</span>\ncilium hubble <span class=\"token builtin class-name\">enable</span> <span class=\"token parameter variable\">--ui</span>\n\n<span class=\"token comment\"># 打开hubble界面</span>\ncilium hubble ui<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://docs.cilium.io/en/stable/\">https://docs.cilium.io/en/stable/</a></p>\n","tags":["k8s","cni","网络"]},{"title":"argocd","url":"/2022/03/04/argocd/","content":"<p>argocd 是个有可视化界面的git-ops工具</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>argocd是一个gitops工具，可以将git上的文件同步到k8s集群，且支持多集群，这样我只需要修改git上的内容就可以完成发布</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><blockquote>\n<p>单节点安装</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl create namespace argocd\nkubectl apply <span class=\"token parameter variable\">-n</span> argocd <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/argoproj/argo-cd/v2.2.5/manifests/install.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>高可用安装</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl create namespace argocd\nkubectl apply <span class=\"token parameter variable\">-n</span> argocd <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/argoproj/argo-cd/v2.2.5/manifests/ha/install.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h4><p>argocd默认安装没有用nodePort，我们需要手动将<code>argocd-server</code>改为nodePort</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl patch svc argocd-server <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"spec\":&#123;\"type\":\"NodePort\"&#125;&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这样就可以通过NodePort来访问了，账号为admin</p>\n<p>获取初始密码</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> argocd get secret argocd-initial-admin-secret <span class=\"token parameter variable\">-o</span> <span class=\"token assign-left variable\">jsonpath</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123;.data.password&#125;\"</span> <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">-d</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>接下来就可以在界面上点点点了</p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://argo-cd.readthedocs.io/en/stable/\">https://argo-cd.readthedocs.io/en/stable/</a></p>\n","tags":["gitops"]},{"title":"Centos8 web console(cockpit)","url":"/2020/08/03/centos8-web-console/","content":"<p>有些时候我们不想登录上centos的服务器执行一些操作这个时候就需要一个图形化界面</p>\n<span id=\"more\"></span>\n\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><pre><code>dnf -y install cockpit\n</code></pre>\n<h5 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h5><pre><code>systemctl start cockpit\n</code></pre>\n<h5 id=\"开机自动启动\"><a href=\"#开机自动启动\" class=\"headerlink\" title=\"开机自动启动\"></a>开机自动启动</h5><pre><code>systemctl enable cockpit\n</code></pre>\n<h5 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h5><p>在浏览器中输入&lt;服务器的IP:9090&gt;即可登录到web界面</p>\n<p>输入账号密码后进去如类似下界面</p>\n<p><img src=\"/../images/pasted-2.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>端口号可以在 <code>/usr/lib/systemd/system/cockpit.socket</code>中修改</p>\n</blockquote>\n","tags":["linux"]},{"title":"chattr","url":"/2022/05/21/chattr/","content":"<p>chattr是一个可以修改文件属性的命令</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>linux是一个多用户系统，防止一个用户删除了另一个用户的文件，有些病毒入侵服务器之后就会修改此属性让管理员无法删除和修改文件</p>\n</blockquote>\n<h4 id=\"基本参数说明\"><a href=\"#基本参数说明\" class=\"headerlink\" title=\"基本参数说明\"></a>基本参数说明</h4><blockquote>\n<p>格式为 chattr [-pRVf] [-+&#x3D;aAcCdDeijPsStTu] [-v version] files…</p>\n</blockquote>\n<p>选项:</p>\n<ul>\n<li>R：用于递归显示目录的列表属性及其内容。</li>\n<li>V：它将显示程序的版本。</li>\n<li>a：用于列出目录的所有文件，其中还包括名称以句点（’.’）开头的文件。</li>\n<li>d：此选项会将目录列为常规文件，而不是列出其内容。</li>\n<li>v：用于显示文件的版本</li>\n</ul>\n<p>操作符:</p>\n<ul>\n<li>-：删除文件一个属性</li>\n<li>+：添加文件一个属性</li>\n<li>&#x3D;：使选定的属性成为文件所具有的唯一属性</li>\n</ul>\n<p>操作属性:</p>\n<ul>\n<li>a：让文件或目录仅供附加用途。</li>\n<li>b：不更新文件或目录的最后存取时间。</li>\n<li>c：将文件或目录压缩后存放。</li>\n<li>d：将文件或目录排除在倾倒操作之外。</li>\n<li>e: 此属性表示文件正在使用扩展数据块映射磁盘上的块。不能使用chattr修改e属性。</li>\n<li>i：不得任意更动文件或目录。</li>\n<li>s：保密性删除文件或目录。</li>\n<li>S：即时更新文件或目录。</li>\n<li>u：预防意外删除。</li>\n</ul>\n<h4 id=\"查看文件属性lsattr\"><a href=\"#查看文件属性lsattr\" class=\"headerlink\" title=\"查看文件属性lsattr\"></a>查看文件属性lsattr</h4><p>列出文件属性</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lsattr <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>只显示了”e”属性</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">--------------e---- <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><p>添加”i”属性</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> chattr +i <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看文件属性</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lsattr <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>增加了”e”属性</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">----i---------e---- <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这个时候写入文件时</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"test\"</span> <span class=\"token operator\">></span> <span class=\"token function\">file</span>\n<span class=\"token comment\"># zsh: operation not permitted: file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>删除文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> <span class=\"token function\">file</span>\nrm: cannot remove <span class=\"token string\">'file'</span><span class=\"token builtin class-name\">:</span> Operation not permitted<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>删除”i”属性</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> chattr <span class=\"token parameter variable\">-i</span> <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这个时候就可以写入和删除操作了</p>\n<p>添加唯一属性</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> chattr <span class=\"token string\">\"=i\"</span> <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>再查看只有一个”i”属性</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lsattr <span class=\"token function\">file</span>\n----i-------------- <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.runoob.com/linux/linux-comm-chattr.html\">https://www.runoob.com/linux/linux-comm-chattr.html</a><br><a href=\"https://www.geeksforgeeks.org/chattr-command-in-linux-with-examples\">https://www.geeksforgeeks.org/chattr-command-in-linux-with-examples</a></p>\n","tags":["lsattr"]},{"title":"containerd基本使用","url":"/2023/10/24/containerd%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","content":"<p>containerd是一个容器运行时标准,也是k8s目前主流的运行时，本文介绍历史，存储方式，和oci</p>\n<span id=\"more\"></span>\n\n<h4 id=\"containerd历史\"><a href=\"#containerd历史\" class=\"headerlink\" title=\"containerd历史\"></a>containerd历史</h4><p>containerd是一个运行时，最开始集成在docker中拆解出来捐赠给cncf，同样被拆解出来的还有runc，以及根据docker镜像v2制定的oci镜像规范</p>\n<ul>\n<li>1.24版本之前k8s的kubelet内置了dokcer-shim插件负责和docker通讯，之后则只能通过cri</li>\n</ul>\n<pre><code class=\"mermaid\">flowchart LR\n  kubelet(kubelet)--&gt;docker-shim(docker-shim)\n  docker-shim(docker-shim)--&gt;docker(docker)\n  docker(docker)--&gt;containers([containers])</code></pre>\n\n<ul>\n<li>最开始cri是一个单独的进程,然后发现效率太差</li>\n</ul>\n<pre><code class=\"mermaid\">flowchart LR\n  kubelet(kubelet)--&quot;grpc&quot;--&gt;cri-plugin(cri-plugin)\n\n  cri-plugin(cri-plugin)--&quot;grpc&quot;--&gt;containerd(containerd)\n\n  containerd(containerd)--&quot;exec&quot;--&gt;containerd-shim-runc(containerd-shim-runc)\n  containerd-shim-runc(containerd-shim-runc)--&quot;exec&quot;--&gt;runc(runc)\n  runc(runc)--&quot;exec&quot;--&gt;containers([containers])</code></pre>\n\n<ul>\n<li>最后将cri已插件的形式集成到containerd中</li>\n</ul>\n<pre><code class=\"mermaid\">flowchart LR\n  kubelet(kubelet)--&quot;grpc&quot;--&gt;cri-plugin(cri-plugin)\n\n  subgraph containerd组件\n  cri-plugin(cri-plugin)--&gt;containerd(containerd)\n  end\n\n  containerd(containerd)--&quot;exec&quot;--&gt;containerd-shim-runc(containerd-shim-runc)\n  containerd-shim-runc(containerd-shim-runc)--&quot;exec&quot;--&gt;runc(runc)\n  runc(runc)--&quot;exec&quot;--&gt;containers([containers])</code></pre>\n\n<h4 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h4><ul>\n<li>全局架构</li>\n</ul>\n<p><img src=\"/../images/containerd-2.png\" alt=\"Alt text\"></p>\n<ul>\n<li>containerd与kubelet</li>\n</ul>\n<p><img src=\"/../images/containerd-1.png\" alt=\"Alt text\"></p>\n<ul>\n<li>内部插件架构</li>\n</ul>\n<p><img src=\"/../images/containerd-3.webp\" alt=\"Alt text\"></p>\n<pre><code class=\"mermaid\">flowchart LR\n  kubectl(kubctl)&lt;--&gt;api-server(api-server)\n\n  subgraph master\n  api-server(api-server)&lt;--&gt;etcd[(etcd)]\n  api-server(api-server)&lt;--&gt;scheduler(scheduler)\n  api-server(api-server)&lt;--&gt;controller-manage(controller-manage)\n  end\n\n  api-server(api-server)&lt;--&gt;kubelet(kubelet)\n  kubelet(kubelet)&lt;--&quot;grpc&quot;--&gt;containerd(containerd)\n\n  subgraph containerd组件\n  containerd(containerd)&lt;--&quot;exec&quot;--&gt;containerd-shim-runc(containerd-shim-runc)\n  containerd-shim-runc(containerd-shim-runc)&lt;--&quot;exec&quot;--&gt;runc(runc)\n  runc(runc)&lt;--&quot;exec&quot;--&gt;containers(containers)\n  end\n\n  api-server(api-server)&lt;--&gt;kube-proxy(kube-proxy)\n  kube-proxy(kube-proxy)&lt;--&gt;ipt(iptables&#x2F;ipvs)</code></pre>\n\n<h4 id=\"containerd下载安装\"><a href=\"#containerd下载安装\" class=\"headerlink\" title=\"containerd下载安装\"></a>containerd下载安装</h4><ul>\n<li><p>docker官方打包的rpm<a href=\"https://download.docker.com/linux/centos/7/x86_64/stable/Packages/\">地址</a></p>\n</li>\n<li><p>官方仓库下载<a href=\"https://github.com/containerd/containerd/releases\">https://github.com/containerd/containerd/releases</a></p>\n</li>\n<li><p>一般安装docker的时候自动安装</p>\n</li>\n</ul>\n<h4 id=\"ctr使用\"><a href=\"#ctr使用\" class=\"headerlink\" title=\"ctr使用\"></a>ctr使用</h4><blockquote>\n<p>containerd可以使用的客户端有很多比如crictl，nerdctl命令</p>\n</blockquote>\n<ul>\n<li><p>–address value, -a value 指定 containerd’s GRPC server，默认 &#x2F;run&#x2F;containerd&#x2F;containerd.sock</p>\n</li>\n<li><p>查看K8S命名空间下的镜像,-n指定namespace</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctr <span class=\"token parameter variable\">-n</span> k8s.io images <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看所有namespace</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctr ns <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>下载镜像</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctr images pull docker.io/library/alpine:3.18.3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>创建 container</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctr c create docker.io/library/alpine:3.18.3 alpine<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctr c <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>后台启动</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctr t start <span class=\"token parameter variable\">-d</span> alpine<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看container</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctr t <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看 k8s 中正在运行的容器</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctr <span class=\"token parameter variable\">-n</span> k8s.io task <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>打tag</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctr images tag docker.io/library/alpine:3.18.3 <span class=\"token operator\">&lt;</span>仓库<span class=\"token operator\">></span>/alpine:3.18.3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>push 上传镜像</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctr images push <span class=\"token operator\">&lt;</span>镜像<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看插件</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctr plugin <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>打印containerd默认配置</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">containerd config default<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"OCI镜像格式\"><a href=\"#OCI镜像格式\" class=\"headerlink\" title=\"OCI镜像格式\"></a>OCI镜像格式</h4><ul>\n<li>各个类型的关系</li>\n</ul>\n<p>oci镜像格式的<code>mediaType</code>参考<a href=\"https://github.com/opencontainers/image-spec/blob/main/media-types.md\">这里</a></p>\n<p><img src=\"/../images/media-types.png\" alt=\"Alt text\"></p>\n<h5 id=\"类型mediaType\"><a href=\"#类型mediaType\" class=\"headerlink\" title=\"类型mediaType\"></a>类型mediaType</h5><blockquote>\n<p>所有例子基于alpine:3.18.3</p>\n</blockquote>\n<h6 id=\"index\"><a href=\"#index\" class=\"headerlink\" title=\"index\"></a>index</h6><ul>\n<li>最顶级的类型主要存放各个操作系统和平台对应的manifest类型</li>\n</ul>\n<details>\n\n<summary>例子</summary>\n\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"manifests\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"digest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha256:c5c5fda71656f28e49ac9c5416b3643eaa6a108a8093151d6d1afc9463be8e33\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"mediaType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.docker.distribution.manifest.v2+json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"platform\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">\"architecture\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"amd64\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"os\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"linux\"</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">528</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"digest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha256:f748290eb66ad6f938e25dd348acfb3527a422e280b7547b1cdfaf38d4492c4b\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"mediaType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.docker.distribution.manifest.v2+json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"platform\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">\"architecture\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"arm\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"os\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"linux\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"variant\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"v6\"</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">528</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"digest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha256:16e86b2388774982fbdf230101a72201691b1f97cb0066c2099abf30dd7e6d59\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"mediaType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.docker.distribution.manifest.v2+json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"platform\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">\"architecture\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"arm\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"os\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"linux\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"variant\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"v7\"</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">528</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"digest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha256:b312e4b0e2c665d634602411fcb7c2699ba748c36f59324457bc17de485f36f6\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"mediaType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.docker.distribution.manifest.v2+json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"platform\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">\"architecture\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"arm64\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"os\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"linux\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"variant\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"v8\"</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">528</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"digest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha256:1fd62556954250bac80d601a196bb7fd480ceba7c10e94dd8fd4c6d1c08783d5\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"mediaType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.docker.distribution.manifest.v2+json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"platform\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">\"architecture\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"386\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"os\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"linux\"</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">528</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"digest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha256:c75ede79e457d6454bca6fc51967a247a4b9daff9f31197cfbef69b1a651cada\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"mediaType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.docker.distribution.manifest.v2+json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"platform\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">\"architecture\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ppc64le\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"os\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"linux\"</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">528</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"digest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha256:5febc00b4d2a84af2a077bc34ea90659b6570110a54253f19c5dca8164b1dbf6\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"mediaType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.docker.distribution.manifest.v2+json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"platform\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">\"architecture\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"s390x\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"os\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"linux\"</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">528</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"mediaType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.docker.distribution.manifest.list.v2+json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"schemaVersion\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</details>\n\n<h6 id=\"manifest\"><a href=\"#manifest\" class=\"headerlink\" title=\"manifest\"></a>manifest</h6><ul>\n<li>主要定义镜像相关的清单，主要包含config类型和layers类型</li>\n</ul>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"schemaVersion\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"mediaType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.docker.distribution.manifest.v2+json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"mediaType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.docker.container.image.v1+json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1471</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"digest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha256:7e01a0d0a1dcd9e539f8e9bbd80106d59efbdf97293b3d38f5d7a34501526cdb\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"layers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token property\">\"mediaType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.docker.image.rootfs.diff.tar.gzip\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3401613</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"digest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha256:7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"config\"><a href=\"#config\" class=\"headerlink\" title=\"config\"></a>config</h6><ul>\n<li>记录镜像的历史，启动参数环境变量以及最重要的解压后的层等信息</li>\n</ul>\n<details>\n\n<summary>例子</summary>\n\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"architecture\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"amd64\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"Hostname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Domainname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"User\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"AttachStdin\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"AttachStdout\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"AttachStderr\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Tty\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"OpenStdin\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"StdinOnce\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Cmd\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"/bin/sh\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Image\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha256:39dfd593e04b939e16d3a426af525cad29b8fc7410b06f4dbad8528b45e1e5a9\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Volumes\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"WorkingDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Entrypoint\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"OnBuild\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Labels\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"container\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ba09fe2c8f99faad95871d467a22c96f4bc8166bd01ce0a7c28dd5472697bfd1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"container_config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"Hostname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ba09fe2c8f99\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Domainname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"User\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"AttachStdin\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"AttachStdout\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"AttachStderr\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Tty\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"OpenStdin\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"StdinOnce\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Cmd\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"/bin/sh\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"#(nop) \"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"CMD [\\\"/bin/sh\\\"]\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Image\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha256:39dfd593e04b939e16d3a426af525cad29b8fc7410b06f4dbad8528b45e1e5a9\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Volumes\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"WorkingDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Entrypoint\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"OnBuild\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Labels\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"created\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-08-07T19:20:20.894140623Z\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"docker_version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"20.10.23\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"history\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"created\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-08-07T19:20:20.71894984Z\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"created_by\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / \"</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"created\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-08-07T19:20:20.894140623Z\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"created_by\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/bin/sh -c #(nop)  CMD [\\\"/bin/sh\\\"]\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"empty_layer\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"os\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"linux\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"rootfs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"layers\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"diff_ids\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230\"</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</details>\n\n<h6 id=\"layer\"><a href=\"#layer\" class=\"headerlink\" title=\"layer\"></a>layer</h6><ul>\n<li>记录压缩过后的层sha256信息,是真正层的内容一般采用tar.gz压缩</li>\n</ul>\n<h5 id=\"下载保存oci镜像格式\"><a href=\"#下载保存oci镜像格式\" class=\"headerlink\" title=\"下载保存oci镜像格式\"></a>下载保存oci镜像格式</h5><p>使用skopeo可以和方便的保存到本地，之前介绍过<a href=\"/2022/12/19/%E4%BD%BF%E7%94%A8skopeo%E5%90%8C%E6%AD%A5docker%E9%95%9C%E5%83%8F/\" title=\"使用skopeo同步docker镜像\">使用skopeo同步docker镜像</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo copy docker://docker.io/alpine:3.18.3 oci:alpine-oci --override-os linux --override-arch amd64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">❯ tree                                                                   \n<span class=\"token builtin class-name\">.</span>\n├── blobs\n│   └── sha256\n│       ├── 7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de\n│       ├── 913cf3a39d377faf89ed388ad913a318a390488c9f34c46e43424795cdabffe8\n│       └── cf4e5bc0709f07284518b287f570c47bdb2afc14b8ae4f14077e9ff810a0120b\n├── index.json\n└── oci-layout\n\n<span class=\"token number\">3</span> directories, <span class=\"token number\">5</span> files\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"Containerd存储方式\"><a href=\"#Containerd存储方式\" class=\"headerlink\" title=\"Containerd存储方式\"></a>Containerd存储方式</h4><h5 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h5><ul>\n<li><p>其目录命名格式以<code>类型.id</code>的格式</p>\n</li>\n<li><p>有些目录根据插件并没有显示</p>\n</li>\n<li><p>默认数据存放在<code>/var/lib/containerd/</code>中</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tree <span class=\"token parameter variable\">-L</span> <span class=\"token number\">2</span>\n<span class=\"token builtin class-name\">.</span>\n├── io.containerd.content.v1.content <span class=\"token comment\"># 存放从hub上下载的源文件</span>\n│   ├── blobs                        <span class=\"token comment\"># 存放下载完毕的文件</span>\n│   └── ingest                       <span class=\"token comment\"># 存放下载未完成的文件</span>\n├── io.containerd.grpc.v1.cri        <span class=\"token comment\"># cri插件存放的文件</span>\n│   ├── containers                   <span class=\"token comment\"># cri创建的容器</span>\n│   └── sandboxes\n├── io.containerd.metadata.v1.bolt   <span class=\"token comment\"># 存放containerd的数据文件</span>\n│   └── meta.db           \n├── io.containerd.runtime.v1.linux\n├── io.containerd.runtime.v2.task    <span class=\"token comment\"># 运行的容器</span>\n│   └── k8s.io                       <span class=\"token comment\"># namespace</span>\n├── io.containerd.snapshotter.v1.native\n│   └── snapshots\n├── io.containerd.snapshotter.v1.overlayfs <span class=\"token comment\"># 存放解压过后的文件</span>\n│   ├── metadata.db                        <span class=\"token comment\"># 解压数据库文件</span>\n│   └── snapshots                          <span class=\"token comment\"># 解压的文件</span>\n└── tmpmounts                              <span class=\"token comment\"># 临时挂载目录</span>\n\n<span class=\"token number\">15</span> directories, <span class=\"token number\">2</span> files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><p><a href=\"https://blog.frognew.com/2021/04/relearning-container-01.html\">https://blog.frognew.com/2021/04/relearning-container-01.html</a></p>\n","tags":["k8s","containerd"]},{"title":"containerd源码-snapshots","url":"/2023/11/03/containerd%E6%BA%90%E7%A0%81-snapshots/","content":"<p>snapshots主要负责存储解压层之后的存储</p>\n<span id=\"more\"></span>\n\n<p>代码版本为v.17.5</p>\n<blockquote>\n<p>snapshot和content的结构类似,其接口定义如下</p>\n</blockquote>\n<h4 id=\"接口定义\"><a href=\"#接口定义\" class=\"headerlink\" title=\"接口定义\"></a>接口定义</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// snapshots/snapshotter.go</span>\n<span class=\"token keyword\">type</span> Snapshotter <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">Stat</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Info<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> info Info<span class=\"token punctuation\">,</span> fieldpaths <span class=\"token operator\">...</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Info<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">Usage</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Usage<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">Mounts</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 只是返回了mount参数并没有真正的mount</span>\n  <span class=\"token function\">Prepare</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 创建snap</span>\n  <span class=\"token function\">View</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 和commit一样只不过是只读的</span>\n  <span class=\"token function\">Commit</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> key <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token comment\">// 提交</span>\n  <span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token comment\">// 删除</span>\n  <span class=\"token function\">Walk</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> fn WalkFunc<span class=\"token punctuation\">,</span> filters <span class=\"token operator\">...</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span>\n  <span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"snapshot-grpc类型\"><a href=\"#snapshot-grpc类型\" class=\"headerlink\" title=\"snapshot grpc类型\"></a>snapshot grpc类型</h4><ul>\n<li>注册插件，他依赖于service类型,同样实现了Register方法调用了grpc进行api注册服务</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/snapshots/service.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>GRPCPlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"snapshots\"</span><span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> newService<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">newService</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugins<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">GetByType</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  p<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> plugins<span class=\"token punctuation\">[</span>services<span class=\"token punctuation\">.</span>SnapshotsService<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>ok <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"snapshots service not found\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  i<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">Instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  ss <span class=\"token operator\">:=</span> i<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>snapshots<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>service<span class=\"token punctuation\">&#123;</span>ss<span class=\"token punctuation\">:</span> ss<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>service<span class=\"token punctuation\">)</span> <span class=\"token function\">Register</span><span class=\"token punctuation\">(</span>gs <span class=\"token operator\">*</span>grpc<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n  snapshotsapi<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterSnapshotsServer</span><span class=\"token punctuation\">(</span>gs<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>snapshot的service有个map,因为snapshotter有很多实现，比如默认的<code>overlayfs</code>还有<code>devmapper</code>等</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> service <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n  ss <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>snapshots<span class=\"token punctuation\">.</span>Snapshotter\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>我们看下其中一个api的实现，主要是处理grpc的请求和响应操作，需要注意的是传入的参数中有<code>Snapshotter</code>id,然后执行对应的snap的api,后面就到了service层处理</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>service<span class=\"token punctuation\">)</span> <span class=\"token function\">Prepare</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> pr <span class=\"token operator\">*</span>snapshotsapi<span class=\"token punctuation\">.</span>PrepareSnapshotRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>snapshotsapi<span class=\"token punctuation\">.</span>PrepareSnapshotResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"parent\"</span><span class=\"token punctuation\">,</span> pr<span class=\"token punctuation\">.</span>Parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">,</span> pr<span class=\"token punctuation\">.</span>Key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Debugf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prepare snapshot\"</span><span class=\"token punctuation\">)</span>\n  sn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">getSnapshotter</span><span class=\"token punctuation\">(</span>pr<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> opts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>snapshots<span class=\"token punctuation\">.</span>Opt\n  <span class=\"token keyword\">if</span> pr<span class=\"token punctuation\">.</span>Labels <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    opts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">,</span> snapshots<span class=\"token punctuation\">.</span><span class=\"token function\">WithLabels</span><span class=\"token punctuation\">(</span>pr<span class=\"token punctuation\">.</span>Labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  mounts<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> sn<span class=\"token punctuation\">.</span><span class=\"token function\">Prepare</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> pr<span class=\"token punctuation\">.</span>Key<span class=\"token punctuation\">,</span> pr<span class=\"token punctuation\">.</span>Parent<span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>snapshotsapi<span class=\"token punctuation\">.</span>PrepareSnapshotResponse<span class=\"token punctuation\">&#123;</span>\n    Mounts<span class=\"token punctuation\">:</span> <span class=\"token function\">fromMounts</span><span class=\"token punctuation\">(</span>mounts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"snapshot-service类型\"><a href=\"#snapshot-service类型\" class=\"headerlink\" title=\"snapshot service类型\"></a>snapshot service类型</h4><ul>\n<li>依赖MetadataPlugin类型吗,调用<code>db.Snapshotters()</code>拿到snap,meterdata里通过NewDB()传值</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">// services/snapshots/snapshotters.go</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   services<span class=\"token punctuation\">.</span>SnapshotsService<span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      m<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">)</span>\n\n      db <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>metadata<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">)</span>\n      ss <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>snapshots<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> n<span class=\"token punctuation\">,</span> sn <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">Snapshotters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ss<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">newSnapshotter</span><span class=\"token punctuation\">(</span>sn<span class=\"token punctuation\">,</span> ic<span class=\"token punctuation\">.</span>Events<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> ss<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>实际调用了metedata的<code>Prepare()</code>,这里进行了大量的数据库操作</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>snapshotter<span class=\"token punctuation\">)</span> <span class=\"token function\">Prepare</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>snapshots<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  mounts<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">.</span><span class=\"token function\">Prepare</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span>publisher<span class=\"token punctuation\">.</span><span class=\"token function\">Publish</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/snapshot/prepare\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>eventstypes<span class=\"token punctuation\">.</span>SnapshotPrepare<span class=\"token punctuation\">&#123;</span>\n    Key<span class=\"token punctuation\">:</span>    key<span class=\"token punctuation\">,</span>\n    Parent<span class=\"token punctuation\">:</span> parent<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> mounts<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这可以可以看到prepare和view实现都是一样的只不过view是只读的</li>\n<li>源码很长这里不放了,其主要在数据存记录snap相关信息</li>\n<li>随后调用真正的snap实现</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// containerd/metadata/snapshot.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>snapshotter<span class=\"token punctuation\">)</span> <span class=\"token function\">Prepare</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>snapshots<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">createSnapshot</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>snapshotter<span class=\"token punctuation\">)</span> <span class=\"token function\">View</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>snapshots<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">createSnapshot</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>snapshotter<span class=\"token punctuation\">)</span> <span class=\"token function\">createSnapshot</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> readonly <span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> opts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>snapshots<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 校验参数以及复制等代码略过</span>\n\n  <span class=\"token keyword\">if</span> readonly <span class=\"token punctuation\">&#123;</span>\n    m<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">.</span><span class=\"token function\">View</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> bkey<span class=\"token punctuation\">,</span> bparent<span class=\"token punctuation\">,</span> bopts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    m<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">.</span><span class=\"token function\">Prepare</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> bkey<span class=\"token punctuation\">,</span> bparent<span class=\"token punctuation\">,</span> bopts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"snapshot类型\"><a href=\"#snapshot类型\" class=\"headerlink\" title=\"snapshot类型\"></a>snapshot类型</h4><ul>\n<li>直接返回了<code>overlay.NewSnapshotter()</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// snapshots/overlay/plugin/plugin.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span>   plugin<span class=\"token punctuation\">.</span>SnapshotPlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"overlayfs\"</span><span class=\"token punctuation\">,</span>\n    Config<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>Config<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Platforms <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Platforms<span class=\"token punctuation\">,</span> platforms<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultSpec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      config<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Config<span class=\"token punctuation\">)</span>\n\n      root <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span>Root\n      <span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>RootPath <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n        root <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>RootPath\n      <span class=\"token punctuation\">&#125;</span>\n\n      ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Exports<span class=\"token punctuation\">[</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> root\n      <span class=\"token keyword\">return</span> overlay<span class=\"token punctuation\">.</span><span class=\"token function\">NewSnapshotter</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> overlay<span class=\"token punctuation\">.</span>AsynchronousRemove<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>New函数中依然执行opt相关的操作,然后创建了目录随后创建数据库文件到这个目录中，注意这个数据库不metedata的数据库而是snap自己的数据库</li>\n<li>读取了一些overlay相关参数</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// snapshots/overlay/overlay.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">NewSnapshotter</span><span class=\"token punctuation\">(</span>root <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>snapshots<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> config SnapshotterConfig\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> opt <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> opts <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">opt</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">MkdirAll</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">0700</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\n\n  ms<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> storage<span class=\"token punctuation\">.</span><span class=\"token function\">NewMetaStore</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token string\">\"metadata.db\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Mkdir</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token string\">\"snapshots\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0700</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>os<span class=\"token punctuation\">.</span><span class=\"token function\">IsExist</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// figure out whether \"userxattr\" option is recognized by the kernel &amp;&amp; needed</span>\n  userxattr<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> overlayutils<span class=\"token punctuation\">.</span><span class=\"token function\">NeedsUserXAttr</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    logrus<span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Warnf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cannot detect whether \\\"userxattr\\\" option needs to be used, assuming to be %v\"</span><span class=\"token punctuation\">,</span> userxattr<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>snapshotter<span class=\"token punctuation\">&#123;</span>\n    root<span class=\"token punctuation\">:</span>        root<span class=\"token punctuation\">,</span>\n    ms<span class=\"token punctuation\">:</span>          ms<span class=\"token punctuation\">,</span>\n    asyncRemove<span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">.</span>asyncRemove<span class=\"token punctuation\">,</span>\n    indexOff<span class=\"token punctuation\">:</span>    indexOff<span class=\"token punctuation\">,</span>\n    userxattr<span class=\"token punctuation\">:</span>   userxattr<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>和前面调用的PrePare结构很相似,也只是传递的是否只读不一样</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">*</span>snapshotter<span class=\"token punctuation\">)</span> <span class=\"token function\">Prepare</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>snapshots<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">createSnapshot</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> snapshots<span class=\"token punctuation\">.</span>KindActive<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">*</span>snapshotter<span class=\"token punctuation\">)</span> <span class=\"token function\">View</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>snapshots<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">createSnapshot</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> snapshots<span class=\"token punctuation\">.</span>KindView<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>首先创建一个临时目录然后数据中创建snap记录,如果有parent则修改guid,然后修改名字为正式的snap目录</li>\n<li>最后通过mount函数返回</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// snapshots/overlay/overlay.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">*</span>snapshotter<span class=\"token punctuation\">)</span> <span class=\"token function\">createSnapshot</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> kind snapshots<span class=\"token punctuation\">.</span>Kind<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>snapshots<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">_</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> o<span class=\"token punctuation\">.</span>ms<span class=\"token punctuation\">.</span><span class=\"token function\">WithTransaction</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    td<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">prepareDirectory</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> snapshotDir<span class=\"token punctuation\">,</span> kind<span class=\"token punctuation\">)</span>\n\n    s<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span><span class=\"token function\">CreateSnapshot</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> kind<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n \n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>ParentIDs<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n      st<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Stat</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span><span class=\"token function\">upperPath</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>ParentIDs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n      stat <span class=\"token operator\">:=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">Sys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>syscall<span class=\"token punctuation\">.</span>Stat_t<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Lchown</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>td<span class=\"token punctuation\">,</span> <span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>stat<span class=\"token punctuation\">.</span>Uid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>stat<span class=\"token punctuation\">.</span>Gid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    path <span class=\"token operator\">=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>snapshotDir<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Rename</span><span class=\"token punctuation\">(</span>td<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to rename: %w\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    td <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">mounts</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>mount函数根据snapshotter的ParentIDs来判断是否返回读写的bind类型挂载</li>\n<li>通过判断是否是active来返回只读的bind类型挂载</li>\n<li>最后通过ParentIDs组合overlay的参数</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// snapshots/overlay/overlay.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">*</span>snapshotter<span class=\"token punctuation\">)</span> <span class=\"token function\">mounts</span><span class=\"token punctuation\">(</span>s storage<span class=\"token punctuation\">.</span>Snapshot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>ParentIDs<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// if we only have one layer/no parents then just return a bind mount as overlay</span>\n    <span class=\"token comment\">// will not work</span>\n    roFlag <span class=\"token operator\">:=</span> <span class=\"token string\">\"rw\"</span>\n    <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>Kind <span class=\"token operator\">==</span> snapshots<span class=\"token punctuation\">.</span>KindView <span class=\"token punctuation\">&#123;</span>\n      roFlag <span class=\"token operator\">=</span> <span class=\"token string\">\"ro\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">&#123;</span>\n      <span class=\"token punctuation\">&#123;</span>\n        Source<span class=\"token punctuation\">:</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">upperPath</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        Type<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"bind\"</span><span class=\"token punctuation\">,</span>\n        Options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>\n          roFlag<span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"rbind\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  options <span class=\"token operator\">:=</span> o<span class=\"token punctuation\">.</span>options\n  <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>Kind <span class=\"token operator\">==</span> snapshots<span class=\"token punctuation\">.</span>KindActive <span class=\"token punctuation\">&#123;</span>\n    options <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span>\n      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"workdir=%s\"</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">workPath</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"upperdir=%s\"</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">upperPath</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>ParentIDs<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">&#123;</span>\n      <span class=\"token punctuation\">&#123;</span>\n        Source<span class=\"token punctuation\">:</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">upperPath</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>ParentIDs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        Type<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"bind\"</span><span class=\"token punctuation\">,</span>\n        Options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>\n          <span class=\"token string\">\"ro\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"rbind\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  parentPaths <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>ParentIDs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> s<span class=\"token punctuation\">.</span>ParentIDs <span class=\"token punctuation\">&#123;</span>\n    parentPaths<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">upperPath</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>ParentIDs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  options <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lowerdir=%s\"</span><span class=\"token punctuation\">,</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>parentPaths<span class=\"token punctuation\">,</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#123;</span>\n      Type<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"overlay\"</span><span class=\"token punctuation\">,</span>\n      Source<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"overlay\"</span><span class=\"token punctuation\">,</span>\n      Options<span class=\"token punctuation\">:</span> options<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"bind-mount\"><a href=\"#bind-mount\" class=\"headerlink\" title=\"bind mount\"></a>bind mount</h4><ul>\n<li>bind的mount类型是linux内核实现的一种挂载他和链接(<code>link</code>)实现的功能很像,但是他实现更底层在vfs之下</li>\n<li>参数rbind表示目录下的目录递归挂载到而不是这是这个一个,</li>\n<li>ro则表示只读</li>\n</ul>\n<p><img src=\"/../images/containerd-6.png\" alt=\"Alt text\"></p>\n<ul>\n<li>bind相当于修改了文件的inode到挂载的目录上</li>\n</ul>\n<p><img src=\"/../images/containerd-7.png\" alt=\"Alt text\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> test1 test2\n<span class=\"token function\">ls</span> <span class=\"token parameter variable\">-li</span>\n<span class=\"token comment\"># 总用量 0</span>\n<span class=\"token comment\"># 34260425 drwxr-xr-x 2 root root 6 10月 31 17:32 test1</span>\n<span class=\"token comment\"># 50339286 drwxr-xr-x 2 root root 6 10月 31 17:32 test2</span>\n\n<span class=\"token function\">mount</span> <span class=\"token parameter variable\">--bind</span> ./test1 ./test2/\n\nll <span class=\"token parameter variable\">-ti</span>\n<span class=\"token comment\"># 总用量 0</span>\n<span class=\"token comment\"># 34260425 drwxr-xr-x 2 root root 6 10月 31 17:32 test1</span>\n<span class=\"token comment\"># 34260425 drwxr-xr-x 2 root root 6 10月 31 17:32 test2</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"foo\"</span><span class=\"token operator\">></span> ./test1/test\n<span class=\"token function\">cat</span> ./test2/test\n<span class=\"token comment\"># foo</span>\n\n<span class=\"token comment\"># 显示的挂载是vda1而是test1</span>\n<span class=\"token function\">mount</span> <span class=\"token parameter variable\">-l</span> <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token comment\"># /dev/vda1 on /data/test/test2 type xfs (rw,relatime,attr2,inode64,noquota)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><p><a href=\"https://blog.csdn.net/weixin_40864891/article/details/107330218\">https://blog.csdn.net/weixin_40864891/article/details/107330218</a></p>\n","tags":["k8s","containerd"]},{"title":"containerd源码-启动容器","url":"/2023/11/20/containerd%E6%BA%90%E7%A0%81-%E5%90%AF%E5%8A%A8%E5%AE%B9%E5%99%A8/","content":"<p>containerd得启动也分为服务端和客户端</p>\n<span id=\"more\"></span>\n\n<p>代码版本为v.17.5</p>\n<h4 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h4><blockquote>\n<p>ctr启动一个pod有两种方式，一个是是run命令直接启动一个pod，还有一种先创建container，在创建task在启动,run命令指示把contaIner和task一块处理了</p>\n</blockquote>\n<h4 id=\"container-create\"><a href=\"#container-create\" class=\"headerlink\" title=\"container create\"></a>container create</h4><ul>\n<li>入口这里</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/ctr/commands/containers/containers.go</span>\n<span class=\"token keyword\">var</span> createCommand <span class=\"token operator\">=</span> cli<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">&#123;</span>\n  Name<span class=\"token punctuation\">:</span>      <span class=\"token string\">\"create\"</span><span class=\"token punctuation\">,</span>\n  Usage<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"create container\"</span><span class=\"token punctuation\">,</span>\n  ArgsUsage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"[flags] Image|RootFS CONTAINER [COMMAND] [ARG...]\"</span><span class=\"token punctuation\">,</span>\n  Flags<span class=\"token punctuation\">:</span>     <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>commands<span class=\"token punctuation\">.</span>SnapshotterFlags<span class=\"token punctuation\">,</span> commands<span class=\"token punctuation\">.</span>ContainerFlags<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  Action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>context <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 参数处理</span>\n    client<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">,</span> cancel<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> commands<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">defer</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">NewContainer</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> client<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>去除配置相关的主要是查看snapshotter中有没有解压如果没有则解压，然后将处理后的配置信息传递给<code>client.NewContainer()</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/ctr/commands/run/run_unix.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">NewContainer</span><span class=\"token punctuation\">(</span>ctx gocontext<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> client <span class=\"token operator\">*</span>containerd<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">,</span> context <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>containerd<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// ...</span>\n      i<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">ImageService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> ps <span class=\"token operator\">:=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"platform\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ps <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n        platform<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> platforms<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">)</span>\n        image <span class=\"token operator\">=</span> containerd<span class=\"token punctuation\">.</span><span class=\"token function\">NewImageWithPlatform</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> platforms<span class=\"token punctuation\">.</span><span class=\"token function\">Only</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        image <span class=\"token operator\">=</span> containerd<span class=\"token punctuation\">.</span><span class=\"token function\">NewImage</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\n\n      unpacked<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">IsUnpacked</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> snapshotter<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>unpacked <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">Unpack</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> snapshotter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n  cOpts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>cOpts<span class=\"token punctuation\">,</span> spec<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">NewContainer</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> cOpts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>随后将前面的参数传递到Container，然后调用grpc创建<code>container</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// client.go</span>\n\n\n<span class=\"token comment\">// NewContainer will create a new container in container with the provided id</span>\n<span class=\"token comment\">// the id must be unique within the namespace</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>Client<span class=\"token punctuation\">)</span> <span class=\"token function\">NewContainer</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> id <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>NewContainerOpts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Container<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  ctx<span class=\"token punctuation\">,</span> done<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">WithLease</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">defer</span> <span class=\"token function\">done</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\n  container <span class=\"token operator\">:=</span> containers<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">&#123;</span>\n    ID<span class=\"token punctuation\">:</span> id<span class=\"token punctuation\">,</span>\n    Runtime<span class=\"token punctuation\">:</span> containers<span class=\"token punctuation\">.</span>RuntimeInfo<span class=\"token punctuation\">&#123;</span>\n      Name<span class=\"token punctuation\">:</span> c<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> opts <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  r<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">ContainerService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">containerFromRecord</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"task-start\"><a href=\"#task-start\" class=\"headerlink\" title=\"task start\"></a>task start</h4><ul>\n<li>前面创建完容器之后就需要创建一个task</li>\n<li>创建完task之后就启动task，这里处理detach这个参数如果有则不会退出之后删除</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/ctr/commands/tasks/start.go</span>\n\n<span class=\"token keyword\">var</span> startCommand <span class=\"token operator\">=</span> cli<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">&#123;</span>\n  Name<span class=\"token punctuation\">:</span>      <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">,</span>\n  Usage<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"start a container that has been created\"</span><span class=\"token punctuation\">,</span>\n  ArgsUsage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"CONTAINER\"</span><span class=\"token punctuation\">,</span>\n  Flags<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Flag<span class=\"token punctuation\">&#123;</span>\n    cli<span class=\"token punctuation\">.</span>BoolFlag<span class=\"token punctuation\">&#123;</span>\n      Name<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"null-io\"</span><span class=\"token punctuation\">,</span>\n      Usage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"send all IO to /dev/null\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span>\n      Name<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"log-uri\"</span><span class=\"token punctuation\">,</span>\n      Usage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"log uri\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span>\n      Name<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"fifo-dir\"</span><span class=\"token punctuation\">,</span>\n      Usage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"directory used for storing IO FIFOs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    cli<span class=\"token punctuation\">.</span>StringFlag<span class=\"token punctuation\">&#123;</span>\n      Name<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"pid-file\"</span><span class=\"token punctuation\">,</span>\n      Usage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"file path to write the task's pid\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    cli<span class=\"token punctuation\">.</span>BoolFlag<span class=\"token punctuation\">&#123;</span>\n      Name<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"detach,d\"</span><span class=\"token punctuation\">,</span>\n      Usage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"detach from the task after it has started execution\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  Action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>context <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    client<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">,</span> cancel<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> commands<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">defer</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    container<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">LoadContainer</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n\n    spec<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">Spec</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> con console<span class=\"token punctuation\">.</span>Console\n    <span class=\"token keyword\">if</span> tty <span class=\"token punctuation\">&#123;</span>\n      con <span class=\"token operator\">=</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">Current</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">defer</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">SetRaw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    task<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">NewTask</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> client<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">Bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"null-io\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log-uri\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ioOpts<span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">var</span> statusC <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> containerd<span class=\"token punctuation\">.</span>ExitStatus\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>detach <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">defer</span> task<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> statusC<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">IsSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pid-file\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> commands<span class=\"token punctuation\">.</span><span class=\"token function\">WritePidFile</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pid-file\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">.</span><span class=\"token function\">Pid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> task<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> detach <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    status <span class=\"token operator\">:=</span> <span class=\"token operator\">&lt;-</span>statusC\n    code<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> status<span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> task<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> code <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> cli<span class=\"token punctuation\">.</span><span class=\"token function\">NewExitError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>NewTask处理了下命令行相关，然后调用了container.NewTask()</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/ctr/commands/tasks/tasks_unix.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">NewTask</span><span class=\"token punctuation\">(</span>ctx gocontext<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> client <span class=\"token operator\">*</span>containerd<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">,</span> container containerd<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">,</span> checkpoint <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> con console<span class=\"token punctuation\">.</span>Console<span class=\"token punctuation\">,</span> nullIO <span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> logURI <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> ioOpts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cio<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>containerd<span class=\"token punctuation\">.</span>NewTaskOpts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>containerd<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  stdinC <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>stdinCloser<span class=\"token punctuation\">&#123;</span>\n    stdin<span class=\"token punctuation\">:</span> os<span class=\"token punctuation\">.</span>Stdin<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> checkpoint <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n    im<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">GetImage</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> checkpoint<span class=\"token punctuation\">)</span>\n\n    opts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">,</span> containerd<span class=\"token punctuation\">.</span><span class=\"token function\">WithTaskCheckpoint</span><span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">var</span> ioCreator cio<span class=\"token punctuation\">.</span>Creator\n  <span class=\"token keyword\">if</span> con <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> nullIO <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tty and null-io cannot be used together\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    ioCreator <span class=\"token operator\">=</span> cio<span class=\"token punctuation\">.</span><span class=\"token function\">NewCreator</span><span class=\"token punctuation\">(</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cio<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">&#123;</span>cio<span class=\"token punctuation\">.</span><span class=\"token function\">WithStreams</span><span class=\"token punctuation\">(</span>con<span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cio<span class=\"token punctuation\">.</span>WithTerminal<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> ioOpts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> nullIO <span class=\"token punctuation\">&#123;</span>\n    ioCreator <span class=\"token operator\">=</span> cio<span class=\"token punctuation\">.</span>NullIO\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> logURI <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n    u<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> url<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>logURI<span class=\"token punctuation\">)</span>\n    ioCreator <span class=\"token operator\">=</span> cio<span class=\"token punctuation\">.</span><span class=\"token function\">LogURI</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    ioCreator <span class=\"token operator\">=</span> cio<span class=\"token punctuation\">.</span><span class=\"token function\">NewCreator</span><span class=\"token punctuation\">(</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cio<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">&#123;</span>cio<span class=\"token punctuation\">.</span><span class=\"token function\">WithStreams</span><span class=\"token punctuation\">(</span>stdinC<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>Stdout<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>Stderr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> ioOpts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  t<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">NewTask</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> ioCreator<span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n\n  stdinC<span class=\"token punctuation\">.</span>closer <span class=\"token operator\">=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    t<span class=\"token punctuation\">.</span><span class=\"token function\">CloseIO</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> containerd<span class=\"token punctuation\">.</span>WithStdinCloser<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"run命令\"><a href=\"#run命令\" class=\"headerlink\" title=\"run命令\"></a>run命令</h5><ul>\n<li>基本就是将<code>container create</code>和<code>task start</code>的逻辑组合到一块</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// Command runs a container</span>\n<span class=\"token keyword\">var</span> Command <span class=\"token operator\">=</span> cli<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">&#123;</span>\n  Name<span class=\"token punctuation\">:</span>           <span class=\"token string\">\"run\"</span><span class=\"token punctuation\">,</span>\n  Usage<span class=\"token punctuation\">:</span>          <span class=\"token string\">\"run a container\"</span><span class=\"token punctuation\">,</span>\n  ArgsUsage<span class=\"token punctuation\">:</span>      <span class=\"token string\">\"[flags] Image|RootFS ID [COMMAND] [ARG...]\"</span><span class=\"token punctuation\">,</span>\n  SkipArgReorder<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  Flags<span class=\"token punctuation\">:</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Flag<span class=\"token punctuation\">&#123;</span>\n    cli<span class=\"token punctuation\">.</span>BoolFlag<span class=\"token punctuation\">&#123;</span>\n      Name<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"detach,d\"</span><span class=\"token punctuation\">,</span>\n      Usage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"detach from the task after it has started execution\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>platformRunFlags<span class=\"token punctuation\">,</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>commands<span class=\"token punctuation\">.</span>SnapshotterFlags<span class=\"token punctuation\">,</span> commands<span class=\"token punctuation\">.</span>ContainerFlags<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  Action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>context <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n\n    client<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">,</span> cancel<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> commands<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n  \n    <span class=\"token keyword\">defer</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    container<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">NewContainer</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> client<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span>\n  \n    <span class=\"token keyword\">if</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">Bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rm\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>detach <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">defer</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> containerd<span class=\"token punctuation\">.</span>WithSnapshotCleanup<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">var</span> con console<span class=\"token punctuation\">.</span>Console\n    <span class=\"token keyword\">if</span> tty <span class=\"token punctuation\">&#123;</span>\n      con <span class=\"token operator\">=</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">Current</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">defer</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">SetRaw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">var</span> network gocni<span class=\"token punctuation\">.</span>CNI\n    <span class=\"token keyword\">if</span> enableCNI <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> network<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> gocni<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>gocni<span class=\"token punctuation\">.</span>WithDefaultConf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    opts <span class=\"token operator\">:=</span> <span class=\"token function\">getNewTaskOpts</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n    ioOpts <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cio<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">&#123;</span>cio<span class=\"token punctuation\">.</span><span class=\"token function\">WithFIFODir</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fifo-dir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>\n    task<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> tasks<span class=\"token punctuation\">.</span><span class=\"token function\">NewTask</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> client<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"checkpoint\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">Bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"null-io\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log-uri\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ioOpts<span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n \n\n    <span class=\"token keyword\">var</span> statusC <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> containerd<span class=\"token punctuation\">.</span>ExitStatus\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>detach <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> enableCNI <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> network<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> <span class=\"token function\">fullID</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n            logrus<span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"network review\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        task<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> statusC<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> task<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> tty <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> tasks<span class=\"token punctuation\">.</span><span class=\"token function\">HandleConsoleResize</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        logrus<span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"console resize\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      sigc <span class=\"token operator\">:=</span> commands<span class=\"token punctuation\">.</span><span class=\"token function\">ForwardAllSignals</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">defer</span> commands<span class=\"token punctuation\">.</span><span class=\"token function\">StopCatch</span><span class=\"token punctuation\">(</span>sigc<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    status <span class=\"token operator\">:=</span> <span class=\"token operator\">&lt;-</span>statusC\n    code<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> status<span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> task<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> code <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> cli<span class=\"token punctuation\">.</span><span class=\"token function\">NewExitError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h4><h5 id=\"container\"><a href=\"#container\" class=\"headerlink\" title=\"container\"></a>container</h5><h6 id=\"container-grpc\"><a href=\"#container-grpc\" class=\"headerlink\" title=\"container grpc\"></a>container grpc</h6><ul>\n<li>插件注册，依赖一个service</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/containers/service.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>GRPCPlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"containers\"</span><span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      plugins<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">GetByType</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n      p<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> plugins<span class=\"token punctuation\">[</span>services<span class=\"token punctuation\">.</span>ContainersService<span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>ok <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"containers service not found\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      i<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">Instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>service<span class=\"token punctuation\">&#123;</span>local<span class=\"token punctuation\">:</span> i<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">.</span>ContainersClient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>api则直接调用了上层</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>service<span class=\"token punctuation\">)</span> <span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req <span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>CreateContainerRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>CreateContainerResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span>local<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"container-service\"><a href=\"#container-service\" class=\"headerlink\" title=\"container service\"></a>container service</h6><ul>\n<li>插件注册</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/containers/local.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   services<span class=\"token punctuation\">.</span>ContainersService<span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      m<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">)</span>\n\n      db <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>metadata<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>local<span class=\"token punctuation\">&#123;</span>\n        Store<span class=\"token punctuation\">:</span>     metadata<span class=\"token punctuation\">.</span><span class=\"token function\">NewContainerStore</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        db<span class=\"token punctuation\">:</span>        db<span class=\"token punctuation\">,</span>\n        publisher<span class=\"token punctuation\">:</span> ic<span class=\"token punctuation\">.</span>Events<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>主要调用了<code>Store.Create()</code>数据库中创建一个<code>container</code>,且上传了事件</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/containers/local.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">*</span>local<span class=\"token punctuation\">)</span> <span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req <span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>CreateContainerRequest<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">...</span>grpc<span class=\"token punctuation\">.</span>CallOption<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>CreateContainerResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> resp api<span class=\"token punctuation\">.</span>CreateContainerResponse\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> l<span class=\"token punctuation\">.</span><span class=\"token function\">withStoreUpdate</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    container <span class=\"token operator\">:=</span> <span class=\"token function\">containerFromProto</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>req<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">)</span>\n    created<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> l<span class=\"token punctuation\">.</span>Store<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span>\n    resp<span class=\"token punctuation\">.</span>Container <span class=\"token operator\">=</span> <span class=\"token function\">containerToProto</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>created<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>resp<span class=\"token punctuation\">,</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">ToGRPC</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> l<span class=\"token punctuation\">.</span>publisher<span class=\"token punctuation\">.</span><span class=\"token function\">Publish</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/containers/create\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>eventstypes<span class=\"token punctuation\">.</span>ContainerCreate<span class=\"token punctuation\">&#123;</span>\n    ID<span class=\"token punctuation\">:</span>    resp<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">,</span>\n    Image<span class=\"token punctuation\">:</span> resp<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">,</span>\n    Runtime<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>eventstypes<span class=\"token punctuation\">.</span>ContainerCreate_Runtime<span class=\"token punctuation\">&#123;</span>\n      Name<span class=\"token punctuation\">:</span>    resp<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span>\n      Options<span class=\"token punctuation\">:</span> resp<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>resp<span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>resp<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>看下数据中对于Container的实现</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// metadata/containers.go</span>\n\n<span class=\"token comment\">// NewContainerStore returns a Store backed by an underlying bolt DB</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">NewContainerStore</span><span class=\"token punctuation\">(</span>db <span class=\"token operator\">*</span>DB<span class=\"token punctuation\">)</span> containers<span class=\"token punctuation\">.</span>Store <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>containerStore<span class=\"token punctuation\">&#123;</span>\n    db<span class=\"token punctuation\">:</span> db<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>首先校验了了一下container,然后在数据库中创建一个记录</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// metadata/containers.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>containerStore<span class=\"token punctuation\">)</span> <span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> container containers<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>containers<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  namespace<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> namespaces<span class=\"token punctuation\">.</span><span class=\"token function\">NamespaceRequired</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">validateContainer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> containers<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"create container failed validation\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>tx <span class=\"token operator\">*</span>bolt<span class=\"token punctuation\">.</span>Tx<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    bkt<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">createContainersBucket</span><span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> namespace<span class=\"token punctuation\">)</span>\n    cbkt<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> bkt<span class=\"token punctuation\">.</span><span class=\"token function\">CreateBucket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">==</span> bolt<span class=\"token punctuation\">.</span>ErrBucketExists <span class=\"token punctuation\">&#123;</span>\n        err <span class=\"token operator\">=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>errdefs<span class=\"token punctuation\">.</span>ErrAlreadyExists<span class=\"token punctuation\">,</span> <span class=\"token string\">\"container %q\"</span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    container<span class=\"token punctuation\">.</span>CreatedAt <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">UTC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    container<span class=\"token punctuation\">.</span>UpdatedAt <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span>CreatedAt\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">writeContainer</span><span class=\"token punctuation\">(</span>cbkt<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to write container %q\"</span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> containers<span class=\"token punctuation\">.</span>Container<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> container<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"task\"><a href=\"#task\" class=\"headerlink\" title=\"task\"></a>task</h4><h5 id=\"task-grpc\"><a href=\"#task-grpc\" class=\"headerlink\" title=\"task grpc\"></a>task grpc</h5><ul>\n<li>注册依赖于service的插件</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/tasks/service.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>GRPCPlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"tasks\"</span><span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      plugins<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">GetByType</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">)</span>\n      p<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> plugins<span class=\"token punctuation\">[</span>services<span class=\"token punctuation\">.</span>TasksService<span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>ok <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tasks service not found\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      i<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">Instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>service<span class=\"token punctuation\">&#123;</span>local<span class=\"token punctuation\">:</span> i<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">.</span>TasksClient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>api直接调用上层的插件了</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>service<span class=\"token punctuation\">)</span> <span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>CreateTaskRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>CreateTaskResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span>local<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>service<span class=\"token punctuation\">)</span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>StartRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>StartResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span>local<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"task-serivce\"><a href=\"#task-serivce\" class=\"headerlink\" title=\"task serivce\"></a>task serivce</h6><ul>\n<li>初始化的过程根据平台来选,分别有bsd，unix和win主要看unix</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span>     plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>       services<span class=\"token punctuation\">.</span>TasksService<span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> tasksServiceRequires<span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span>   initFunc<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  timeout<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>stateTimeout<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>unix加载的插件</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/tasks/local_unix.go</span>\n<span class=\"token keyword\">var</span> tasksServiceRequires <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span>RuntimePlugin<span class=\"token punctuation\">,</span>\n  plugin<span class=\"token punctuation\">.</span>RuntimePluginV2<span class=\"token punctuation\">,</span>\n  plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">,</span>\n  plugin<span class=\"token punctuation\">.</span>TaskMonitorPlugin<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>根据平台调用<code>loadV1Runtimes()</code>加载runtimev1然后遍历</li>\n<li>runtimev2 则是通过<code>ic.Get(plugin.RuntimePluginV2)</code>通过插件的形式拿到</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/tasks/local.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">initFunc</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  runtimes<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">loadV1Runtimes</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">)</span>\n\n  v2r<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>RuntimePluginV2<span class=\"token punctuation\">)</span>\n\n  m<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">)</span>\n\n  monitor<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>TaskMonitorPlugin<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsNotFound</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    monitor <span class=\"token operator\">=</span> runtime<span class=\"token punctuation\">.</span><span class=\"token function\">NewNoopMonitor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  db <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>metadata<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">)</span>\n  l <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>local<span class=\"token punctuation\">&#123;</span>\n    runtimes<span class=\"token punctuation\">:</span>   runtimes<span class=\"token punctuation\">,</span>\n    containers<span class=\"token punctuation\">:</span> metadata<span class=\"token punctuation\">.</span><span class=\"token function\">NewContainerStore</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    store<span class=\"token punctuation\">:</span>      db<span class=\"token punctuation\">.</span><span class=\"token function\">ContentStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    publisher<span class=\"token punctuation\">:</span>  ic<span class=\"token punctuation\">.</span>Events<span class=\"token punctuation\">,</span>\n    monitor<span class=\"token punctuation\">:</span>    monitor<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>runtime<span class=\"token punctuation\">.</span>TaskMonitor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    v2Runtime<span class=\"token punctuation\">:</span>  v2r<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>v2<span class=\"token punctuation\">.</span>TaskManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> runtimes <span class=\"token punctuation\">&#123;</span>\n    tasks<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">Tasks</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> tasks <span class=\"token punctuation\">&#123;</span>\n      l<span class=\"token punctuation\">.</span>monitor<span class=\"token punctuation\">.</span><span class=\"token function\">Monitor</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  v2Tasks<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> l<span class=\"token punctuation\">.</span>v2Runtime<span class=\"token punctuation\">.</span><span class=\"token function\">Tasks</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> v2Tasks <span class=\"token punctuation\">&#123;</span>\n    l<span class=\"token punctuation\">.</span>monitor<span class=\"token punctuation\">.</span><span class=\"token function\">Monitor</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> l<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>具体api实现方面，通过请求的容器id获取容器，处理下需要恢复路径，因为contaInerd重启容器并不会退出，所以需要contaIner找到之前的容器</li>\n<li>处理rootfs</li>\n<li>获取一个<code>runtime.get()</code> 获取一个task没然后执行创建task</li>\n<li>随后调用<code>monitor.Monitor(c)</code>监控容器</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/tasks/local.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">*</span>local<span class=\"token punctuation\">)</span> <span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>CreateTaskRequest<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">...</span>grpc<span class=\"token punctuation\">.</span>CallOption<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>CreateTaskResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  container<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> l<span class=\"token punctuation\">.</span><span class=\"token function\">getContainer</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>ContainerID<span class=\"token punctuation\">)</span>\n  checkpointPath<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">getRestorePath</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> checkpointPath <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">&amp;&amp;</span> r<span class=\"token punctuation\">.</span>Checkpoint <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    checkpointPath<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> ioutil<span class=\"token punctuation\">.</span><span class=\"token function\">TempDir</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span><span class=\"token function\">Getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"XDG_RUNTIME_DIR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ctrd-checkpoint\"</span><span class=\"token punctuation\">)</span>\n \n    <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">.</span>Checkpoint<span class=\"token punctuation\">.</span>MediaType <span class=\"token operator\">!=</span> images<span class=\"token punctuation\">.</span>MediaTypeContainerd1Checkpoint <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unsupported checkpoint type %q\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>Checkpoint<span class=\"token punctuation\">.</span>MediaType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    reader<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> l<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">ReaderAt</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">&#123;</span>\n      MediaType<span class=\"token punctuation\">:</span>   r<span class=\"token punctuation\">.</span>Checkpoint<span class=\"token punctuation\">.</span>MediaType<span class=\"token punctuation\">,</span>\n      Digest<span class=\"token punctuation\">:</span>      r<span class=\"token punctuation\">.</span>Checkpoint<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">,</span>\n      Size<span class=\"token punctuation\">:</span>        r<span class=\"token punctuation\">.</span>Checkpoint<span class=\"token punctuation\">.</span>Size_<span class=\"token punctuation\">,</span>\n      Annotations<span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>Checkpoint<span class=\"token punctuation\">.</span>Annotations<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> archive<span class=\"token punctuation\">.</span><span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> checkpointPath<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    reader<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n  opts <span class=\"token operator\">:=</span> runtime<span class=\"token punctuation\">.</span>CreateOpts<span class=\"token punctuation\">&#123;</span>\n    Spec<span class=\"token punctuation\">:</span> container<span class=\"token punctuation\">.</span>Spec<span class=\"token punctuation\">,</span>\n    IO<span class=\"token punctuation\">:</span> runtime<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">&#123;</span>\n      Stdin<span class=\"token punctuation\">:</span>    r<span class=\"token punctuation\">.</span>Stdin<span class=\"token punctuation\">,</span>\n      Stdout<span class=\"token punctuation\">:</span>   r<span class=\"token punctuation\">.</span>Stdout<span class=\"token punctuation\">,</span>\n      Stderr<span class=\"token punctuation\">:</span>   r<span class=\"token punctuation\">.</span>Stderr<span class=\"token punctuation\">,</span>\n      Terminal<span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>Terminal<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    Checkpoint<span class=\"token punctuation\">:</span>     checkpointPath<span class=\"token punctuation\">,</span>\n    Runtime<span class=\"token punctuation\">:</span>        container<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span>\n    RuntimeOptions<span class=\"token punctuation\">:</span> container<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">,</span>\n    TaskOptions<span class=\"token punctuation\">:</span>    r<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> m <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> r<span class=\"token punctuation\">.</span>Rootfs <span class=\"token punctuation\">&#123;</span>\n    opts<span class=\"token punctuation\">.</span>Rootfs <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">.</span>Rootfs<span class=\"token punctuation\">,</span> mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">&#123;</span>\n      Type<span class=\"token punctuation\">:</span>    m<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">,</span>\n      Source<span class=\"token punctuation\">:</span>  m<span class=\"token punctuation\">.</span>Source<span class=\"token punctuation\">,</span>\n      Options<span class=\"token punctuation\">:</span> m<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">HasPrefix</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"io.containerd.runtime.v1.\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"runtime v1 is deprecated since containerd v1.4, consider using runtime v2\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> container<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">==</span> plugin<span class=\"token punctuation\">.</span>RuntimeRuncV1 <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Warnf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%q is deprecated since containerd v1.4, consider using %q\"</span><span class=\"token punctuation\">,</span> plugin<span class=\"token punctuation\">.</span>RuntimeRuncV1<span class=\"token punctuation\">,</span> plugin<span class=\"token punctuation\">.</span>RuntimeRuncV2<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  rtime<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> l<span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n  <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> rtime<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>ContainerID<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> err <span class=\"token operator\">!=</span> runtime<span class=\"token punctuation\">.</span>ErrTaskNotExists <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">ToGRPC</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">ToGRPC</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"task %s already exists\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>ContainerID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  c<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> rtime<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>ContainerID<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">ToGRPC</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> l<span class=\"token punctuation\">.</span>monitor<span class=\"token punctuation\">.</span><span class=\"token function\">Monitor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"monitor task\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>api<span class=\"token punctuation\">.</span>CreateTaskResponse<span class=\"token punctuation\">&#123;</span>\n    ContainerID<span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>ContainerID<span class=\"token punctuation\">,</span>\n    Pid<span class=\"token punctuation\">:</span>         c<span class=\"token punctuation\">.</span><span class=\"token function\">PID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>start根据上一步创建的task获取进程然后启动进程</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/tasks/local.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">*</span>local<span class=\"token punctuation\">)</span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>StartRequest<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">...</span>grpc<span class=\"token punctuation\">.</span>CallOption<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>StartResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  t<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> l<span class=\"token punctuation\">.</span><span class=\"token function\">getTask</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>ContainerID<span class=\"token punctuation\">)</span>\n\n  p <span class=\"token operator\">:=</span> runtime<span class=\"token punctuation\">.</span><span class=\"token function\">Process</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">.</span>ExecID <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> p<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">Process</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>ExecID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">ToGRPC</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">ToGRPC</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  state<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">State</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">ToGRPC</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>api<span class=\"token punctuation\">.</span>StartResponse<span class=\"token punctuation\">&#123;</span>\n    Pid<span class=\"token punctuation\">:</span> state<span class=\"token punctuation\">.</span>Pid<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"runtime\"><a href=\"#runtime\" class=\"headerlink\" title=\"runtime\"></a>runtime</h5><ul>\n<li>runtime有2个版本现在普遍使用v2,他的初始化会根据平台传递一个config，最后拿到的参数传递给<code>New()</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// runtime/v2/manager.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>RuntimePluginV2<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"task\"</span><span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    Config<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>Config<span class=\"token punctuation\">&#123;</span>\n      Platforms<span class=\"token punctuation\">:</span> <span class=\"token function\">defaultPlatforms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      supportedPlatforms<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">parsePlatforms</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Platforms<span class=\"token punctuation\">)</span>\n\n      ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Platforms <span class=\"token operator\">=</span> supportedPlatforms\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">MkdirAll</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Root<span class=\"token punctuation\">,</span> <span class=\"token number\">0711</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">MkdirAll</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>State<span class=\"token punctuation\">,</span> <span class=\"token number\">0711</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n      m<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">)</span>\n\n      cs <span class=\"token operator\">:=</span> metadata<span class=\"token punctuation\">.</span><span class=\"token function\">NewContainerStore</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>metadata<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token function\">New</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> ic<span class=\"token punctuation\">.</span>Root<span class=\"token punctuation\">,</span> ic<span class=\"token punctuation\">.</span>State<span class=\"token punctuation\">,</span> ic<span class=\"token punctuation\">.</span>Address<span class=\"token punctuation\">,</span> ic<span class=\"token punctuation\">.</span>TTRPCAddress<span class=\"token punctuation\">,</span> ic<span class=\"token punctuation\">.</span>Events<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>New()创建了文件夹和初始化了一个<code>TaskManager</code>,然后调用loadExistingTasks()方法加载已经存在的task</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// New task manager for v2 shims</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">New</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">,</span> containerdAddress<span class=\"token punctuation\">,</span> containerdTTRPCAddress <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> events <span class=\"token operator\">*</span>exchange<span class=\"token punctuation\">.</span>Exchange<span class=\"token punctuation\">,</span> cs containers<span class=\"token punctuation\">.</span>Store<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>TaskManager<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> d <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>root<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">MkdirAll</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> <span class=\"token number\">0711</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  m <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>TaskManager<span class=\"token punctuation\">&#123;</span>\n    root<span class=\"token punctuation\">:</span>                   root<span class=\"token punctuation\">,</span>\n    state<span class=\"token punctuation\">:</span>                  state<span class=\"token punctuation\">,</span>\n    containerdAddress<span class=\"token punctuation\">:</span>      containerdAddress<span class=\"token punctuation\">,</span>\n    containerdTTRPCAddress<span class=\"token punctuation\">:</span> containerdTTRPCAddress<span class=\"token punctuation\">,</span>\n    tasks<span class=\"token punctuation\">:</span>                  runtime<span class=\"token punctuation\">.</span><span class=\"token function\">NewTaskList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    events<span class=\"token punctuation\">:</span>                 events<span class=\"token punctuation\">,</span>\n    containers<span class=\"token punctuation\">:</span>             cs<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">loadExistingTasks</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>最终通过shim创建容器，然后添加task</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// Create a new task</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>TaskManager<span class=\"token punctuation\">)</span> <span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> id <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts runtime<span class=\"token punctuation\">.</span>CreateOpts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">_</span> runtime<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">,</span> retErr <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  bundle<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">NewBundle</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">.</span>Spec<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> retErr <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      bundle<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  shim<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">startShim</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> bundle<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> retErr <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      m<span class=\"token punctuation\">.</span><span class=\"token function\">deleteShim</span><span class=\"token punctuation\">(</span>shim<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  t<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> shim<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span>tasks<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to add task\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>看了startShim实现。通过bundel等参数构造出一个<code>binary</code>,然后调用<code>start()</code>方法</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// runtime/v2/manager.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>TaskManager<span class=\"token punctuation\">)</span> <span class=\"token function\">startShim</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> bundle <span class=\"token operator\">*</span>Bundle<span class=\"token punctuation\">,</span> id <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts runtime<span class=\"token punctuation\">.</span>CreateOpts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>shim<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  ns<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> namespaces<span class=\"token punctuation\">.</span><span class=\"token function\">NamespaceRequired</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\n  topts <span class=\"token operator\">:=</span> opts<span class=\"token punctuation\">.</span>TaskOptions\n\n  b <span class=\"token operator\">:=</span> <span class=\"token function\">shimBinary</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> bundle<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>containerdAddress<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>containerdTTRPCAddress<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>tasks<span class=\"token punctuation\">)</span>\n  shim<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> topts<span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shim disconnected\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">cleanupAfterDeadShim</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> ns<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>tasks<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// Remove self from the runtime task list. Even though the cleanupAfterDeadShim()</span>\n    <span class=\"token comment\">// would publish taskExit event, but the shim.Delete() would always failed with ttrpc</span>\n    <span class=\"token comment\">// disconnect and there is no chance to remove this dead task from runtime task lists.</span>\n    <span class=\"token comment\">// Thus it's better to delete it here.</span>\n    m<span class=\"token punctuation\">.</span>tasks<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> shim<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这里通过<code>client.Command()</code>组装出命令然后启动程序</li>\n<li>随后创建一个ttrpc客户端返回</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">*</span>binary<span class=\"token punctuation\">)</span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">,</span> onClose <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">_</span> <span class=\"token operator\">*</span>shim<span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  args <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"-id\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>bundle<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> logrus<span class=\"token punctuation\">.</span><span class=\"token function\">GetLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> logrus<span class=\"token punctuation\">.</span>DebugLevel <span class=\"token punctuation\">&#123;</span>\n    args <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> <span class=\"token string\">\"-debug\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  args <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span>\n\n  cmd<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Command</span><span class=\"token punctuation\">(</span>\n    ctx<span class=\"token punctuation\">,</span>\n    b<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">,</span>\n    b<span class=\"token punctuation\">.</span>containerdAddress<span class=\"token punctuation\">,</span>\n    b<span class=\"token punctuation\">.</span>containerdTTRPCAddress<span class=\"token punctuation\">,</span>\n    b<span class=\"token punctuation\">.</span>bundle<span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">,</span>\n    opts<span class=\"token punctuation\">,</span>\n    args<span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Windows needs a namespace when openShimLog</span>\n  ns<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> namespaces<span class=\"token punctuation\">.</span><span class=\"token function\">Namespace</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  shimCtx<span class=\"token punctuation\">,</span> cancelShimLog <span class=\"token operator\">:=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">WithCancel</span><span class=\"token punctuation\">(</span>namespaces<span class=\"token punctuation\">.</span><span class=\"token function\">WithNamespace</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">cancelShimLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  f<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">openShimLog</span><span class=\"token punctuation\">(</span>shimCtx<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>bundle<span class=\"token punctuation\">,</span> client<span class=\"token punctuation\">.</span>AnonDialer<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"open shim log pipe\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      f<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// open the log pipe and block until the writer is ready</span>\n  <span class=\"token comment\">// this helps with synchronization of the shim</span>\n  <span class=\"token comment\">// copy the shim's logs to containerd's output</span>\n  <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">defer</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Stderr<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// To prevent flood of error messages, the expected error</span>\n    <span class=\"token comment\">// should be reset, like os.ErrClosed or os.ErrNotExist, which</span>\n    <span class=\"token comment\">// depends on platform.</span>\n    err <span class=\"token operator\">=</span> <span class=\"token function\">checkCopyShimLogError</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"copy shim log\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  out<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">CombinedOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  address <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">TrimSpace</span><span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  conn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Connect</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> client<span class=\"token punctuation\">.</span>AnonDialer<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  onCloseWithShimLog <span class=\"token operator\">:=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">onClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">cancelShimLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  client <span class=\"token operator\">:=</span> ttrpc<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> ttrpc<span class=\"token punctuation\">.</span><span class=\"token function\">WithOnClose</span><span class=\"token punctuation\">(</span>onCloseWithShimLog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>shim<span class=\"token punctuation\">&#123;</span>\n    bundle<span class=\"token punctuation\">:</span>  b<span class=\"token punctuation\">.</span>bundle<span class=\"token punctuation\">,</span>\n    client<span class=\"token punctuation\">:</span>  client<span class=\"token punctuation\">,</span>\n    task<span class=\"token punctuation\">:</span>    task<span class=\"token punctuation\">.</span><span class=\"token function\">NewTaskClient</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    events<span class=\"token punctuation\">:</span>  b<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">,</span>\n    rtTasks<span class=\"token punctuation\">:</span> b<span class=\"token punctuation\">.</span>rtTasks<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><pre><code class=\"mermaid\">sequenceDiagram\n    autonumber\n    participant client as 客户端\n    participant container as container-service\n    participant task as task-service\n    #participant content as content-service\n    #participant snapshotter as snapshotter-service\n    participant image as image-service\n    \n    client-&gt;&gt;image:获取image信息\n    client-&gt;&gt;container:创建容器\n    client-&gt;&gt;task:创建task\n    client-&gt;&gt;task:启动task</code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"http://blog.naturelr.cc/\">http://blog.naturelr.cc</a></p>\n","tags":["k8s","containerd"]},{"title":"containerd源码-content","url":"/2023/11/03/containerd%E6%BA%90%E7%A0%81-content/","content":"<p>content 主要负责存储下载后的原本的层</p>\n<span id=\"more\"></span>\n\n<p>代码版本为v.17.5</p>\n<h5 id=\"content\"><a href=\"#content\" class=\"headerlink\" title=\"content\"></a>content</h5><blockquote>\n<p>content主要负责存储下载的layer接口定义在<code>content/content.go</code>中</p>\n</blockquote>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// content/content.go</span>\n\n<span class=\"token keyword\">type</span> ReaderAt <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>\n  io<span class=\"token punctuation\">.</span>ReaderAt\n  io<span class=\"token punctuation\">.</span>Closer\n  <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int64</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">type</span> Provider <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">ReaderAt</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> desc ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ReaderAt<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">type</span> Ingester <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">Writer</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>WriterOpt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Writer<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">type</span> Info <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n  Digest    digest<span class=\"token punctuation\">.</span>Digest\n  Size      <span class=\"token builtin\">int64</span>\n  CreatedAt time<span class=\"token punctuation\">.</span>Time\n  UpdatedAt time<span class=\"token punctuation\">.</span>Time\n  Labels    <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// Status of a content operation</span>\n<span class=\"token keyword\">type</span> Status <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n  Ref       <span class=\"token builtin\">string</span>\n  Offset    <span class=\"token builtin\">int64</span>\n  Total     <span class=\"token builtin\">int64</span>\n  Expected  digest<span class=\"token punctuation\">.</span>Digest\n  StartedAt time<span class=\"token punctuation\">.</span>Time\n  UpdatedAt time<span class=\"token punctuation\">.</span>Time\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">type</span> WalkFunc <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>Info<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span>\n<span class=\"token keyword\">type</span> Manager <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">Info</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> dgst digest<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Info<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> info Info<span class=\"token punctuation\">,</span> fieldpaths <span class=\"token operator\">...</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Info<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">Walk</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> fn WalkFunc<span class=\"token punctuation\">,</span> filters <span class=\"token operator\">...</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span>\n  <span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> dgst digest<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">type</span> IngestManager <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">Status</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> ref <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Status<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">ListStatuses</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> filters <span class=\"token operator\">...</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>Status<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">Abort</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> ref <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">type</span> Writer <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>\n  io<span class=\"token punctuation\">.</span>WriteCloser\n  <span class=\"token function\">Digest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> digest<span class=\"token punctuation\">.</span>Digest\n  <span class=\"token function\">Commit</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> size <span class=\"token builtin\">int64</span><span class=\"token punctuation\">,</span> expected digest<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span>\n  <span class=\"token function\">Status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Status<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">Truncate</span><span class=\"token punctuation\">(</span>size <span class=\"token builtin\">int64</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">type</span> Store <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>\n  Manager\n  Provider\n  IngestManager\n  Ingester\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"content-grpc类型\"><a href=\"#content-grpc类型\" class=\"headerlink\" title=\"content grpc类型\"></a>content grpc类型</h6><ul>\n<li>grpc类型的content注册在这里,使用统一的注册，申明名字类型以及依赖</li>\n<li>然后从initcontent中获取所有service的插件,然后拿到一个<code>ContentService</code>实例</li>\n<li>使用这个实例调用<code>contentserver.New()</code>,<code>contentserver.New()</code>实现了grpc相关方法</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/content/service.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>GRPCPlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"content\"</span><span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      plugins<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">GetByType</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n\n      p<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> plugins<span class=\"token punctuation\">[</span>services<span class=\"token punctuation\">.</span>ContentService<span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>ok <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content store service not found\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      cs<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">Instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> contentserver<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">.</span>Store<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p><code>service</code>就是抽象了<code>content.Store</code></p>\n</li>\n<li><p><code>New()</code>设置了上层</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/content/contentserver/contentserver.go</span>\n\n<span class=\"token keyword\">type</span> service <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n  store content<span class=\"token punctuation\">.</span>Store\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// New returns the content GRPC server</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">New</span><span class=\"token punctuation\">(</span>cs content<span class=\"token punctuation\">.</span>Store<span class=\"token punctuation\">)</span> api<span class=\"token punctuation\">.</span>ContentServer <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>service<span class=\"token punctuation\">&#123;</span>store<span class=\"token punctuation\">:</span> cs<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>service<span class=\"token punctuation\">)</span> <span class=\"token function\">Register</span><span class=\"token punctuation\">(</span>server <span class=\"token operator\">*</span>grpc<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n  api<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterContentServer</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>由于接口很多就不一样介绍了，这里只介绍一个简单的接口</li>\n<li>可以看到grpc请求来的参数传到<code>store.Status()</code>然后再将返回的组装成grpc结果并返回，其他api也是类似这种</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/content/contentserver/contentserver.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>service<span class=\"token punctuation\">)</span> <span class=\"token function\">Status</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req <span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>StatusRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>api<span class=\"token punctuation\">.</span>StatusResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  status<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">Status</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>Ref<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">ToGRPCf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"could not get status for ref %q\"</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>Ref<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">var</span> resp api<span class=\"token punctuation\">.</span>StatusResponse\n  resp<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>api<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">&#123;</span>\n    StartedAt<span class=\"token punctuation\">:</span> status<span class=\"token punctuation\">.</span>StartedAt<span class=\"token punctuation\">,</span>\n    UpdatedAt<span class=\"token punctuation\">:</span> status<span class=\"token punctuation\">.</span>UpdatedAt<span class=\"token punctuation\">,</span>\n    Ref<span class=\"token punctuation\">:</span>       status<span class=\"token punctuation\">.</span>Ref<span class=\"token punctuation\">,</span>\n    Offset<span class=\"token punctuation\">:</span>    status<span class=\"token punctuation\">.</span>Offset<span class=\"token punctuation\">,</span>\n    Total<span class=\"token punctuation\">:</span>     status<span class=\"token punctuation\">.</span>Total<span class=\"token punctuation\">,</span>\n    Expected<span class=\"token punctuation\">:</span>  status<span class=\"token punctuation\">.</span>Expected<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>resp<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"content-service类型\"><a href=\"#content-service类型\" class=\"headerlink\" title=\"content service类型\"></a>content service类型</h6><ul>\n<li>这里他依赖<code>plugin.MetadataPlugin</code>这个类型,然后将获取的meteada传入<code>meatadata.ContentStore()</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/content/store.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   services<span class=\"token punctuation\">.</span>ContentService<span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      m<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token comment\">// 这里注册 content的svc</span>\n      s<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">newContentStore</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>metadata<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ContentStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ic<span class=\"token punctuation\">.</span>Events<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">newContentStore</span><span class=\"token punctuation\">(</span>cs content<span class=\"token punctuation\">.</span>Store<span class=\"token punctuation\">,</span> publisher events<span class=\"token punctuation\">.</span>Publisher<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">.</span>Store<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>store<span class=\"token punctuation\">&#123;</span>\n    Store<span class=\"token punctuation\">:</span>     cs<span class=\"token punctuation\">,</span>\n    publisher<span class=\"token punctuation\">:</span> publisher<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>可以看到前面调用的<code>ContentStore()</code>返回的就是初始化,而meteadata创建的注册在<code>services/server/server.go</code>前面介绍启动过程介绍过</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// metadata/db.go</span>\n\n\n<span class=\"token comment\">// NewDB creates a new metadata database using the provided</span>\n<span class=\"token comment\">// bolt database, content store, and snapshotters.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">NewDB</span><span class=\"token punctuation\">(</span>db <span class=\"token operator\">*</span>bolt<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">,</span> cs content<span class=\"token punctuation\">.</span>Store<span class=\"token punctuation\">,</span> ss <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>snapshots<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>DBOpt<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>DB <span class=\"token punctuation\">&#123;</span>\n  m <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>DB<span class=\"token punctuation\">&#123;</span>\n    db<span class=\"token punctuation\">:</span>      db<span class=\"token punctuation\">,</span>\n    ss<span class=\"token punctuation\">:</span>      <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>snapshotter<span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    dirtySS<span class=\"token punctuation\">:</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    dbopts<span class=\"token punctuation\">:</span> dbOptions<span class=\"token punctuation\">&#123;</span>\n      shared<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> opt <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> opts <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">opt</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>m<span class=\"token punctuation\">.</span>dbopts<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// Initialize data stores</span>\n  m<span class=\"token punctuation\">.</span>cs <span class=\"token operator\">=</span> <span class=\"token function\">newContentStore</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>dbopts<span class=\"token punctuation\">.</span>shared<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span> sn <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> ss <span class=\"token punctuation\">&#123;</span>\n    m<span class=\"token punctuation\">.</span>ss<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">newSnapshotter</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> sn<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> m\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// ContentStore returns a namespaced content store</span>\n<span class=\"token comment\">// proxied to a content store.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>DB<span class=\"token punctuation\">)</span> <span class=\"token function\">ContentStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> content<span class=\"token punctuation\">.</span>Store <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> m<span class=\"token punctuation\">.</span>cs <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">.</span>cs\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>同样实现了content的很多方法,下面得了例子可以看到这里先读取数据库，然后在调用<code>store.Status()</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// metadata/content.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>cs <span class=\"token operator\">*</span>contentStore<span class=\"token punctuation\">)</span> <span class=\"token function\">Status</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> ref <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  ns<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> namespaces<span class=\"token punctuation\">.</span><span class=\"token function\">NamespaceRequired</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> bref <span class=\"token builtin\">string</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">view</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>tx <span class=\"token operator\">*</span>bolt<span class=\"token punctuation\">.</span>Tx<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    bref <span class=\"token operator\">=</span> <span class=\"token function\">getRef</span><span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> ns<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> bref <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>errdefs<span class=\"token punctuation\">.</span>ErrNotFound<span class=\"token punctuation\">,</span> <span class=\"token string\">\"reference %v\"</span><span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> content<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  st<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> cs<span class=\"token punctuation\">.</span>Store<span class=\"token punctuation\">.</span><span class=\"token function\">Status</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> bref<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> content<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  st<span class=\"token punctuation\">.</span>Ref <span class=\"token operator\">=</span> ref\n  <span class=\"token keyword\">return</span> st<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"content类型\"><a href=\"#content类型\" class=\"headerlink\" title=\"content类型\"></a>content类型</h6><blockquote>\n<p>content有2中实现,一种本地(local),一种prox(远程)</p>\n</blockquote>\n<ul>\n<li><p>local:就是本地实现,目前可以理解为真正实现</p>\n</li>\n<li><p>proxy:则是调用远程的实现，因为content有插件</p>\n</li>\n<li><p>注册则在<code>loadPlugin()</code>中首先会将本地的注册，随后读取配置文件中的<code>proxy_plugin</code>配置在注册proxy类型的，<br>需要注意的是插件在整理之后会返回第一个可能导致你注册的content需要再配置文件中<code>disabled_plugins</code>参数关闭local强制使用proxy类型的</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/server/server.go</span>\n\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>ContentPlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"content\"</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Exports<span class=\"token punctuation\">[</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ic<span class=\"token punctuation\">.</span>Root\n      <span class=\"token keyword\">return</span> local<span class=\"token punctuation\">.</span><span class=\"token function\">NewStore</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Root<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  clients <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>proxyClients<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span> pp <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> config<span class=\"token punctuation\">.</span>ProxyPlugins <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n      t plugin<span class=\"token punctuation\">.</span>Type\n      f <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>grpc<span class=\"token punctuation\">.</span>ClientConn<span class=\"token punctuation\">)</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n      address <span class=\"token operator\">=</span> pp<span class=\"token punctuation\">.</span>Address\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// nsap逻辑</span>\n\n    <span class=\"token keyword\">case</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>ContentPlugin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"content\"</span><span class=\"token punctuation\">:</span>\n      t <span class=\"token operator\">=</span> plugin<span class=\"token punctuation\">.</span>ContentPlugin\n      f <span class=\"token operator\">=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>conn <span class=\"token operator\">*</span>grpc<span class=\"token punctuation\">.</span>ClientConn<span class=\"token punctuation\">)</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> csproxy<span class=\"token punctuation\">.</span><span class=\"token function\">NewContentStore</span><span class=\"token punctuation\">(</span>csapi<span class=\"token punctuation\">.</span><span class=\"token function\">NewContentClient</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> pp<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unknown proxy plugin type\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n      Type<span class=\"token punctuation\">:</span> t<span class=\"token punctuation\">,</span>\n      ID<span class=\"token punctuation\">:</span>   name<span class=\"token punctuation\">,</span>\n      InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Exports<span class=\"token punctuation\">[</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> address\n        conn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> clients<span class=\"token punctuation\">.</span><span class=\"token function\">getClient</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>接口实现本质就是读取存储的文件一些信息,然后返回</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// content/local/store.go</span>\n\n<span class=\"token comment\">// status works like stat above except uses the path to the ingest.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>store<span class=\"token punctuation\">)</span> <span class=\"token function\">status</span><span class=\"token punctuation\">(</span>ingestPath <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  dp <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>ingestPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">)</span>\n  fi<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Stat</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">)</span>\n\n  ref<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">readFileString</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>ingestPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ref\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  startedAt<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">readFileTimestamp</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>ingestPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"startedat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n  updatedAt<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">readFileTimestamp</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>ingestPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"updatedat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n  <span class=\"token comment\">// because we don't write updatedat on every write, the mod time may</span>\n  <span class=\"token comment\">// actually be more up to date.</span>\n  <span class=\"token keyword\">if</span> fi<span class=\"token punctuation\">.</span><span class=\"token function\">ModTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">After</span><span class=\"token punctuation\">(</span>updatedAt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    updatedAt <span class=\"token operator\">=</span> fi<span class=\"token punctuation\">.</span><span class=\"token function\">ModTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> content<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">&#123;</span>\n    Ref<span class=\"token punctuation\">:</span>       ref<span class=\"token punctuation\">,</span>\n    Offset<span class=\"token punctuation\">:</span>    fi<span class=\"token punctuation\">.</span><span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    Total<span class=\"token punctuation\">:</span>     s<span class=\"token punctuation\">.</span><span class=\"token function\">total</span><span class=\"token punctuation\">(</span>ingestPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    UpdatedAt<span class=\"token punctuation\">:</span> updatedAt<span class=\"token punctuation\">,</span>\n    StartedAt<span class=\"token punctuation\">:</span> startedAt<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","tags":["k8s","containerd"]},{"title":"contaInerd源码-diff","url":"/2023/11/03/contaInerd%E6%BA%90%E7%A0%81-diff/","content":"<p>diff主要负责解压缩过程</p>\n<span id=\"more\"></span>\n\n<p>代码版本为v.17.5</p>\n<h4 id=\"接口定义\"><a href=\"#接口定义\" class=\"headerlink\" title=\"接口定义\"></a>接口定义</h4><ul>\n<li>接口比较少只有2个</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// diff/diff.go</span>\n<span class=\"token keyword\">type</span> Applier <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// Apply applies the content referred to by the given descriptor to</span>\n  <span class=\"token comment\">// the provided mount. The method of applying is based on the</span>\n  <span class=\"token comment\">// implementation and content descriptor. For example, in the common</span>\n  <span class=\"token comment\">// case the descriptor is a file system difference in tar format,</span>\n  <span class=\"token comment\">// that tar would be applied on top of the mounts.</span>\n  <span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> desc ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> mount <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>ApplyOpt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">type</span> Comparer <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// Compare computes the difference between two mounts and returns a</span>\n  <span class=\"token comment\">// descriptor for the computed diff. The options can provide</span>\n  <span class=\"token comment\">// a ref which can be used to track the content creation of the diff.</span>\n  <span class=\"token comment\">// The media type which is used to determine the format of the created</span>\n  <span class=\"token comment\">// content can also be provided as an option.</span>\n  <span class=\"token function\">Compare</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> lower<span class=\"token punctuation\">,</span> upper <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>Opt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"diff-grpc类型\"><a href=\"#diff-grpc类型\" class=\"headerlink\" title=\"diff grpc类型\"></a>diff grpc类型</h4><ul>\n<li>常规的注册,从<code>serivce</code>类型中拿到<code>diffservice</code>一个实例</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/diff/service.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>GRPCPlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"diff\"</span><span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      plugins<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">GetByType</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">)</span>\n\n      p<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> plugins<span class=\"token punctuation\">[</span>services<span class=\"token punctuation\">.</span>DiffService<span class=\"token punctuation\">]</span>\n \n      i<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">Instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>service<span class=\"token punctuation\">&#123;</span>local<span class=\"token punctuation\">:</span> i<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>diffapi<span class=\"token punctuation\">.</span>DiffClient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>同样实现了接口直接调用了service的apply</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>service<span class=\"token punctuation\">)</span> <span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> er <span class=\"token operator\">*</span>diffapi<span class=\"token punctuation\">.</span>ApplyRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>diffapi<span class=\"token punctuation\">.</span>ApplyResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span>local<span class=\"token punctuation\">.</span><span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> er<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"diff-service类型\"><a href=\"#diff-service类型\" class=\"headerlink\" title=\"diff service类型\"></a>diff service类型</h4><ul>\n<li>这里注册的时候添加了一个config,获取更下面的<code>DiffPlugin</code>一个实例</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/diff/local.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   services<span class=\"token punctuation\">.</span>DiffService<span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>DiffPlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    Config<span class=\"token punctuation\">:</span> defaultDifferConfig<span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      differs<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">GetByType</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>DiffPlugin<span class=\"token punctuation\">)</span>\n  \n      orderedNames <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Order\n      ordered <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>differ<span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>orderedNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> n <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> orderedNames <span class=\"token punctuation\">&#123;</span>\n        differp<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> differs<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span>\n    \n        d<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> differp<span class=\"token punctuation\">.</span><span class=\"token function\">Instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   \n        ordered<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ok <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>differ<span class=\"token punctuation\">)</span>\n\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>local<span class=\"token punctuation\">&#123;</span>\n        differs<span class=\"token punctuation\">:</span> ordered<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>组合好opt然后传入到Apply</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/diff/local.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">*</span>local<span class=\"token punctuation\">)</span> <span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> er <span class=\"token operator\">*</span>diffapi<span class=\"token punctuation\">.</span>ApplyRequest<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">...</span>grpc<span class=\"token punctuation\">.</span>CallOption<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>diffapi<span class=\"token punctuation\">.</span>ApplyResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n    ocidesc ocispec<span class=\"token punctuation\">.</span>Descriptor\n    err     <span class=\"token builtin\">error</span>\n    desc    <span class=\"token operator\">=</span> <span class=\"token function\">toDescriptor</span><span class=\"token punctuation\">(</span>er<span class=\"token punctuation\">.</span>Diff<span class=\"token punctuation\">)</span>\n    mounts  <span class=\"token operator\">=</span> <span class=\"token function\">toMounts</span><span class=\"token punctuation\">(</span>er<span class=\"token punctuation\">.</span>Mounts<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> opts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>diff<span class=\"token punctuation\">.</span>ApplyOpt\n  <span class=\"token keyword\">if</span> er<span class=\"token punctuation\">.</span>Payloads <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    opts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">,</span> diff<span class=\"token punctuation\">.</span><span class=\"token function\">WithPayloads</span><span class=\"token punctuation\">(</span>er<span class=\"token punctuation\">.</span>Payloads<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> differ <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> l<span class=\"token punctuation\">.</span>differs <span class=\"token punctuation\">&#123;</span>\n    ocidesc<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> differ<span class=\"token punctuation\">.</span><span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">,</span> mounts<span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsNotImplemented</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">break</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>diffapi<span class=\"token punctuation\">.</span>ApplyResponse<span class=\"token punctuation\">&#123;</span>\n    Applied<span class=\"token punctuation\">:</span> <span class=\"token function\">fromDescriptor</span><span class=\"token punctuation\">(</span>ocidesc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"diff类型\"><a href=\"#diff类型\" class=\"headerlink\" title=\"diff类型\"></a>diff类型</h4><ul>\n<li>这里注册一个<code>DiffPlugin</code>,这里不一样的是从插件里拿的是<code>MetadataPlugin</code>,然后获取metadata的ContentStore()并传值给<code>Comparer</code>和<code>Applier</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// diff/walking/plugin/plugin.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>DiffPlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"walking\"</span><span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      md<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">)</span>\n\n      ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Platforms <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Platforms<span class=\"token punctuation\">,</span> platforms<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultSpec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      cs <span class=\"token operator\">:=</span> md<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>metadata<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ContentStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">return</span> diffPlugin<span class=\"token punctuation\">&#123;</span>\n        Comparer<span class=\"token punctuation\">:</span> walking<span class=\"token punctuation\">.</span><span class=\"token function\">NewWalkingDiff</span><span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        Applier<span class=\"token punctuation\">:</span>  apply<span class=\"token punctuation\">.</span><span class=\"token function\">NewFileSystemApplier</span><span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>fsApplier只有个store</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// diff/apply/apply.go</span>\n\n<span class=\"token comment\">// NewFileSystemApplier returns an applier which simply mounts</span>\n<span class=\"token comment\">// and applies diff onto the mounted filesystem.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">NewFileSystemApplier</span><span class=\"token punctuation\">(</span>cs content<span class=\"token punctuation\">.</span>Provider<span class=\"token punctuation\">)</span> diff<span class=\"token punctuation\">.</span>Applier <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>fsApplier<span class=\"token punctuation\">&#123;</span>\n    store<span class=\"token punctuation\">:</span> cs<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这里开始从<code>content</code>里读取blob</li>\n<li>然后申明一个<code>processor</code>,<code>processor</code>主要和解压有关如gz等</li>\n<li>从配置里获取一个processor并赋值</li>\n<li>随后processor赋值到<code>readCounter</code>中</li>\n<li>ra传递给<code>apply()</code>进行下一步处理</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// diff/apply/apply.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>fsApplier<span class=\"token punctuation\">)</span> <span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> desc ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> mounts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>diff<span class=\"token punctuation\">.</span>ApplyOpt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>d ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 从content读取</span>\n  ra<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">ReaderAt</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">defer</span> ra<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> processors <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>diff<span class=\"token punctuation\">.</span>StreamProcessor\n  processor <span class=\"token operator\">:=</span> diff<span class=\"token punctuation\">.</span><span class=\"token function\">NewProcessorChain</span><span class=\"token punctuation\">(</span>desc<span class=\"token punctuation\">.</span>MediaType<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>ra<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  processors <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>processors<span class=\"token punctuation\">,</span> processor<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> processor<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> diff<span class=\"token punctuation\">.</span><span class=\"token function\">GetProcessor</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> processor<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>ProcessorPayloads<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> emptyDesc<span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to get stream processor for %s\"</span><span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">.</span>MediaType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    processors <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>processors<span class=\"token punctuation\">,</span> processor<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> processor<span class=\"token punctuation\">.</span><span class=\"token function\">MediaType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> ocispec<span class=\"token punctuation\">.</span>MediaTypeImageLayer <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">break</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">defer</span> processor<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  digester <span class=\"token operator\">:=</span> digest<span class=\"token punctuation\">.</span>Canonical<span class=\"token punctuation\">.</span><span class=\"token function\">Digester</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  rc <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>readCounter<span class=\"token punctuation\">&#123;</span>\n    r<span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">TeeReader</span><span class=\"token punctuation\">(</span>processor<span class=\"token punctuation\">,</span> digester<span class=\"token punctuation\">.</span><span class=\"token function\">Hash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">//真正开始apply</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> mounts<span class=\"token punctuation\">,</span> rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> emptyDesc<span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// Read any trailing data</span>\n  <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>Discard<span class=\"token punctuation\">,</span> rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> emptyDesc<span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> p <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> processors <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> ep<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span> <span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> ep<span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> emptyDesc<span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">&#123;</span>\n    MediaType<span class=\"token punctuation\">:</span> ocispec<span class=\"token punctuation\">.</span>MediaTypeImageLayer<span class=\"token punctuation\">,</span>\n    Size<span class=\"token punctuation\">:</span>      rc<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">,</span>\n    Digest<span class=\"token punctuation\">:</span>    digester<span class=\"token punctuation\">.</span><span class=\"token function\">Digest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>apply()</code>首先通过mouonts的长度和类型判断是否是临时挂载和使用哪个驱动</li>\n<li>一般在解压是需要<code>mount.WithTempMount()</code>挂载</li>\n<li>需要注意的是apply有各个平台的实现</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// diff/apply/apply_linux.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> mounts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> r io<span class=\"token punctuation\">.</span>Reader<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>mounts<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> mounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Type <span class=\"token operator\">==</span> <span class=\"token string\">\"overlay\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">// OverlayConvertWhiteout (mknod c 0 0) doesn't work in userns.</span>\n    <span class=\"token comment\">// https://github.com/containerd/containerd/issues/3762</span>\n    <span class=\"token keyword\">if</span> userns<span class=\"token punctuation\">.</span><span class=\"token function\">RunningInUserNS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">break</span>\n    <span class=\"token punctuation\">&#125;</span>\n    path<span class=\"token punctuation\">,</span> parents<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">getOverlayPath</span><span class=\"token punctuation\">(</span>mounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsInvalidArgument</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">break</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    opts <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>archive<span class=\"token punctuation\">.</span>ApplyOpt<span class=\"token punctuation\">&#123;</span>\n      archive<span class=\"token punctuation\">.</span><span class=\"token function\">WithConvertWhiteout</span><span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">.</span>OverlayConvertWhiteout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>parents<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n      opts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">,</span> archive<span class=\"token punctuation\">.</span><span class=\"token function\">WithParents</span><span class=\"token punctuation\">(</span>parents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> archive<span class=\"token punctuation\">.</span><span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> err\n  <span class=\"token keyword\">case</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>mounts<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> mounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Type <span class=\"token operator\">==</span> <span class=\"token string\">\"aufs\"</span><span class=\"token punctuation\">:</span>\n    path<span class=\"token punctuation\">,</span> parents<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">getAufsPath</span><span class=\"token punctuation\">(</span>mounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsInvalidArgument</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">break</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    opts <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>archive<span class=\"token punctuation\">.</span>ApplyOpt<span class=\"token punctuation\">&#123;</span>\n      archive<span class=\"token punctuation\">.</span><span class=\"token function\">WithConvertWhiteout</span><span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">.</span>AufsConvertWhiteout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>parents<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n      opts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">,</span> archive<span class=\"token punctuation\">.</span><span class=\"token function\">WithParents</span><span class=\"token punctuation\">(</span>parents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> archive<span class=\"token punctuation\">.</span><span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> mount<span class=\"token punctuation\">.</span><span class=\"token function\">WithTempMount</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> mounts<span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>root <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> archive<span class=\"token punctuation\">.</span><span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> err\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这里开始执行bind挂载</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// mount/temp.go</span>\n\n<span class=\"token comment\">// WithTempMount mounts the provided mounts to a temp dir, and pass the temp dir to f.</span>\n<span class=\"token comment\">// The mounts are valid during the call to the f.</span>\n<span class=\"token comment\">// Finally we will unmount and remove the temp dir regardless of the result of f.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">WithTempMount</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> mounts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>Mount<span class=\"token punctuation\">,</span> f <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>root <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  root<span class=\"token punctuation\">,</span> uerr <span class=\"token operator\">:=</span> ioutil<span class=\"token punctuation\">.</span><span class=\"token function\">TempDir</span><span class=\"token punctuation\">(</span>tempMountLocation<span class=\"token punctuation\">,</span> <span class=\"token string\">\"containerd-mount\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> uerr <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>uerr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to create temp dir\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// We use Remove here instead of RemoveAll.</span>\n  <span class=\"token comment\">// The RemoveAll will delete the temp dir and all children it contains.</span>\n  <span class=\"token comment\">// When the Unmount fails, RemoveAll will incorrectly delete data from</span>\n  <span class=\"token comment\">// the mounted dir. However, if we use Remove, even though we won't</span>\n  <span class=\"token comment\">// successfully delete the temp dir and it may leak, we won't loss data</span>\n  <span class=\"token comment\">// from the mounted dir.</span>\n  <span class=\"token comment\">// For details, please refer to #1868 #1785.</span>\n  <span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> uerr <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> uerr <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>uerr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dir\"</span><span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to remove mount temp dir\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// We should do defer first, if not we will not do Unmount when only a part of Mounts are failed.</span>\n  <span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> uerr <span class=\"token operator\">=</span> <span class=\"token function\">UnmountAll</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> uerr <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      uerr <span class=\"token operator\">=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>uerr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to unmount %s\"</span><span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        err <span class=\"token operator\">=</span> uerr\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        err <span class=\"token operator\">=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> uerr<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// [&#123;bind /root/snapshotter/snapshots/1/fs [rw rbind]&#125;] /var/lib/containerd/tmpmounts/containerd-mount4278343774</span>\n  <span class=\"token keyword\">if</span> uerr <span class=\"token operator\">=</span> <span class=\"token function\">All</span><span class=\"token punctuation\">(</span>mounts<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> uerr <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>uerr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to mount %s\"</span><span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mount callback failed on %s\"</span><span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>All()</code>遍历所有mouts并执行挂载</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// mount/mount.go</span>\n\n<span class=\"token comment\">// All mounts all the provided mounts to the provided target</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">All</span><span class=\"token punctuation\">(</span>mounts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>Mount<span class=\"token punctuation\">,</span> target <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> m <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> mounts <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">Mount</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// mount/mount_linux.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>Mount<span class=\"token punctuation\">)</span> <span class=\"token function\">Mount</span><span class=\"token punctuation\">(</span>target <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> helperBinary <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> allowedHelperBinaries <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// helperBinary = \"mount.fuse\", typePrefix = \"fuse.\"</span>\n    typePrefix <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">TrimPrefix</span><span class=\"token punctuation\">(</span>helperBinary<span class=\"token punctuation\">,</span> <span class=\"token string\">\"mount.\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span>\n    <span class=\"token keyword\">if</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">HasPrefix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">,</span> typePrefix<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">mountWithHelper</span><span class=\"token punctuation\">(</span>helperBinary<span class=\"token punctuation\">,</span> typePrefix<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n    chdir   <span class=\"token builtin\">string</span>\n    options <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>Options\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// avoid hitting one page limit of mount argument buffer</span>\n  <span class=\"token comment\">//</span>\n  <span class=\"token comment\">// NOTE: 512 is a buffer during pagesize check.</span>\n  <span class=\"token keyword\">if</span> m<span class=\"token punctuation\">.</span>Type <span class=\"token operator\">==</span> <span class=\"token string\">\"overlay\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">optionsSize</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> pagesize<span class=\"token operator\">-</span><span class=\"token number\">512</span> <span class=\"token punctuation\">&#123;</span>\n    chdir<span class=\"token punctuation\">,</span> options <span class=\"token operator\">=</span> <span class=\"token function\">compactLowerdirOption</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  flags<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> losetup <span class=\"token operator\">:=</span> <span class=\"token function\">parseMountOptions</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> pagesize <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mount options is too long\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// propagation types.</span>\n  <span class=\"token keyword\">const</span> ptypes <span class=\"token operator\">=</span> unix<span class=\"token punctuation\">.</span>MS_SHARED <span class=\"token operator\">|</span> unix<span class=\"token punctuation\">.</span>MS_PRIVATE <span class=\"token operator\">|</span> unix<span class=\"token punctuation\">.</span>MS_SLAVE <span class=\"token operator\">|</span> unix<span class=\"token punctuation\">.</span>MS_UNBINDABLE\n\n  <span class=\"token comment\">// Ensure propagation type change flags aren't included in other calls.</span>\n  oflags <span class=\"token operator\">:=</span> flags <span class=\"token operator\">&amp;^</span> ptypes\n\n  <span class=\"token comment\">// In the case of remounting with changed data (data != \"\"), need to call mount (moby/moby#34077).</span>\n  <span class=\"token keyword\">if</span> flags<span class=\"token operator\">&amp;</span>unix<span class=\"token punctuation\">.</span>MS_REMOUNT <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> data <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// Initial call applying all non-propagation flags for mount</span>\n    <span class=\"token comment\">// or remount with changed data</span>\n    source <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span>Source\n    <span class=\"token keyword\">if</span> losetup <span class=\"token punctuation\">&#123;</span>\n      loFile<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">setupLoop</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>Source<span class=\"token punctuation\">,</span> LoopParams<span class=\"token punctuation\">&#123;</span>\n        Readonly<span class=\"token punctuation\">:</span>  oflags<span class=\"token operator\">&amp;</span>unix<span class=\"token punctuation\">.</span>MS_RDONLY <span class=\"token operator\">==</span> unix<span class=\"token punctuation\">.</span>MS_RDONLY<span class=\"token punctuation\">,</span>\n        Autoclear<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">defer</span> loFile<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token comment\">// Mount the loop device instead</span>\n      source <span class=\"token operator\">=</span> loFile<span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 执行mount系统调用</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">mountAt</span><span class=\"token punctuation\">(</span>chdir<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">,</span> <span class=\"token function\">uintptr</span><span class=\"token punctuation\">(</span>oflags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>看完bind挂载在看下普通的Apply()</li>\n<li>根据applyFunc参数来确定使用哪个apply，没有则默认使用<code>applyFunc</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// archive/tar.go</span>\n\n<span class=\"token comment\">// Apply applies a tar stream of an OCI style diff tar.</span>\n<span class=\"token comment\">// See https://github.com/opencontainers/image-spec/blob/master/layer.md#applying-changesets</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> root <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> r io<span class=\"token punctuation\">.</span>Reader<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>ApplyOpt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int64</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  root <span class=\"token operator\">=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Clean</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> options ApplyOptions\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> opt <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> opts <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">opt</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to apply option\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> options<span class=\"token punctuation\">.</span>Filter <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    options<span class=\"token punctuation\">.</span>Filter <span class=\"token operator\">=</span> all\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> options<span class=\"token punctuation\">.</span>applyFunc <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    options<span class=\"token punctuation\">.</span>applyFunc <span class=\"token operator\">=</span> applyFunc <span class=\"token comment\">// 这里调用了applyNaive</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> options<span class=\"token punctuation\">.</span><span class=\"token function\">applyFunc</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>applyNaive负责将tar文件解压到指定目录中(和snap绑定的临时目录tmpmounts)</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// archive/tar.go</span>\n\n<span class=\"token comment\">// applyNaive applies a tar stream of an OCI style diff tar to a directory</span>\n<span class=\"token comment\">// applying each file as either a whole file or whiteout.</span>\n<span class=\"token comment\">// See https://github.com/opencontainers/image-spec/blob/master/layer.md#applying-changesets</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">applyNaive</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> root <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> r io<span class=\"token punctuation\">.</span>Reader<span class=\"token punctuation\">,</span> options ApplyOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>size <span class=\"token builtin\">int64</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n    dirs <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>tar<span class=\"token punctuation\">.</span>Header\n\n    tr <span class=\"token operator\">=</span> tar<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Used for handling opaque directory markers which</span>\n    <span class=\"token comment\">// may occur out of order</span>\n    unpackedPaths <span class=\"token operator\">=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n    convertWhiteout <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>ConvertWhiteout\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> convertWhiteout <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// handle whiteouts by removing the target files</span>\n    convertWhiteout <span class=\"token operator\">=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>hdr <span class=\"token operator\">*</span>tar<span class=\"token punctuation\">.</span>Header<span class=\"token punctuation\">,</span> path <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      base <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Base</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n      dir <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> base <span class=\"token operator\">==</span> whiteoutOpaqueDir <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Lstat</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> err\n        <span class=\"token punctuation\">&#125;</span>\n        err <span class=\"token operator\">=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Walk</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>path <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> info os<span class=\"token punctuation\">.</span>FileInfo<span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">IsNotExist</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              err <span class=\"token operator\">=</span> <span class=\"token boolean\">nil</span> <span class=\"token comment\">// parent was deleted</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">return</span> err\n          <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token keyword\">if</span> path <span class=\"token operator\">==</span> dir <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n          <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> exists <span class=\"token operator\">:=</span> unpackedPaths<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">!</span>exists <span class=\"token punctuation\">&#123;</span>\n            err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveAll</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> err\n          <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token keyword\">if</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">HasPrefix</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">,</span> whiteoutPrefix<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        originalBase <span class=\"token operator\">:=</span> base<span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>whiteoutPrefix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n        originalPath <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">,</span> originalBase<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveAll</span><span class=\"token punctuation\">(</span>originalPath<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// Iterate through the files in the archive.</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">select</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token operator\">&lt;-</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    hdr<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> tr<span class=\"token punctuation\">.</span><span class=\"token function\">Next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">==</span> io<span class=\"token punctuation\">.</span>EOF <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// end of tar archive</span>\n      <span class=\"token keyword\">break</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n\n    size <span class=\"token operator\">+=</span> hdr<span class=\"token punctuation\">.</span>Size\n\n    <span class=\"token comment\">// Normalize name, for safety and for a simple is-root check</span>\n    hdr<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Clean</span><span class=\"token punctuation\">(</span>hdr<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n\n    accept<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> options<span class=\"token punctuation\">.</span><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span>hdr<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>accept <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">continue</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token function\">skipFile</span><span class=\"token punctuation\">(</span>hdr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Warnf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file %q ignored: archive may not be supported on system\"</span><span class=\"token punctuation\">,</span> hdr<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">continue</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Split name and resolve symlinks for root directory.</span>\n    ppath<span class=\"token punctuation\">,</span> base <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span>hdr<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n    ppath<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">RootPath</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> ppath<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to get root path\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Join to root before joining to parent path to ensure relative links are</span>\n    <span class=\"token comment\">// already resolved based on the root before adding to parent.</span>\n    path <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>ppath<span class=\"token punctuation\">,</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> path <span class=\"token operator\">==</span> root <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Debugf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file %q ignored: resolved to root\"</span><span class=\"token punctuation\">,</span> hdr<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">continue</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// If file is not directly under root, ensure parent directory</span>\n    <span class=\"token comment\">// exists or is created.</span>\n    <span class=\"token keyword\">if</span> ppath <span class=\"token operator\">!=</span> root <span class=\"token punctuation\">&#123;</span>\n      parentPath <span class=\"token operator\">:=</span> ppath\n      <span class=\"token keyword\">if</span> base <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n        parentPath <span class=\"token operator\">=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">mkparent</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> parentPath<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>Parents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Naive whiteout convert function which handles whiteout files by</span>\n    <span class=\"token comment\">// removing the target files.</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">validateWhiteout</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    writeFile<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">convertWhiteout</span><span class=\"token punctuation\">(</span>hdr<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to convert whiteout file %q\"</span><span class=\"token punctuation\">,</span> hdr<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>writeFile <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">continue</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// If path exits we almost always just want to remove and replace it.</span>\n    <span class=\"token comment\">// The only exception is when it is a directory *and* the file from</span>\n    <span class=\"token comment\">// the layer is also a directory. Then we want to merge them (i.e.</span>\n    <span class=\"token comment\">// just apply the metadata from the layer).</span>\n    <span class=\"token keyword\">if</span> fi<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Lstat</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>fi<span class=\"token punctuation\">.</span><span class=\"token function\">IsDir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> hdr<span class=\"token punctuation\">.</span>Typeflag <span class=\"token operator\">==</span> tar<span class=\"token punctuation\">.</span>TypeDir<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveAll</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> err\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    srcData <span class=\"token operator\">:=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">Reader</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">)</span>\n    srcHdr <span class=\"token operator\">:=</span> hdr\n\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">createTarFile</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">,</span> srcHdr<span class=\"token punctuation\">,</span> srcData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Directory mtimes must be handled at the end to avoid further</span>\n    <span class=\"token comment\">// file creation in them to modify the directory mtime</span>\n    <span class=\"token keyword\">if</span> hdr<span class=\"token punctuation\">.</span>Typeflag <span class=\"token operator\">==</span> tar<span class=\"token punctuation\">.</span>TypeDir <span class=\"token punctuation\">&#123;</span>\n      dirs <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>dirs<span class=\"token punctuation\">,</span> hdr<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    unpackedPaths<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> hdr <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> dirs <span class=\"token punctuation\">&#123;</span>\n    path<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">RootPath</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> hdr<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">chtimes</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token function\">boundTime</span><span class=\"token punctuation\">(</span><span class=\"token function\">latestTime</span><span class=\"token punctuation\">(</span>hdr<span class=\"token punctuation\">.</span>AccessTime<span class=\"token punctuation\">,</span> hdr<span class=\"token punctuation\">.</span>ModTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">boundTime</span><span class=\"token punctuation\">(</span>hdr<span class=\"token punctuation\">.</span>ModTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> size<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"Processor\"><a href=\"#Processor\" class=\"headerlink\" title=\"Processor\"></a>Processor</h4><ul>\n<li>processor主要负责解压缩相关比如gz等</li>\n<li>在apply这个函数中获取了processor</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// diff/apply/apply.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>fsApplier<span class=\"token punctuation\">)</span> <span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> desc ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> mounts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>diff<span class=\"token punctuation\">.</span>ApplyOpt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>d ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 从content读取</span>\n  ra<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">ReaderAt</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">defer</span> ra<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> processors <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>diff<span class=\"token punctuation\">.</span>StreamProcessor\n  processor <span class=\"token operator\">:=</span> diff<span class=\"token punctuation\">.</span><span class=\"token function\">NewProcessorChain</span><span class=\"token punctuation\">(</span>desc<span class=\"token punctuation\">.</span>MediaType<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>ra<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  processors <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>processors<span class=\"token punctuation\">,</span> processor<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> processor<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> diff<span class=\"token punctuation\">.</span><span class=\"token function\">GetProcessor</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> processor<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>ProcessorPayloads<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> emptyDesc<span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to get stream processor for %s\"</span><span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">.</span>MediaType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    processors <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>processors<span class=\"token punctuation\">,</span> processor<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> processor<span class=\"token punctuation\">.</span><span class=\"token function\">MediaType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> ocispec<span class=\"token punctuation\">.</span>MediaTypeImageLayer <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">break</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">defer</span> processor<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  digester <span class=\"token operator\">:=</span> digest<span class=\"token punctuation\">.</span>Canonical<span class=\"token punctuation\">.</span><span class=\"token function\">Digester</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  rc <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>readCounter<span class=\"token punctuation\">&#123;</span>\n    r<span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">TeeReader</span><span class=\"token punctuation\">(</span>processor<span class=\"token punctuation\">,</span> digester<span class=\"token punctuation\">.</span><span class=\"token function\">Hash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>注册在这里，从配置文件遍历然后注册</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/server/server.go</span>\n\n<span class=\"token comment\">// New creates and initializes a new containerd server</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">New</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> config <span class=\"token operator\">*</span>srvconfig<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Server<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">for</span> id<span class=\"token punctuation\">,</span> p <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> config<span class=\"token punctuation\">.</span>StreamProcessors <span class=\"token punctuation\">&#123;</span>\n    diff<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterProcessor</span><span class=\"token punctuation\">(</span>diff<span class=\"token punctuation\">.</span><span class=\"token function\">BinaryHandler</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Returns<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Accepts<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 注册 processor</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// ...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>从注释来看是根据配置配置的<code>MediaType</code>,来选择二进制解压</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// diff/stream.go</span>\n<span class=\"token comment\">// BinaryHandler creates a new stream processor handler which calls out to the given binary.</span>\n<span class=\"token comment\">// The id is used to identify the stream processor and allows the caller to send</span>\n<span class=\"token comment\">// payloads specific for that stream processor (i.e. decryption keys for decrypt stream processor).</span>\n<span class=\"token comment\">// The binary will be called for the provided mediaTypes and return the given media type.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">BinaryHandler</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> returnsMediaType <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> mediaTypes <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> path <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">,</span> env <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> Handler <span class=\"token punctuation\">&#123;</span>\n  set <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>mediaTypes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> m <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> mediaTypes <span class=\"token punctuation\">&#123;</span>\n    set<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">_</span> context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> mediaType <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>StreamProcessorInit<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> set<span class=\"token punctuation\">[</span>mediaType<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> stream StreamProcessor<span class=\"token punctuation\">,</span> payloads <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>StreamProcessor<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        payload <span class=\"token operator\">:=</span> payloads<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">NewBinaryProcessor</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> mediaType<span class=\"token punctuation\">,</span> returnsMediaType<span class=\"token punctuation\">,</span> stream<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">,</span> env<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>而默认情况下是<code>compressedHandler()</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// register the default compression handler</span>\n  <span class=\"token function\">RegisterProcessor</span><span class=\"token punctuation\">(</span>compressedHandler<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">compressedHandler</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> mediaType <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>StreamProcessorInit<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  compressed<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">DiffCompression</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> mediaType<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> compressed <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> stream StreamProcessor<span class=\"token punctuation\">,</span> payloads <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>StreamProcessor<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      ds<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> compression<span class=\"token punctuation\">.</span><span class=\"token function\">DecompressStream</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>compressedProcessor<span class=\"token punctuation\">&#123;</span>\n        rc<span class=\"token punctuation\">:</span> ds<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> stream StreamProcessor<span class=\"token punctuation\">,</span> payloads <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>StreamProcessor<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>stdProcessor<span class=\"token punctuation\">&#123;</span>\n      rc<span class=\"token punctuation\">:</span> stream<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>Decompress()就负责读取压缩格式</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// DecompressStream decompresses the archive and returns a ReaderCloser with the decompressed archive.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">DecompressStream</span><span class=\"token punctuation\">(</span>archive io<span class=\"token punctuation\">.</span>Reader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>DecompressReadCloser<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  buf <span class=\"token operator\">:=</span> <span class=\"token function\">newBufferedReader</span><span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">)</span>\n  bs<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">Peek</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> err <span class=\"token operator\">!=</span> io<span class=\"token punctuation\">.</span>EOF <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// Note: we'll ignore any io.EOF error because there are some odd</span>\n    <span class=\"token comment\">// cases where the layer.tar file will be empty (zero bytes) and</span>\n    <span class=\"token comment\">// that results in an io.EOF from the Peek() call. So, in those</span>\n    <span class=\"token comment\">// cases we'll just treat it as a non-compressed stream and</span>\n    <span class=\"token comment\">// that means just create an empty layer.</span>\n    <span class=\"token comment\">// See Issue docker/docker#18170</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">switch</span> compression <span class=\"token operator\">:=</span> <span class=\"token function\">DetectCompression</span><span class=\"token punctuation\">(</span>bs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> compression <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">case</span> Uncompressed<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>readCloserWrapper<span class=\"token punctuation\">&#123;</span>\n      Reader<span class=\"token punctuation\">:</span>      buf<span class=\"token punctuation\">,</span>\n      compression<span class=\"token punctuation\">:</span> compression<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token keyword\">case</span> Gzip<span class=\"token punctuation\">:</span>\n    ctx<span class=\"token punctuation\">,</span> cancel <span class=\"token operator\">:=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">WithCancel</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    gzReader<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">gzipDecompress</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>readCloserWrapper<span class=\"token punctuation\">&#123;</span>\n      Reader<span class=\"token punctuation\">:</span>      gzReader<span class=\"token punctuation\">,</span>\n      compression<span class=\"token punctuation\">:</span> compression<span class=\"token punctuation\">,</span>\n      closer<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> gzReader<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token keyword\">case</span> Zstd<span class=\"token punctuation\">:</span>\n    zstdReader<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> zstd<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>readCloserWrapper<span class=\"token punctuation\">&#123;</span>\n      Reader<span class=\"token punctuation\">:</span>      zstdReader<span class=\"token punctuation\">,</span>\n      compression<span class=\"token punctuation\">:</span> compression<span class=\"token punctuation\">,</span>\n      closer<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n        zstdReader<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\n  <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unsupported compression format %s\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>compression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Extension</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","tags":["k8s","containerd"]},{"title":"containerd源码-下载镜像","url":"/2023/11/03/containerd%E6%BA%90%E7%A0%81-%E4%B8%8B%E8%BD%BD%E9%95%9C%E5%83%8F/","content":"<p>前面介绍了插件注册以及启动,本次介绍下载镜像的过程</p>\n<span id=\"more\"></span>\n\n<p>代码版本为v.17.5</p>\n<blockquote>\n<p>主要依据ctr命令行工具的代码来阅读(cri还有套逻辑)，本文视角视角主要在客户端，服务端在后面的解析</p>\n</blockquote>\n<h4 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h4><h5 id=\"命令行处理\"><a href=\"#命令行处理\" class=\"headerlink\" title=\"命令行处理\"></a>命令行处理</h5><ul>\n<li>老套路，直接点进去看<code>app.New()</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/ctr/main.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  app <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  app<span class=\"token punctuation\">.</span>Commands <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>Commands<span class=\"token punctuation\">,</span> pluginCmds<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Stderr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ctr: %s\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    os<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这里面手机了很多子命令，我们主要关注<code>images.Command</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/ctr/app/main.go</span>\napp<span class=\"token punctuation\">.</span>Commands <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>cli<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">&#123;</span>\n    plugins<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    versionCmd<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    containers<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    content<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    events<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    images<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    leases<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    namespacesCmd<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    pprof<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    run<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    snapshots<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    tasks<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    install<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n    ociCmd<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> extraCmds<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>依然是收集命令的结构，点击去查看<code>pullCommand</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/ctr/commands/images/images.go</span>\n<span class=\"token keyword\">var</span> Command <span class=\"token operator\">=</span> cli<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">&#123;</span>\n  Name<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"images\"</span><span class=\"token punctuation\">,</span>\n  Aliases<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"image\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"i\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  Usage<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"manage images\"</span><span class=\"token punctuation\">,</span>\n  Subcommands<span class=\"token punctuation\">:</span> cli<span class=\"token punctuation\">.</span>Commands<span class=\"token punctuation\">&#123;</span>\n    checkCommand<span class=\"token punctuation\">,</span>\n    exportCommand<span class=\"token punctuation\">,</span>\n    importCommand<span class=\"token punctuation\">,</span>\n    listCommand<span class=\"token punctuation\">,</span>\n    mountCommand<span class=\"token punctuation\">,</span>\n    unmountCommand<span class=\"token punctuation\">,</span>\n    pullCommand<span class=\"token punctuation\">,</span>\n    pushCommand<span class=\"token punctuation\">,</span>\n    removeCommand<span class=\"token punctuation\">,</span>\n    tagCommand<span class=\"token punctuation\">,</span>\n    setLabelsCommand<span class=\"token punctuation\">,</span>\n    convertCommand<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这里开始进入pull相关代码，主要在<code>Action</code>下,精简了下代码</li>\n<li>首先创建了一个客户端，然后客户端获取了一个lease</li>\n<li>最后开始下载，点进去<code>Fetch()</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/ctr/commands/images/pull.go</span>\n\nclient<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">,</span> cancel<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> commands<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">defer</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    ctx<span class=\"token punctuation\">,</span> done<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">WithLease</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">defer</span> <span class=\"token function\">done</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\n    config<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">NewFetchConfig</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span>\n\n    img<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">Fetch</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> client<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"fetch\"><a href=\"#fetch\" class=\"headerlink\" title=\"fetch\"></a>fetch</h5><ul>\n<li>开始处理了下是否使用<code>TraceHTTP</code>,然后创建了一个显示进度的，这个显示进度得就是使用<code>ctr i pull</code>时显示的进度，从这里可以看到另外开了个携程负责显示</li>\n<li>紧接着根据配置文件将相关操作放到<code>opts</code>这个切片中,最后调用<code>client.Fetch()</code></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker.io/library/alpine:3.18.3:                                                  resolved       <span class=\"token operator\">|</span>++++++++++++++++++++++++++++++++++++++<span class=\"token operator\">|</span>\nindex-sha256:7144f7bab3d4c2648d7e59409f15ec52a18006a128c733fcff20d3a4a54ba44a:    <span class=\"token keyword\">done</span>           <span class=\"token operator\">|</span>++++++++++++++++++++++++++++++++++++++<span class=\"token operator\">|</span>\nmanifest-sha256:c5c5fda71656f28e49ac9c5416b3643eaa6a108a8093151d6d1afc9463be8e33: <span class=\"token keyword\">done</span>           <span class=\"token operator\">|</span>++++++++++++++++++++++++++++++++++++++<span class=\"token operator\">|</span>\nlayer-sha256:7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de:    <span class=\"token keyword\">done</span>           <span class=\"token operator\">|</span>++++++++++++++++++++++++++++++++++++++<span class=\"token operator\">|</span>\nconfig-sha256:7e01a0d0a1dcd9e539f8e9bbd80106d59efbdf97293b3d38f5d7a34501526cdb:   <span class=\"token keyword\">done</span>           <span class=\"token operator\">|</span>++++++++++++++++++++++++++++++++++++++<span class=\"token operator\">|</span>\nelapsed: <span class=\"token number\">9.9</span> s                                                                    total:  <span class=\"token number\">3.1</span> Mi <span class=\"token punctuation\">(</span><span class=\"token number\">322.3</span> KiB/s<span class=\"token punctuation\">)</span>\nunpacking linux/amd64 sha256:7144f7bab3d4c2648d7e59409f15ec52a18006a128c733fcff20d3a4a54ba44a<span class=\"token punctuation\">..</span>.\ndone: <span class=\"token number\">294</span>.389123ms<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/ctr/commands/content/fetch.go</span>\n\n<span class=\"token comment\">// Fetch loads all resources into the content store and returns the image</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Fetch</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> client <span class=\"token operator\">*</span>containerd<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">,</span> ref <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> config <span class=\"token operator\">*</span>FetchConfig<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\nongoing <span class=\"token operator\">:=</span> <span class=\"token function\">NewJobs</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>TraceHTTP <span class=\"token punctuation\">&#123;</span>\n    ctx <span class=\"token operator\">=</span> httptrace<span class=\"token punctuation\">.</span><span class=\"token function\">WithClientTrace</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> commands<span class=\"token punctuation\">.</span><span class=\"token function\">NewDebugClientTrace</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 进度条</span>\n  pctx<span class=\"token punctuation\">,</span> stopProgress <span class=\"token operator\">:=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">WithCancel</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  progress <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>ProgressOutput <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// no progress bar, because it hides some debug logs</span>\n      <span class=\"token function\">ShowProgress</span><span class=\"token punctuation\">(</span>pctx<span class=\"token punctuation\">,</span> ongoing<span class=\"token punctuation\">,</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">ContentStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>ProgressOutput<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>progress<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  h <span class=\"token operator\">:=</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">HandlerFunc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> desc ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> desc<span class=\"token punctuation\">.</span>MediaType <span class=\"token operator\">!=</span> images<span class=\"token punctuation\">.</span>MediaTypeDockerSchema1Manifest <span class=\"token punctuation\">&#123;</span>\n      ongoing<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>desc<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>pctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"image\"</span><span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fetching\"</span><span class=\"token punctuation\">)</span>\n  labels <span class=\"token operator\">:=</span> commands<span class=\"token punctuation\">.</span><span class=\"token function\">LabelArgs</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>Labels<span class=\"token punctuation\">)</span>\n  opts <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>containerd<span class=\"token punctuation\">.</span>RemoteOpt<span class=\"token punctuation\">&#123;</span>\n    containerd<span class=\"token punctuation\">.</span><span class=\"token function\">WithPullLabels</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    containerd<span class=\"token punctuation\">.</span><span class=\"token function\">WithResolver</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>Resolver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    containerd<span class=\"token punctuation\">.</span><span class=\"token function\">WithImageHandler</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    containerd<span class=\"token punctuation\">.</span>WithSchema1Conversion<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n  opts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>RemoteOpts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>AllMetadata <span class=\"token punctuation\">&#123;</span>\n    opts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">,</span> containerd<span class=\"token punctuation\">.</span><span class=\"token function\">WithAllMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>PlatformMatcher <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    opts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">,</span> containerd<span class=\"token punctuation\">.</span><span class=\"token function\">WithPlatformMatcher</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>PlatformMatcher<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> platform <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> config<span class=\"token punctuation\">.</span>Platforms <span class=\"token punctuation\">&#123;</span>\n      opts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">,</span> containerd<span class=\"token punctuation\">.</span><span class=\"token function\">WithPlatform</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  img<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Fetch</span><span class=\"token punctuation\">(</span>pctx<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">stopProgress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token operator\">&lt;-</span>progress\n  <span class=\"token keyword\">return</span> img<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这里首先创建一个<code>fetchCtx</code>并将将上面一些<code>opts</code>执行到fetcCtx中</li>\n<li>然后判断是不是下载时就进行解包，ctr命令里是先下载所有layer到content存储，然后在解压到快照服务，如果这个为真则下载一个layer就解压一个，在这里不支持边下载边解压</li>\n<li>随后根据配置来决定下载的平台()</li>\n<li>最终执行<code>c.fetch()</code>，点进去</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// client.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>Client<span class=\"token punctuation\">)</span> <span class=\"token function\">Fetch</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> ref <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>RemoteOpt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  fetchCtx <span class=\"token operator\">:=</span> <span class=\"token function\">defaultRemoteContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 申明最终用于下载的组件</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> opts <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> fetchCtx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">if</span> fetchCtx<span class=\"token punctuation\">.</span>Unpack <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>errdefs<span class=\"token punctuation\">.</span>ErrNotImplemented<span class=\"token punctuation\">,</span> <span class=\"token string\">\"unpack on fetch not supported, try pull\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">if</span> fetchCtx<span class=\"token punctuation\">.</span>PlatformMatcher <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>fetchCtx<span class=\"token punctuation\">.</span>Platforms<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n      fetchCtx<span class=\"token punctuation\">.</span>PlatformMatcher <span class=\"token operator\">=</span> platforms<span class=\"token punctuation\">.</span>All\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">var</span> ps <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>ocispec<span class=\"token punctuation\">.</span>Platform\n      <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> s <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> fetchCtx<span class=\"token punctuation\">.</span>Platforms <span class=\"token punctuation\">&#123;</span>\n        p<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> platforms<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid platform %s\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        ps <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      fetchCtx<span class=\"token punctuation\">.</span>PlatformMatcher <span class=\"token operator\">=</span> platforms<span class=\"token punctuation\">.</span><span class=\"token function\">Any</span><span class=\"token punctuation\">(</span>ps<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  ctx<span class=\"token punctuation\">,</span> done<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">WithLease</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">defer</span> <span class=\"token function\">done</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\n  img<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> fetchCtx<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">createNewImage</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>通过客户创建另一个cotent，为下载存储做准备</li>\n<li><code>rCtx.Resolver.Resolve()</code>镜像名字来解析index等信息</li>\n<li>接下来都是根据解析出来的<code>desc</code>解析出来的类型判断是否需要需要转换格式，主要是早期docker格式的v1版本转换,</li>\n<li>随后对<code>childerHadner</code>进行变量的判断来处理</li>\n<li>所有的hander都放到<code>handlers</code>这个切片中，然后后丢给<code>images.Handlers</code>处理</li>\n<li><code>images.Dispatch</code>对desc遍历并递归调用每层都会经过上面的hander处理</li>\n<li>最终返回一个<code>images.Image</code>对象,到此下下载镜像完成</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// pull.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>Client<span class=\"token punctuation\">)</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> rCtx <span class=\"token operator\">*</span>RemoteContext<span class=\"token punctuation\">,</span> ref <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> limit <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  store <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">ContentStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  name<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> rCtx<span class=\"token punctuation\">.</span>Resolver<span class=\"token punctuation\">.</span><span class=\"token function\">Resolve</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">)</span>\n\n  fetcher<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> rCtx<span class=\"token punctuation\">.</span>Resolver<span class=\"token punctuation\">.</span><span class=\"token function\">Fetcher</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n    handler images<span class=\"token punctuation\">.</span>Handler\n    isConvertible <span class=\"token builtin\">bool</span>\n    converterFunc <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n    limiter       <span class=\"token operator\">*</span>semaphore<span class=\"token punctuation\">.</span>Weighted\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> desc<span class=\"token punctuation\">.</span>MediaType <span class=\"token operator\">==</span> images<span class=\"token punctuation\">.</span>MediaTypeDockerSchema1Manifest <span class=\"token operator\">&amp;&amp;</span> rCtx<span class=\"token punctuation\">.</span>ConvertSchema1 <span class=\"token punctuation\">&#123;</span>\n    schema1Converter <span class=\"token operator\">:=</span> schema1<span class=\"token punctuation\">.</span><span class=\"token function\">NewConverter</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">,</span> fetcher<span class=\"token punctuation\">)</span>\n    handler <span class=\"token operator\">=</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">Handlers</span><span class=\"token punctuation\">(</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>rCtx<span class=\"token punctuation\">.</span>BaseHandlers<span class=\"token punctuation\">,</span> schema1Converter<span class=\"token punctuation\">)</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n    isConvertible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    converterFunc <span class=\"token operator\">=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> schema1Converter<span class=\"token punctuation\">.</span><span class=\"token function\">Convert</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// Get all the children for a descriptor</span>\n    childrenHandler <span class=\"token operator\">:=</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">ChildrenHandler</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// Set any children labels for that content</span>\n    childrenHandler <span class=\"token operator\">=</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">SetChildrenMappedLabels</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">,</span> childrenHandler<span class=\"token punctuation\">,</span> rCtx<span class=\"token punctuation\">.</span>ChildLabelMap<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> rCtx<span class=\"token punctuation\">.</span>AllMetadata <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// Filter manifests by platforms but allow to handle manifest</span>\n      <span class=\"token comment\">// and configuration for not-target platforms</span>\n      childrenHandler <span class=\"token operator\">=</span> remotes<span class=\"token punctuation\">.</span><span class=\"token function\">FilterManifestByPlatformHandler</span><span class=\"token punctuation\">(</span>childrenHandler<span class=\"token punctuation\">,</span> rCtx<span class=\"token punctuation\">.</span>PlatformMatcher<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// Filter children by platforms if specified.</span>\n      childrenHandler <span class=\"token operator\">=</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">FilterPlatforms</span><span class=\"token punctuation\">(</span>childrenHandler<span class=\"token punctuation\">,</span> rCtx<span class=\"token punctuation\">.</span>PlatformMatcher<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// Sort and limit manifests if a finite number is needed</span>\n    <span class=\"token keyword\">if</span> limit <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n      childrenHandler <span class=\"token operator\">=</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">LimitManifests</span><span class=\"token punctuation\">(</span>childrenHandler<span class=\"token punctuation\">,</span> rCtx<span class=\"token punctuation\">.</span>PlatformMatcher<span class=\"token punctuation\">,</span> limit<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// set isConvertible to true if there is application/octet-stream media type</span>\n    convertibleHandler <span class=\"token operator\">:=</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">HandlerFunc</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">_</span> context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> desc ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> desc<span class=\"token punctuation\">.</span>MediaType <span class=\"token operator\">==</span> docker<span class=\"token punctuation\">.</span>LegacyConfigMediaType <span class=\"token punctuation\">&#123;</span>\n          isConvertible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    appendDistSrcLabelHandler<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> docker<span class=\"token punctuation\">.</span><span class=\"token function\">AppendDistributionSourceLabel</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">)</span>\n\n    handlers <span class=\"token operator\">:=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>rCtx<span class=\"token punctuation\">.</span>BaseHandlers<span class=\"token punctuation\">,</span>\n      remotes<span class=\"token punctuation\">.</span><span class=\"token function\">FetchHandler</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">,</span> fetcher<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 负责下载</span>\n      convertibleHandler<span class=\"token punctuation\">,</span>\n      childrenHandler<span class=\"token punctuation\">,</span>\n      appendDistSrcLabelHandler<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    handler <span class=\"token operator\">=</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">Handlers</span><span class=\"token punctuation\">(</span>handlers<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n\n    converterFunc <span class=\"token operator\">=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> desc ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> docker<span class=\"token punctuation\">.</span><span class=\"token function\">ConvertManifest</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> store<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">if</span> rCtx<span class=\"token punctuation\">.</span>HandlerWrapper <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    handler <span class=\"token operator\">=</span> rCtx<span class=\"token punctuation\">.</span><span class=\"token function\">HandlerWrapper</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">if</span> rCtx<span class=\"token punctuation\">.</span>MaxConcurrentDownloads <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n    limiter <span class=\"token operator\">=</span> semaphore<span class=\"token punctuation\">.</span><span class=\"token function\">NewWeighted</span><span class=\"token punctuation\">(</span><span class=\"token function\">int64</span><span class=\"token punctuation\">(</span>rCtx<span class=\"token punctuation\">.</span>MaxConcurrentDownloads<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 递归调用</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">Dispatch</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">,</span> limiter<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">if</span> isConvertible <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> desc<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> <span class=\"token function\">converterFunc</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">&#123;</span>\n    Name<span class=\"token punctuation\">:</span>   name<span class=\"token punctuation\">,</span>\n    Target<span class=\"token punctuation\">:</span> desc<span class=\"token punctuation\">,</span>\n    Labels<span class=\"token punctuation\">:</span> rCtx<span class=\"token punctuation\">.</span>Labels<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>其中主要下载的函数是<code>remotes.FetchHandler(store, fetcher)</code>,这个函数首先判断MediaType,docker v1的直接报错报错返回<br>主要看<code>fetch</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// remotes/handlers.go</span>\n\n<span class=\"token comment\">// FetchHandler returns a handler that will fetch all content into the ingester</span>\n<span class=\"token comment\">// discovered in a call to Dispatch. Use with ChildrenHandler to do a full</span>\n<span class=\"token comment\">// recursive fetch.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">FetchHandler</span><span class=\"token punctuation\">(</span>ingester content<span class=\"token punctuation\">.</span>Ingester<span class=\"token punctuation\">,</span> fetcher Fetcher<span class=\"token punctuation\">)</span> images<span class=\"token punctuation\">.</span>HandlerFunc <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> desc ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>subdescs <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    ctx <span class=\"token operator\">=</span> log<span class=\"token punctuation\">.</span><span class=\"token function\">WithLogger</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithFields</span><span class=\"token punctuation\">(</span>logrus<span class=\"token punctuation\">.</span>Fields<span class=\"token punctuation\">&#123;</span>\n      <span class=\"token string\">\"digest\"</span><span class=\"token punctuation\">:</span>    desc<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"mediatype\"</span><span class=\"token punctuation\">:</span> desc<span class=\"token punctuation\">.</span>MediaType<span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">:</span>      desc<span class=\"token punctuation\">.</span>Size<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">switch</span> desc<span class=\"token punctuation\">.</span>MediaType <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> images<span class=\"token punctuation\">.</span>MediaTypeDockerSchema1Manifest<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%v not supported\"</span><span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">.</span>MediaType<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n      err <span class=\"token operator\">:=</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> ingester<span class=\"token punctuation\">,</span> fetcher<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 真正用来干活的</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>调用<code>content.OpenWriter()</code>创建了cw,通过错误判断是不是已经存在了</li>\n<li>调用<code>Status()</code>获取状态，然后判断是content-service中大小，如果相同则提交</li>\n<li>随后调用<code>fetcher.Fetch()</code>开始真正的下载内容然后通过流式拷贝到<code>content.Writer()</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> ingester content<span class=\"token punctuation\">.</span>Ingester<span class=\"token punctuation\">,</span> fetcher Fetcher<span class=\"token punctuation\">,</span> desc ocispec<span class=\"token punctuation\">.</span>Descriptor<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n  \n  cw<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">OpenWriter</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> ingester<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">WithRef</span><span class=\"token punctuation\">(</span><span class=\"token function\">MakeRefKey</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">WithDescriptor</span><span class=\"token punctuation\">(</span>desc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsAlreadyExists</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">defer</span> cw<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  ws<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> cw<span class=\"token punctuation\">.</span><span class=\"token function\">Status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> desc<span class=\"token punctuation\">.</span>Size <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// most likely a poorly configured registry/web front end which responded with no</span>\n    <span class=\"token comment\">// Content-Length header; unable (not to mention useless) to commit a 0-length entry</span>\n    <span class=\"token comment\">// into the content store. Error out here otherwise the error sent back is confusing</span>\n    <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>errdefs<span class=\"token punctuation\">.</span>ErrInvalidArgument<span class=\"token punctuation\">,</span> <span class=\"token string\">\"unable to fetch descriptor (%s) which reports content size of zero\"</span><span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> ws<span class=\"token punctuation\">.</span>Offset <span class=\"token operator\">==</span> desc<span class=\"token punctuation\">.</span>Size <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// If writer is already complete, commit and return</span>\n    err <span class=\"token operator\">:=</span> cw<span class=\"token punctuation\">.</span><span class=\"token function\">Commit</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">.</span>Size<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsAlreadyExists</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed commit on ref %q\"</span><span class=\"token punctuation\">,</span> ws<span class=\"token punctuation\">.</span>Ref<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  rc<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> fetcher<span class=\"token punctuation\">.</span><span class=\"token function\">Fetch</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 下载数据</span>\n\n  <span class=\"token keyword\">defer</span> rc<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> cw<span class=\"token punctuation\">,</span> rc<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">.</span>Size<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 拷贝数据</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"创建IMAGE\"><a href=\"#创建IMAGE\" class=\"headerlink\" title=\"创建IMAGE\"></a>创建IMAGE</h5><ul>\n<li>镜像layer下载完成之后需要解压因此回到Fetch函数，执行完c.fetch之后根据返回的image对象创建了一个image,可以看到其实是根据客户端创建了一个ImagesService<br>然后创建了个imags,</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>Client<span class=\"token punctuation\">)</span> <span class=\"token function\">Fetch</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> ref <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>RemoteOpt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 省略</span>\n  img<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> fetchCtx<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">createNewImage</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>Client<span class=\"token punctuation\">)</span> <span class=\"token function\">createNewImage</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> img images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  is <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">ImageService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> created<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsAlreadyExists</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n\n      updated<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// if image was removed, try create again</span>\n        <span class=\"token keyword\">if</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsNotFound</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">continue</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> images<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n\n      img <span class=\"token operator\">=</span> updated\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      img <span class=\"token operator\">=</span> created\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> img<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h4><ul>\n<li>回到Action中,根据<code>content.Fetch</code>中返回的img,然后根据配置参数是否全平台来遍历</li>\n<li>循环中调用了<code>containerd.NewImageWithPlatform()</code>创建了一个<code>containerd.Image</code>类型的i,然后调用<code>i.Unpack()</code>开始解压,</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/ctr/commands/images/pull.go</span>\nAction<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>context <span class=\"token operator\">*</span>cli<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">// 省略</span>\n\nimg<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">Fetch</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> client<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> p <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>ocispec<span class=\"token punctuation\">.</span>Platform\n    <span class=\"token keyword\">if</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">Bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"all-platforms\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      p<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">Platforms</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">ContentStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>Target<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"unable to resolve image platforms\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> s <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">StringSlice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"platform\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ps<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> platforms<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"unable to parse platform %s\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        p <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> ps<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n      p <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> platforms<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultSpec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    start <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> platform <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> p <span class=\"token punctuation\">&#123;</span>\n      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unpacking %s %s...\\n\"</span><span class=\"token punctuation\">,</span> platforms<span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>Target<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">)</span>\n      i <span class=\"token operator\">:=</span> containerd<span class=\"token punctuation\">.</span><span class=\"token function\">NewImageWithPlatform</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span> platforms<span class=\"token punctuation\">.</span><span class=\"token function\">Only</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n      err <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">Unpack</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"snapshotter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">Bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"print-chainid\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        diffIDs<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">RootFS</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\n        chainID <span class=\"token operator\">:=</span> identity<span class=\"token punctuation\">.</span><span class=\"token function\">ChainID</span><span class=\"token punctuation\">(</span>diffIDs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"image chain ID: %s\\n\"</span><span class=\"token punctuation\">,</span> chainID<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"done: %s\\t\\n\"</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Since</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>首先获取一个lease,然后执行opt传参</li>\n<li>调用<code>i.getManifest()</code>获取manifest，调用<code>i.getLayers()</code>获取layers</li>\n<li>申明一个<code>DiffService</code>和<code>ContentStore</code>以及一个<code>snapshotter</code></li>\n<li>遍历layers,开始调用<code>rootfs.ApplyLayerWithOpts</code>开始对每一层进行解压</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// image.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span>image<span class=\"token punctuation\">)</span> <span class=\"token function\">Unpack</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> snapshotterName <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>UnpackOpt<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n  ctx<span class=\"token punctuation\">,</span> done<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> i<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span><span class=\"token function\">WithLease</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">defer</span> <span class=\"token function\">done</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> config UnpackConfig\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> opts <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  manifest<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">getManifest</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>platform<span class=\"token punctuation\">)</span>\n\n  layers<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">getLayers</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>platform<span class=\"token punctuation\">,</span> manifest<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n    a  <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span><span class=\"token function\">DiffService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cs <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span><span class=\"token function\">ContentStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    chain    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>digest<span class=\"token punctuation\">.</span>Digest\n    unpacked <span class=\"token builtin\">bool</span>\n  <span class=\"token punctuation\">)</span>\n  snapshotterName<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span><span class=\"token function\">resolveSnapshotterName</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> snapshotterName<span class=\"token punctuation\">)</span>\n\n  sn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> i<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span><span class=\"token function\">getSnapshotter</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> snapshotterName<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>CheckPlatformSupported <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">checkSnapshotterSupport</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> snapshotterName<span class=\"token punctuation\">,</span> manifest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> layer <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> layers <span class=\"token punctuation\">&#123;</span>\n    unpacked<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> rootfs<span class=\"token punctuation\">.</span><span class=\"token function\">ApplyLayerWithOpts</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> layer<span class=\"token punctuation\">,</span> chain<span class=\"token punctuation\">,</span> sn<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>SnapshotOpts<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>ApplyOpts<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> unpacked <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// Set the uncompressed label after the uncompressed</span>\n      <span class=\"token comment\">// digest has been verified through apply.</span>\n      cinfo <span class=\"token operator\">:=</span> content<span class=\"token punctuation\">.</span>Info<span class=\"token punctuation\">&#123;</span>\n        Digest<span class=\"token punctuation\">:</span> layer<span class=\"token punctuation\">.</span>Blob<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">,</span>\n        Labels<span class=\"token punctuation\">:</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>\n          <span class=\"token string\">\"containerd.io/uncompressed\"</span><span class=\"token punctuation\">:</span> layer<span class=\"token punctuation\">.</span>Diff<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> cs<span class=\"token punctuation\">.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> cinfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"labels.containerd.io/uncompressed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    chain <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">,</span> layer<span class=\"token punctuation\">.</span>Diff<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  desc<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> i<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span><span class=\"token function\">Config</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>platform<span class=\"token punctuation\">)</span>\n\n  rootfs <span class=\"token operator\">:=</span> identity<span class=\"token punctuation\">.</span><span class=\"token function\">ChainID</span><span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  cinfo <span class=\"token operator\">:=</span> content<span class=\"token punctuation\">.</span>Info<span class=\"token punctuation\">&#123;</span>\n    Digest<span class=\"token punctuation\">:</span> desc<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">,</span>\n    Labels<span class=\"token punctuation\">:</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>\n      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"containerd.io/gc.ref.snapshot.%s\"</span><span class=\"token punctuation\">,</span> snapshotterName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> rootfs<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> cs<span class=\"token punctuation\">.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> cinfo<span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"labels.containerd.io/gc.ref.snapshot.%s\"</span><span class=\"token punctuation\">,</span> snapshotterName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> err\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这里会请求snapshot的Stst()查看状态，通过判断错误是不是已存在来决定是否进行下一步，若一切没问题则调用<code>applyLayers()</code>正式解压</li>\n<li>这里需要注意这个<code>chainID</code>,chainID是通过每个layer的<code>sha256(sha256+sha256)</code>计算得来，其中这些sha256就是config类型的layer中<code>diff_ids</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// rootfs/apply.go</span>\n\n<span class=\"token comment\">// ApplyLayerWithOpts applies a single layer on top of the given provided layer chain,</span>\n<span class=\"token comment\">// using the provided snapshotter, applier, and apply opts. If the layer was unpacked true</span>\n<span class=\"token comment\">// is returned, if the layer already exists false is returned.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">ApplyLayerWithOpts</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> layer Layer<span class=\"token punctuation\">,</span> chain <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>digest<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">,</span> sn snapshots<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">,</span> a diff<span class=\"token punctuation\">.</span>Applier<span class=\"token punctuation\">,</span> opts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>snapshots<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">,</span> applyOpts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>diff<span class=\"token punctuation\">.</span>ApplyOpt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n    chainID <span class=\"token operator\">=</span> identity<span class=\"token punctuation\">.</span><span class=\"token function\">ChainID</span><span class=\"token punctuation\">(</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">,</span> layer<span class=\"token punctuation\">.</span>Diff<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    applied <span class=\"token builtin\">bool</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> sn<span class=\"token punctuation\">.</span><span class=\"token function\">Stat</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> chainID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsNotFound</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to stat snapshot %s\"</span><span class=\"token punctuation\">,</span> chainID<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">applyLayers</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>Layer<span class=\"token punctuation\">&#123;</span>layer<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">,</span> layer<span class=\"token punctuation\">.</span>Diff<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sn<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">,</span> applyOpts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsAlreadyExists</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      applied <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> applied<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>主要发送请求<code>snapshots.Prepare()</code>接口,获取到<code>mount</code>作为参数请求apply参数,随后<code>snapshots.Commit()</code></li>\n<li>到此整个解压完成</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">applyLayers</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> layers <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>Layer<span class=\"token punctuation\">,</span> chain <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>digest<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">,</span> sn snapshots<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">,</span> a diff<span class=\"token punctuation\">.</span>Applier<span class=\"token punctuation\">,</span> opts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>snapshots<span class=\"token punctuation\">.</span>Opt<span class=\"token punctuation\">,</span> applyOpts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>diff<span class=\"token punctuation\">.</span>ApplyOpt<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n    parent  <span class=\"token operator\">=</span> identity<span class=\"token punctuation\">.</span><span class=\"token function\">ChainID</span><span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    chainID <span class=\"token operator\">=</span> identity<span class=\"token punctuation\">.</span><span class=\"token function\">ChainID</span><span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">)</span>\n    layer   <span class=\"token operator\">=</span> layers<span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>layers<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    diff    ocispec<span class=\"token punctuation\">.</span>Descriptor\n    key     <span class=\"token builtin\">string</span>\n    mounts  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>mount<span class=\"token punctuation\">.</span>Mount\n    err     <span class=\"token builtin\">error</span>\n  <span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">&#123;</span>\n    key <span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span>snapshots<span class=\"token punctuation\">.</span>UnpackKeyFormat<span class=\"token punctuation\">,</span> <span class=\"token function\">uniquePart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> chainID<span class=\"token punctuation\">)</span><span class=\"token comment\">// 生成请求的key格式</span>\n\n    <span class=\"token comment\">// Prepare snapshot with from parent, label as root</span>\n    mounts<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> sn<span class=\"token punctuation\">.</span><span class=\"token function\">Prepare</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsNotFound</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>layers<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">applyLayers</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> layers<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>layers<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> chain<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sn<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">,</span> applyOpts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsAlreadyExists</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> err\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// Do no try applying layers again</span>\n        layers <span class=\"token operator\">=</span> <span class=\"token boolean\">nil</span>\n        <span class=\"token keyword\">continue</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsAlreadyExists</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Try a different key</span>\n        <span class=\"token keyword\">continue</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token comment\">// Already exists should have the caller retry</span>\n      <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to prepare extraction snapshot %q\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">break</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>errdefs<span class=\"token punctuation\">.</span><span class=\"token function\">IsAlreadyExists</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Infof</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"apply failure, attempting cleanup\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token keyword\">if</span> rerr <span class=\"token operator\">:=</span> sn<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> rerr <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>rerr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Warnf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"extraction snapshot removal failed\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  diff<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">Apply</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> layer<span class=\"token punctuation\">.</span>Blob<span class=\"token punctuation\">,</span> mounts<span class=\"token punctuation\">,</span> applyOpts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    err <span class=\"token operator\">=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to extract layer %s\"</span><span class=\"token punctuation\">,</span> layer<span class=\"token punctuation\">.</span>Diff<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> diff<span class=\"token punctuation\">.</span>Digest <span class=\"token operator\">!=</span> layer<span class=\"token punctuation\">.</span>Diff<span class=\"token punctuation\">.</span>Digest <span class=\"token punctuation\">&#123;</span>\n    err <span class=\"token operator\">=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong diff id calculated on extraction %q\"</span><span class=\"token punctuation\">,</span> diff<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">=</span> sn<span class=\"token punctuation\">.</span><span class=\"token function\">Commit</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> chainID<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> opts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    err <span class=\"token operator\">=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to commit snapshot %s\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>回到Unpack这里获取镜像的config通过chan计算出id并更新到content的标签中</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span>image<span class=\"token punctuation\">)</span> <span class=\"token function\">Unpack</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> snapshotterName <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> opts <span class=\"token operator\">...</span>UnpackOpt<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// ...</span>\n  desc<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> i<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span><span class=\"token function\">Config</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>platform<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  rootfs <span class=\"token operator\">:=</span> identity<span class=\"token punctuation\">.</span><span class=\"token function\">ChainID</span><span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  cinfo <span class=\"token operator\">:=</span> content<span class=\"token punctuation\">.</span>Info<span class=\"token punctuation\">&#123;</span>\n    Digest<span class=\"token punctuation\">:</span> desc<span class=\"token punctuation\">.</span>Digest<span class=\"token punctuation\">,</span>\n    Labels<span class=\"token punctuation\">:</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>\n      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"containerd.io/gc.ref.snapshot.%s\"</span><span class=\"token punctuation\">,</span> snapshotterName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> rootfs<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> cs<span class=\"token punctuation\">.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> cinfo<span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"labels.containerd.io/gc.ref.snapshot.%s\"</span><span class=\"token punctuation\">,</span> snapshotterName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"chanid计算\"><a href=\"#chanid计算\" class=\"headerlink\" title=\"chanid计算\"></a>chanid计算</h5><ul>\n<li>下面这个diff_ids是从镜像uhub.service.ucloud.cn&#x2F;library&#x2F;nginx:1.9.7中的config截取</li>\n</ul>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n<span class=\"token property\">\"linux\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"rootfs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"layers\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"diff_ids\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"sha256:12e469267d21d66ac9dcae33a4d3d202ccb2591869270b95d0aad7516c7d075b\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sha256:031458dc7254bd4da9c9ca8186b60aef311d0c921a846c6d2b281779035e2c7c\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sha256:ebfc3a74f1601ad380e5e5a09738e952a5f86861a24e6efc00d0e03c0bd47d93\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sha256:673cf6d9dedba7cfb37ebd2c06f2373d16a29504976ca7e40335fb53e81cab16\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sha256:40f240c1cbdb8a32ef21e2ec9154e65cc84027f238e453d69a7bb33246d6890b\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sha256:0b3fbb980e2d51043bd23f9af674a536225fe023605cc485bac77dbb6111b433\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\"</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>如果只有一层的话就是自己</p>\n</li>\n<li><p>拿第一层的sha256的值加上空格加上第二层的sha256的值然后使用sha256,我们发现结果是<code>a8118485e4e7548235fa8a00da06ecc21b31dea6bf5a7dd2eed99b47f70ed000</code></p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"sha256:12e469267d21d66ac9dcae33a4d3d202ccb2591869270b95d0aad7516c7d075b sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\"</span> <span class=\"token operator\">|</span>shasum <span class=\"token parameter variable\">-a</span> <span class=\"token number\">256</span>\neb0cfd964b3fe37432b0bb666bd537ca1ea730cf517eb2d0d3783b952ad10204  -<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>同样用上一层的chan_id加上第三层的id</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"sha256:eb0cfd964b3fe37432b0bb666bd537ca1ea730cf517eb2d0d3783b952ad10204 sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\"</span> <span class=\"token operator\">|</span>shasum <span class=\"token parameter variable\">-a</span> <span class=\"token number\">256</span>\na8118485e4e7548235fa8a00da06ecc21b31dea6bf5a7dd2eed99b47f70ed000  -<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>我们可以验证下,使用<a href=\"https://github.com/br0xen/boltbrowser\">boltbrowser</a>打开位于在<code>/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs/metadata.db</code>的snap的数据库，如下图所示符合预期</li>\n</ul>\n<p><img src=\"/../images/containerd-8.png\" alt=\"Alt text\"></p>\n<ul>\n<li>所谓diff_id是当前层和父层的变化,将所有的diff_id组合起来就是一个我们在dockerfile中编写的镜像</li>\n</ul>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><pre><code class=\"mermaid\">sequenceDiagram\n    autonumber\n    participant hub as 仓库\n    participant client as 客户端\n    participant diff as diff-service\n    participant content as content-service\n    participant snapshotter as snapshotter-service\n    participant image as image-service\n\n    client-&gt;&gt;hub:获取镜像index\n    client-&gt;&gt;content:存储index信息(content.Writer)\n    client-&gt;&gt;hub:获取manifests\n    client-&gt;&gt;content:存储manifests信息(content.Writer)\n    client-&gt;&gt;hub:获取config\n    client-&gt;&gt;content:存储manifests信息(content.Writer)\n\n    loop 保存所有的layers\n    client-&gt;&gt;hub:下载镜像\n    client-&gt;&gt;content:获取状态(content.Status)\n    client-&gt;&gt;content:写入layer(content.Writer)\n    client-&gt;&gt;content:提交layer(content.Commit)\n    client-&gt;&gt;content:读取元信息(content.ReadAt)\n    end\n    client-&gt;&gt;image:创建镜像(image.Create)\n    #client-&gt;&gt;image:创建镜像(如果已经存在)(image.Update)\n\n    loop 遍历layer解压缩到snapshot\n    client-&gt;&gt;snapshotter:获取snap状态判断是否已存在(snapper.Status)\n    client-&gt;&gt;snapshotter:创建snap(snapper.Prepare)\n    client-&gt;&gt;diff:apply layer(diff.Apply)\n    diff-&gt;&gt;content:读取layers(content.ReaderAt)\n    diff-&gt;&gt;diff:写入解压后的layers(路径是prepare给的)\n    client-&gt;&gt;snapshotter:提交快照\n    end</code></pre>\n\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><p><a href=\"https://blog.csdn.net/alex_yangchuansheng/article/details/111829103\">https://blog.csdn.net/alex_yangchuansheng/article/details/111829103</a><br><a href=\"https://www.myway5.com/index.php/2021/05/24/containerd-storage\">https://www.myway5.com/index.php/2021/05/24/containerd-storage</a><br><a href=\"https://www.myway5.com/index.php/2021/05/18/container-image\">https://www.myway5.com/index.php/2021/05/18/container-image</a><br><a href=\"https://www.myway5.com/index.php/2021/05/24/containerd-storage/\">https://www.myway5.com/index.php/2021/05/24/containerd-storage/</a><br><a href=\"https://github.com/containerd/containerd/blob/main/docs/content-flow.md\">https://github.com/containerd/containerd/blob/main/docs/content-flow.md</a><br><a href=\"https://blog.csdn.net/weixin_40864891/article/details/107330218\">https://blog.csdn.net/weixin_40864891/article/details/107330218</a></p>\n","tags":["k8s","containerd"]},{"title":"docker部署frp内网穿透","url":"/2023/11/27/docker%E9%83%A8%E7%BD%B2frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/","content":"<p><a href=\"https://github.com/fatedier/frp\">frp</a>是一个国人开发的内网穿透工具</p>\n<span id=\"more\"></span>\n\n<p><img src=\"/../images/frp-1.png\" alt=\"Alt text\"></p>\n<ul>\n<li>frp是cs架构，访问frps(服务端)就可以访问部署在内网的frpc(客户端)</li>\n</ul>\n<h4 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h4><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.8'</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">frps</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> snowdreamtech/frps\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> frps\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">network_mode</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"host\"</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> /etc/frp/<span class=\"token punctuation\">:</span>/etc/frp/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-toml\" data-language=\"toml\"><code class=\"language-toml\"><span class=\"token comment\"># frps.toml</span>\n<span class=\"token key property\">bindPort</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">7000</span>\n<span class=\"token key property\">auth.token</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&lt;密码>\"</span>\n\n<span class=\"token comment\"># 报表</span>\n<span class=\"token key property\">webServer.addr</span><span class=\"token punctuation\">=</span> <span class=\"token string\">\"0.0.0.0\"</span>\n<span class=\"token key property\">webServer.port</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">7500</span>\n<span class=\"token key property\">webServer.user</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"admin\"</span>\n<span class=\"token key property\">webServer.password</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&lt;密码>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>启动之后可以通过7500端口访问报表</li>\n</ul>\n<h5 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h5><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.8'</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">frpc</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> snowdreamtech/frpc<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> frpc\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">network_mode</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"host\"</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> /data/frp/<span class=\"token punctuation\">:</span>/etc/frp/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-toml\" data-language=\"toml\"><code class=\"language-toml\"><span class=\"token key property\">serverAddr</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&lt;服务器地址>\"</span>\n<span class=\"token key property\">serverPort</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">7000</span>\n\n<span class=\"token key property\">auth.token</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&lt;服务端认证token>\"</span>\n\n<span class=\"token key property\">webServer.port</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">7400</span>\n<span class=\"token key property\">webServer.user</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"admin\"</span>\n<span class=\"token key property\">webServer.password</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&lt;密码>\"</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token table class-name\">proxies</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"ssh\"</span>\n<span class=\"token key property\">type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"tcp\"</span>\n<span class=\"token key property\">localIP</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"127.0.0.1\"</span>\n<span class=\"token key property\">localPort</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">22</span>\n<span class=\"token key property\">remotePort</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">6000</span> <span class=\"token comment\"># 服务端远程访问的端口</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://gofrp.org/zh-cn/docs/\">https://gofrp.org/zh-cn/docs/</a></p>\n","tags":["网络"]},{"title":"docker镜像分析工具dive","url":"/2020/09/29/docker%E9%95%9C%E5%83%8F%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7dive/","content":"<p>通过可视化分析docker镜像</p>\n<span id=\"more\"></span>\n\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><h6 id=\"MacOs\"><a href=\"#MacOs\" class=\"headerlink\" title=\"MacOs\"></a>MacOs</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> dive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>其他平台查看官方文档:<a href=\"https://github.com/wagoodman/dive#installation\">https://github.com/wagoodman/dive#installation</a></p>\n<h5 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h5><p>一般我们查看镜像可以使用<code>docker inspect</code>命令查看镜像的信息</p>\n<p>使用<code>dive &lt;image:tage&gt;</code>来查看一个镜像，默认tag为<code>latest</code>没有镜像则会下载</p>\n<p><img src=\"/../images/pasted-3.png\" alt=\"upload successful\"></p>\n<p>如图之所示左边显示阶段和执行的命令，右边是文件系统，&lt;tab&gt;键切换到右边的文件系统，↑↓键则启动光标</p>\n","tags":["docker"]},{"title":"containerd源码-启动过程插件注册","url":"/2023/10/27/containerd%E6%BA%90%E7%A0%81-%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E6%8F%92%E4%BB%B6%E6%B3%A8%E5%86%8C/","content":"<p>前面介绍了containerd的存储以及oci等,现在将从源码开蓝启动过程和插件的注册</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>代码版本为v.17.5</p>\n</blockquote>\n<h4 id=\"启动过程\"><a href=\"#启动过程\" class=\"headerlink\" title=\"启动过程\"></a>启动过程</h4><ul>\n<li>入口在&#x2F;cmd&#x2F;containerd&#x2F;main.go,这里申明了一个app并执行了run方法</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  app <span class=\"token operator\">:=</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Stderr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"containerd: %s\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    os<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在App函数中主要处理命令行参数以及启动grpc等服务器</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/containerd/main.go</span>\n<span class=\"token operator\">...</span>\n  log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithFields</span><span class=\"token punctuation\">(</span>logrus<span class=\"token punctuation\">.</span>Fields<span class=\"token punctuation\">&#123;</span>\n      <span class=\"token string\">\"version\"</span><span class=\"token punctuation\">:</span>  version<span class=\"token punctuation\">.</span>Version<span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"revision\"</span><span class=\"token punctuation\">:</span> version<span class=\"token punctuation\">.</span>Revision<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"starting containerd\"</span><span class=\"token punctuation\">)</span>\n\n  server<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// Launch as a Windows Service if necessary</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">launchService</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">,</span> done<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    logrus<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>然后就是主要的启动流程了，创建了server这个对象</p>\n</li>\n<li><p>加载插件，加载了配种的procesor插件以及主要的插件</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/server/server.go</span>\nplugins<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">LoadPlugins</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">for</span> id<span class=\"token punctuation\">,</span> p <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> config<span class=\"token punctuation\">.</span>StreamProcessors <span class=\"token punctuation\">&#123;</span>\n  diff<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterProcessor</span><span class=\"token punctuation\">(</span>diff<span class=\"token punctuation\">.</span><span class=\"token function\">BinaryHandler</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Returns<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Accepts<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 注册 processor</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>进去LoadPlugins函数,这里主要加载几个重要的创建，首先注册了<code>content</code>类型的插件，id是<code>content</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/server/server.go</span>\nplugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n  Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>ContentPlugin<span class=\"token punctuation\">,</span>\n  ID<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"content\"</span><span class=\"token punctuation\">,</span>\n  InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Exports<span class=\"token punctuation\">[</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ic<span class=\"token punctuation\">.</span>Root\n    <span class=\"token keyword\">return</span> local<span class=\"token punctuation\">.</span><span class=\"token function\">NewStore</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Root<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>然后注册了bolt插件，bolt主要负责bolt数据库相关的,初始化第一步获取一个content类型的插件，然后将之前的注册的sn全部放到snapshotters中,<br>随后根据配置文件创建了一个bolt.Open函数创建一个bolt，传入bolt和snapshotters创建出metadata,metadata主要存储元数据底层是boltDB</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/server/server.go</span>\nplugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"bolt\"</span><span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n        plugin<span class=\"token punctuation\">.</span>ContentPlugin<span class=\"token punctuation\">,</span>\n        plugin<span class=\"token punctuation\">.</span>SnapshotPlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    Config<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>srvconfig<span class=\"token punctuation\">.</span>BoltConfig<span class=\"token punctuation\">&#123;</span>\n      ContentSharingPolicy<span class=\"token punctuation\">:</span> srvconfig<span class=\"token punctuation\">.</span>SharingPolicyShared<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 返回所有content插件中第一个</span>\n      cs<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>ContentPlugin<span class=\"token punctuation\">)</span>\n\n      snapshottersRaw<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">GetByType</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>SnapshotPlugin<span class=\"token punctuation\">)</span>\n\n      snapshotters <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>snapshots<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span> sn <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> snapshottersRaw <span class=\"token punctuation\">&#123;</span>\n      sn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> sn<span class=\"token punctuation\">.</span><span class=\"token function\">Instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>plugin<span class=\"token punctuation\">.</span><span class=\"token function\">IsSkipPlugin</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n          <span class=\"token function\">Warnf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"could not use snapshotter %v in metadata plugin\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">continue</span>\n      <span class=\"token punctuation\">&#125;</span>\n        snapshotters<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sn<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>snapshots<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      shared <span class=\"token operator\">:=</span> <span class=\"token boolean\">true</span>\n      ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Exports<span class=\"token punctuation\">[</span><span class=\"token string\">\"policy\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> srvconfig<span class=\"token punctuation\">.</span>SharingPolicyShared\n      <span class=\"token keyword\">if</span> cfg<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>srvconfig<span class=\"token punctuation\">.</span>BoltConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> cfg<span class=\"token punctuation\">.</span>ContentSharingPolicy <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> cfg<span class=\"token punctuation\">.</span><span class=\"token function\">Validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n          <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token keyword\">if</span> cfg<span class=\"token punctuation\">.</span>ContentSharingPolicy <span class=\"token operator\">==</span> srvconfig<span class=\"token punctuation\">.</span>SharingPolicyIsolated <span class=\"token punctuation\">&#123;</span>\n            ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Exports<span class=\"token punctuation\">[</span><span class=\"token string\">\"policy\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> srvconfig<span class=\"token punctuation\">.</span>SharingPolicyIsolated\n            shared <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n          <span class=\"token punctuation\">&#125;</span>\n\n          log<span class=\"token punctuation\">.</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"policy\"</span><span class=\"token punctuation\">,</span> cfg<span class=\"token punctuation\">.</span>ContentSharingPolicy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"metadata content store policy set\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      path <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Root<span class=\"token punctuation\">,</span> <span class=\"token string\">\"meta.db\"</span><span class=\"token punctuation\">)</span>\n      ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Exports<span class=\"token punctuation\">[</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> path\n      <span class=\"token comment\">// 创建bolt数据库</span>\n      db<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> bolt<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token number\">0644</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token keyword\">var</span> dbopts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>metadata<span class=\"token punctuation\">.</span>DBOpt\n      <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>shared <span class=\"token punctuation\">&#123;</span>\n        dbopts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>dbopts<span class=\"token punctuation\">,</span> metadata<span class=\"token punctuation\">.</span>WithPolicyIsolated<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">// 初始化metadata 插件</span>\n      mdb <span class=\"token operator\">:=</span> metadata<span class=\"token punctuation\">.</span><span class=\"token function\">NewDB</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">.</span>Store<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> snapshotters<span class=\"token punctuation\">,</span> dbopts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> mdb<span class=\"token punctuation\">.</span><span class=\"token function\">Init</span><span class=\"token punctuation\">(</span>ic<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> mdb<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">...</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>最后读取了配置文件中插件的配置然后初始化插件,先判断插件类型，然后根据不同类型注册插件</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/server/server.go</span>\n\nclients <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>proxyClients<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span> pp <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> config<span class=\"token punctuation\">.</span>ProxyPlugins <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n      t plugin<span class=\"token punctuation\">.</span>Type\n      f <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>grpc<span class=\"token punctuation\">.</span>ClientConn<span class=\"token punctuation\">)</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n      address <span class=\"token operator\">=</span> pp<span class=\"token punctuation\">.</span>Address\n  <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">switch</span> pp<span class=\"token punctuation\">.</span>Type <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>SnapshotPlugin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"snapshot\"</span><span class=\"token punctuation\">:</span>\n        t <span class=\"token operator\">=</span> plugin<span class=\"token punctuation\">.</span>SnapshotPlugin\n        ssname <span class=\"token operator\">:=</span> name\n        f <span class=\"token operator\">=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>conn <span class=\"token operator\">*</span>grpc<span class=\"token punctuation\">.</span>ClientConn<span class=\"token punctuation\">)</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> ssproxy<span class=\"token punctuation\">.</span><span class=\"token function\">NewSnapshotter</span><span class=\"token punctuation\">(</span>ssapi<span class=\"token punctuation\">.</span><span class=\"token function\">NewSnapshotsClient</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ssname<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">case</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>ContentPlugin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"content\"</span><span class=\"token punctuation\">:</span>\n        t <span class=\"token operator\">=</span> plugin<span class=\"token punctuation\">.</span>ContentPlugin\n        f <span class=\"token operator\">=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>conn <span class=\"token operator\">*</span>grpc<span class=\"token punctuation\">.</span>ClientConn<span class=\"token punctuation\">)</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> csproxy<span class=\"token punctuation\">.</span><span class=\"token function\">NewContentStore</span><span class=\"token punctuation\">(</span>csapi<span class=\"token punctuation\">.</span><span class=\"token function\">NewContentClient</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> pp<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unknown proxy plugin type\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n      Type<span class=\"token punctuation\">:</span> t<span class=\"token punctuation\">,</span>\n      ID<span class=\"token punctuation\">:</span>   name<span class=\"token punctuation\">,</span>\n      InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ic<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>Exports<span class=\"token punctuation\">[</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> address\n        conn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> clients<span class=\"token punctuation\">.</span><span class=\"token function\">getClient</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>最后根据插件的依赖以及类型排序以及根据配置文件过滤关闭的插件</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/server/server.go</span>\nfilter <span class=\"token operator\">:=</span> srvconfig<span class=\"token punctuation\">.</span>V2DisabledFilter\n<span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span><span class=\"token function\">GetVersion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n  filter <span class=\"token operator\">=</span> srvconfig<span class=\"token punctuation\">.</span>V1DisabledFilter\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// return the ordered graph for plugins</span>\n<span class=\"token keyword\">return</span> plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Graph</span><span class=\"token punctuation\">(</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>DisabledPlugins<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>回到server.go的<code>New</code>函数继续往下看，接下来就是初始化grpc，tcp已经ttrp服务器的初始化，然后构造<code>Server</code>结构体,同事根据配置文件获取到需要的开启的插件存取<code>required</code>中</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// services/server/server.go</span>\nserverOpts <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>grpc<span class=\"token punctuation\">.</span>ServerOption<span class=\"token punctuation\">&#123;</span>\n    grpc<span class=\"token punctuation\">.</span><span class=\"token function\">UnaryInterceptor</span><span class=\"token punctuation\">(</span>grpc_prometheus<span class=\"token punctuation\">.</span>UnaryServerInterceptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    grpc<span class=\"token punctuation\">.</span><span class=\"token function\">StreamInterceptor</span><span class=\"token punctuation\">(</span>grpc_prometheus<span class=\"token punctuation\">.</span>StreamServerInterceptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>GRPC<span class=\"token punctuation\">.</span>MaxRecvMsgSize <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n    serverOpts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>serverOpts<span class=\"token punctuation\">,</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">MaxRecvMsgSize</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>GRPC<span class=\"token punctuation\">.</span>MaxRecvMsgSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>GRPC<span class=\"token punctuation\">.</span>MaxSendMsgSize <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n    serverOpts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>serverOpts<span class=\"token punctuation\">,</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">MaxSendMsgSize</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>GRPC<span class=\"token punctuation\">.</span>MaxSendMsgSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  ttrpcServer<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">newTTRPCServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  tcpServerOpts <span class=\"token operator\">:=</span> serverOpts\n  <span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>GRPC<span class=\"token punctuation\">.</span>TCPTLSCert <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setting up tls on tcp GRPC services...\"</span><span class=\"token punctuation\">)</span>\n    creds<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> credentials<span class=\"token punctuation\">.</span><span class=\"token function\">NewServerTLSFromFile</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>GRPC<span class=\"token punctuation\">.</span>TCPTLSCert<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>GRPC<span class=\"token punctuation\">.</span>TCPTLSKey<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    tcpServerOpts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>tcpServerOpts<span class=\"token punctuation\">,</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">Creds</span><span class=\"token punctuation\">(</span>creds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n    grpcServer <span class=\"token operator\">=</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">NewServer</span><span class=\"token punctuation\">(</span>serverOpts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n    tcpServer  <span class=\"token operator\">=</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">NewServer</span><span class=\"token punctuation\">(</span>tcpServerOpts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n\n    grpcServices  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Service\n    tcpServices   <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>TCPService\n    ttrpcServices <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>TTRPCService\n\n    s <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>Server<span class=\"token punctuation\">&#123;</span>\n      grpcServer<span class=\"token punctuation\">:</span>  grpcServer<span class=\"token punctuation\">,</span>\n      tcpServer<span class=\"token punctuation\">:</span>   tcpServer<span class=\"token punctuation\">,</span>\n      ttrpcServer<span class=\"token punctuation\">:</span> ttrpcServer<span class=\"token punctuation\">,</span>\n      events<span class=\"token punctuation\">:</span>      exchange<span class=\"token punctuation\">.</span><span class=\"token function\">NewExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      config<span class=\"token punctuation\">:</span>      config<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    initialized <span class=\"token operator\">=</span> plugin<span class=\"token punctuation\">.</span><span class=\"token function\">NewPluginSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    required    <span class=\"token operator\">=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> config<span class=\"token punctuation\">.</span>RequiredPlugins <span class=\"token punctuation\">&#123;</span>\n    required<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>接着根据上面<code>LoadPlugins</code>获取的插件开始遍历然后初始化</li>\n<li>plugin.NewContext构造初始化需要的参数</li>\n<li>p.Init执行注册插件时候的初始化内容</li>\n<li>initialized.Add将初始化过的插件加入到已经初始化的结构体中，为后面的插件掉用</li>\n<li>result.Instance()获取一个插件实例然后查看是否有grpc等方法实现，有则放到到grpc等服务中</li>\n<li>同时将required中初始化了的插件删除</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> p <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> plugins <span class=\"token punctuation\">&#123;</span>\n  id <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">URI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  reqID <span class=\"token operator\">:=</span> id\n  <span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span><span class=\"token function\">GetVersion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n    reqID <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>ID\n  <span class=\"token punctuation\">&#125;</span>\n  log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Infof</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loading plugin %q...\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n\n  initContext <span class=\"token operator\">:=</span> plugin<span class=\"token punctuation\">.</span><span class=\"token function\">NewContext</span><span class=\"token punctuation\">(</span>\n    ctx<span class=\"token punctuation\">,</span>\n    p<span class=\"token punctuation\">,</span>\n    initialized<span class=\"token punctuation\">,</span>\n    config<span class=\"token punctuation\">.</span>Root<span class=\"token punctuation\">,</span>\n    config<span class=\"token punctuation\">.</span>State<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n  initContext<span class=\"token punctuation\">.</span>Events <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>events\n  initContext<span class=\"token punctuation\">.</span>Address <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>GRPC<span class=\"token punctuation\">.</span>Address\n  initContext<span class=\"token punctuation\">.</span>TTRPCAddress <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>TTRPC<span class=\"token punctuation\">.</span>Address\n\n  <span class=\"token comment\">// load the plugin specific configuration if it is provided</span>\n  <span class=\"token keyword\">if</span> p<span class=\"token punctuation\">.</span>Config <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    pc<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> config<span class=\"token punctuation\">.</span><span class=\"token function\">Decode</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    initContext<span class=\"token punctuation\">.</span>Config <span class=\"token operator\">=</span> pc\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 执行初始化</span>\n  result <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">Init</span><span class=\"token punctuation\">(</span>initContext<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 将已经初始化的插件加入到initialized中，因为后面的插件可能依赖前面的插件</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> initialized<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"could not add plugin result to plugin set\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  instance<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">Instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> plugin<span class=\"token punctuation\">.</span><span class=\"token function\">IsSkipPlugin</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Infof</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"skip loading plugin %q...\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">G</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Warnf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to load plugin %s\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> required<span class=\"token punctuation\">[</span>reqID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"load required plugin %s\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">continue</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>required<span class=\"token punctuation\">,</span> reqID<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// check for grpc services that should be registered with the server</span>\n  <span class=\"token keyword\">if</span> src<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> instance<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>Service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span>\n    grpcServices <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>grpcServices<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> src<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> instance<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>TTRPCService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span>\n    ttrpcServices <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ttrpcServices<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> service<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> instance<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>TCPService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span>\n    tcpServices <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>tcpServices<span class=\"token punctuation\">,</span> service<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  s<span class=\"token punctuation\">.</span>plugins <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>完成插件初始化后首先判断required是否还有，确认已经需要加载的已经加载</li>\n<li>依次将初始化插件的相关service注册到对应的服务器中,然后返回server</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>required<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> missing <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span>\n    <span class=\"token keyword\">for</span> id <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> required <span class=\"token punctuation\">&#123;</span>\n      missing <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>missing<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"required plugin %s not included\"</span><span class=\"token punctuation\">,</span> missing<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// register services after all plugins have been initialized</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> service <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> grpcServices <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> service<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span>grpcServer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> service <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> ttrpcServices <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> service<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterTTRPC</span><span class=\"token punctuation\">(</span>ttrpcServer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> service <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> tcpServices <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> service<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterTCP</span><span class=\"token punctuation\">(</span>tcpServer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>至此containerd启动完成</li>\n</ul>\n<h4 id=\"插件注册\"><a href=\"#插件注册\" class=\"headerlink\" title=\"插件注册\"></a>插件注册</h4><ul>\n<li>利用go的import将所有模块的init函数执行</li>\n<li>在路径在<code>cmd/containerd</code>中builtins开头的文件皆是如此</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// cmd/containerd/builtins_linux.go</span>\n<span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/containerd/containerd/metrics/cgroups\"</span>\n  <span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/containerd/containerd/metrics/cgroups/v2\"</span>\n  <span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/containerd/containerd/runtime/v1/linux\"</span>\n  <span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/containerd/containerd/runtime/v2\"</span>\n  <span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/containerd/containerd/runtime/v2/runc/options\"</span>\n  <span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/containerd/containerd/snapshots/native/plugin\"</span>\n  <span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/containerd/containerd/snapshots/overlay/plugin\"</span>\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>比如说overlayfs,需要填充类型，ID配置然后是初始化动作并返回,service类型的插他依赖metadata类型的插件</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// /containerd/services/snapshots/snapshotters.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  plugin<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>plugin<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">&#123;</span>\n    Type<span class=\"token punctuation\">:</span> plugin<span class=\"token punctuation\">.</span>ServicePlugin<span class=\"token punctuation\">,</span>\n    ID<span class=\"token punctuation\">:</span>   services<span class=\"token punctuation\">.</span>SnapshotsService<span class=\"token punctuation\">,</span>\n    Requires<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>plugin<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">&#123;</span>\n      plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    InitFn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ic <span class=\"token operator\">*</span>plugin<span class=\"token punctuation\">.</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      m<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ic<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>MetadataPlugin<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n      <span class=\"token punctuation\">&#125;</span>\n\n      db <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>metadata<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">)</span>\n      ss <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>snapshots<span class=\"token punctuation\">.</span>Snapshotter<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> n<span class=\"token punctuation\">,</span> sn <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">Snapshotters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ss<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">newSnapshotter</span><span class=\"token punctuation\">(</span>sn<span class=\"token punctuation\">,</span> ic<span class=\"token punctuation\">.</span>Events<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> ss<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"插件类型\"><a href=\"#插件类型\" class=\"headerlink\" title=\"插件类型\"></a>插件类型</h4><ul>\n<li>每一层都有负责的事情</li>\n<li>grpc负责处理grpc协议请求</li>\n<li>svc主要记录到数据中</li>\n<li>最后是真正干活的</li>\n</ul>\n<p><img src=\"/../images/containerd-4.png\" alt=\"Alt text\"></p>\n<h4 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h4><ul>\n<li>插件相关的代码在<code>/plugin/</code>中</li>\n</ul>\n<h5 id=\"plugin-go\"><a href=\"#plugin-go\" class=\"headerlink\" title=\"plugin.go\"></a>plugin.go</h5><ul>\n<li>其中plugin.go主要负责插件注册,以及定义插件类型</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> Registration <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// Type of the plugin</span>\n  Type Type\n  <span class=\"token comment\">// ID of the plugin</span>\n  ID <span class=\"token builtin\">string</span>\n  <span class=\"token comment\">// Config specific to the plugin</span>\n  Config <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// Requires is a list of plugins that the registered plugin requires to be available</span>\n  Requires <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>Type\n\n  <span class=\"token comment\">// InitFn is called when initializing a plugin. The registration and</span>\n  <span class=\"token comment\">// context are passed in. The init function may modify the registration to</span>\n  <span class=\"token comment\">// add exports, capabilities and platform support declarations.</span>\n  InitFn <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Disable the plugin from loading</span>\n  Disable <span class=\"token builtin\">bool</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// InternalPlugin implements an internal plugin to containerd</span>\n  InternalPlugin Type <span class=\"token operator\">=</span> <span class=\"token string\">\"io.containerd.internal.v1\"</span>\n  <span class=\"token comment\">// RuntimePlugin implements a runtime</span>\n  RuntimePlugin Type <span class=\"token operator\">=</span> <span class=\"token string\">\"io.containerd.runtime.v1\"</span>\n  <span class=\"token comment\">// RuntimePluginV2 implements a runtime v2</span>\n  RuntimePluginV2 Type <span class=\"token operator\">=</span> <span class=\"token string\">\"io.containerd.runtime.v2\"</span>\n  <span class=\"token comment\">// ServicePlugin implements a internal service</span>\n  ServicePlugin Type <span class=\"token operator\">=</span> <span class=\"token string\">\"io.containerd.service.v1\"</span>\n  <span class=\"token comment\">// GRPCPlugin implements a grpc service</span>\n  GRPCPlugin Type <span class=\"token operator\">=</span> <span class=\"token string\">\"io.containerd.grpc.v1\"</span>\n  <span class=\"token comment\">// SnapshotPlugin implements a snapshotter</span>\n  SnapshotPlugin Type <span class=\"token operator\">=</span> <span class=\"token string\">\"io.containerd.snapshotter.v1\"</span>\n  <span class=\"token comment\">// TaskMonitorPlugin implements a task monitor</span>\n  TaskMonitorPlugin Type <span class=\"token operator\">=</span> <span class=\"token string\">\"io.containerd.monitor.v1\"</span>\n  <span class=\"token comment\">// DiffPlugin implements a differ</span>\n  DiffPlugin Type <span class=\"token operator\">=</span> <span class=\"token string\">\"io.containerd.differ.v1\"</span>\n  <span class=\"token comment\">// MetadataPlugin implements a metadata store</span>\n  MetadataPlugin Type <span class=\"token operator\">=</span> <span class=\"token string\">\"io.containerd.metadata.v1\"</span>\n  <span class=\"token comment\">// ContentPlugin implements a content store</span>\n  ContentPlugin Type <span class=\"token operator\">=</span> <span class=\"token string\">\"io.containerd.content.v1\"</span>\n  <span class=\"token comment\">// GCPlugin implements garbage collection policy</span>\n  GCPlugin Type <span class=\"token operator\">=</span> <span class=\"token string\">\"io.containerd.gc.v1\"</span>\n<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>其中各个插件都需要使用<code>Register</code>注册</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// Register allows plugins to register</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Register</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span>Registration<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  register<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">defer</span> register<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">.</span>Type <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>ErrNoType<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>ErrNoPluginID<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">checkUnique</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">var</span> last <span class=\"token builtin\">bool</span>\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> requires <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> r<span class=\"token punctuation\">.</span>Requires <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> requires <span class=\"token operator\">==</span> <span class=\"token string\">\"*\"</span> <span class=\"token punctuation\">&#123;</span>\n      last <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> last <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>Requires<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>ErrInvalidRequires<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  register<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>register<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>Graph根据注册的插件的依赖关系生成一个有序的切片</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Graph</span><span class=\"token punctuation\">(</span>filter DisableFilter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ordered <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>Registration<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  register<span class=\"token punctuation\">.</span><span class=\"token function\">RLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">defer</span> register<span class=\"token punctuation\">.</span><span class=\"token function\">RUnlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> register<span class=\"token punctuation\">.</span>r <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      r<span class=\"token punctuation\">.</span>Disable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  added <span class=\"token operator\">:=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token operator\">*</span>Registration<span class=\"token punctuation\">]</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> register<span class=\"token punctuation\">.</span>r <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">.</span>Disable <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">continue</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">children</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> added<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ordered<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>added<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n      ordered <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ordered<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\n      added<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> ordered\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"context-go\"><a href=\"#context-go\" class=\"headerlink\" title=\"context.go\"></a>context.go</h5><ul>\n<li>context.go主要负责时插件的上下文,Set这个结构体负责存放所有执行过初始化的插件</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> Set <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n  ordered     <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>Plugin <span class=\"token comment\">// order of initialization</span>\n  byTypeAndID <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span>Type<span class=\"token punctuation\">]</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>Plugin\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>get根据类型获取插件，需要注意的是如果<code>同一个类型有多个只返回第一个</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// Get returns the first plugin by its type</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span>InitContext<span class=\"token punctuation\">)</span> <span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>t Type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>添加一个插件到集合里</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// Add a plugin to the set</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>ps <span class=\"token operator\">*</span>Set<span class=\"token punctuation\">)</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span>Plugin<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> byID<span class=\"token punctuation\">,</span> typeok <span class=\"token operator\">:=</span> ps<span class=\"token punctuation\">.</span>byTypeAndID<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">!</span>typeok <span class=\"token punctuation\">&#123;</span>\n    ps<span class=\"token punctuation\">.</span>byTypeAndID<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>Plugin<span class=\"token punctuation\">&#123;</span>\n      p<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> idok <span class=\"token operator\">:=</span> byID<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">!</span>idok <span class=\"token punctuation\">&#123;</span>\n    byID<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrapf</span><span class=\"token punctuation\">(</span>errdefs<span class=\"token punctuation\">.</span>ErrAlreadyExists<span class=\"token punctuation\">,</span> <span class=\"token string\">\"plugin %v already initialized\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Registration<span class=\"token punctuation\">.</span><span class=\"token function\">URI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  ps<span class=\"token punctuation\">.</span>ordered <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">.</span>ordered<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ul>\n<li>整体的代码比较清晰的,主要的逻辑在server.New()中</li>\n</ul>\n<pre><code class=\"mermaid\">flowchart TD\n   注册插件--&gt;main --&gt; command.App --&gt; server.New[&quot;&#96;loadPlugins \n    init_plugin\n    注册grpc\n    &#96;&quot;]  --&gt; App.Run</code></pre>\n","tags":["k8s","containerd"]},{"title":"gitlab部署配置","url":"/2023/11/23/gitlab%E9%83%A8%E7%BD%B2%E7%BB%B4%E6%8A%A4/","content":"<p>gitlab是一个功能非常强大的私有化git仓库</p>\n<span id=\"more\"></span>\n\n<h4 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h4><ul>\n<li>yum安装</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">curl</span> policycoreutils-python openssh-server\nsystemctl <span class=\"token builtin class-name\">enable</span> sshd\nsystemctl start sshd\n<span class=\"token function\">curl</span> https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.rpm.sh <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">bash</span>\nyum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> gitlab-ce<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h4><h5 id=\"设置定时备份\"><a href=\"#设置定时备份\" class=\"headerlink\" title=\"设置定时备份\"></a>设置定时备份</h5><ul>\n<li>crobjob设置定时备份</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">0</span> <span class=\"token number\">23</span> * * * /opt/gitlab/bin/gitlab-backup create <span class=\"token assign-left variable\">SKIP</span><span class=\"token operator\">=</span>builds,artifacts,lfs,terraform_state<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"设置备份保留时间\"><a href=\"#设置备份保留时间\" class=\"headerlink\" title=\"设置备份保留时间\"></a>设置备份保留时间</h5><ul>\n<li>保留三天</li>\n</ul>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\">gitlab_rails<span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">'backup_keep_time'</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">259200</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"备份到挂载在本地的存储\"><a href=\"#备份到挂载在本地的存储\" class=\"headerlink\" title=\"备份到挂载在本地的存储\"></a>备份到挂载在本地的存储</h5><ul>\n<li>修改配置文件，&#x2F;mnt&#x2F;nfs为nfs挂载点</li>\n</ul>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\">gitlab_rails<span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">'backup_upload_connection'</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token symbol\">:provider</span> <span class=\"token operator\">=></span> <span class=\"token string-literal\"><span class=\"token string\">'Local'</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token symbol\">:local_root</span> <span class=\"token operator\">=></span> <span class=\"token string-literal\"><span class=\"token string\">'/mnt/nfs'</span></span>\n<span class=\"token punctuation\">&#125;</span>\n\ngitlab_rails<span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">'backup_upload_remote_directory'</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'gitlab-backups'</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>执行<code>gitlab-ctl reconfigure</code>生效</li>\n</ul>\n<h4 id=\"还原\"><a href=\"#还原\" class=\"headerlink\" title=\"还原\"></a>还原</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> gitlab-ctl stop puma\n<span class=\"token function\">sudo</span> gitlab-ctl stop sidekiq\n<span class=\"token comment\"># Verify</span>\n<span class=\"token function\">sudo</span> gitlab-ctl status\n\ngitlab-backup restore <span class=\"token assign-left variable\">BACKUP</span><span class=\"token operator\">=</span>1684312462_2023_05_17_14.9.5<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"升级\"><a href=\"#升级\" class=\"headerlink\" title=\"升级\"></a>升级</h4><ul>\n<li><p>查看升级计划 <a href=\"https://docs.gitlab.com/ee/update/index.html#upgrade-paths\">https://docs.gitlab.com/ee/update/index.html#upgrade-paths</a></p>\n</li>\n<li><p>根据升级计划下载中间版本和目标版本的二进制文件<a href=\"https://packages.gitlab.com/gitlab/gitlab-ce\">https://packages.gitlab.com/gitlab/gitlab-ce</a></p>\n</li>\n<li><p>gitlab各个版本发行说明<a href=\"https://about.gitlab.com/releases/categories/releases/\">https://about.gitlab.com/releases/categories/releases/</a></p>\n</li>\n</ul>\n<p>注意14版本以上增加了后台迁移任务，后台迁移任务未跑完成时升级会报错 <a href=\"https://docs.gitlab.com/ee/update/index.html#batched-background-migrations\">https://docs.gitlab.com/ee/update/index.html#batched-background-migrations</a></p>\n<ul>\n<li>下载并安装</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> --content-disposition https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-13.12.12-ce.0.el7.x86_64.rpm/download.rpm\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> gitlab-ce-13.12.12-ce.0.el7.x86_64.rpm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"runner\"><a href=\"#runner\" class=\"headerlink\" title=\"runner\"></a>runner</h4><ul>\n<li><p><a href=\"https://docs.gitlab.com/runner/install/linux-repository.html\">https://docs.gitlab.com/runner/install/linux-repository.html</a></p>\n</li>\n<li><p>安装对应系统的源头</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># apt</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> <span class=\"token string\">\"https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">bash</span>\n\n<span class=\"token comment\"># apt</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> <span class=\"token string\">\"https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">bash</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>安装gitlab runner</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># apt</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> gitlab-runner\n\n<span class=\"token comment\"># yum</span>\n<span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> gitlab-runner<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>注册 管理区域-&gt;cicd-&gt;runenr添加一个，然后会出现类似<code>gitlab-runner register --url http://gitlab.naturelr.cc  --token glrt-94ZmmuqybyyGdPW_kbSJ</code></p>\n</li>\n<li><p>启动，将注册的时候出现的命令执行一下，会询问你一些信息一步一步操作即可</p>\n</li>\n</ul>\n<h4 id=\"gitalb-pages\"><a href=\"#gitalb-pages\" class=\"headerlink\" title=\"gitalb-pages\"></a>gitalb-pages</h4><ul>\n<li>设置pages的地址，不要和gitlab的域名一致，dns是是泛域名解析到gitlab服务器</li>\n</ul>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\">pages_external_url <span class=\"token string-literal\"><span class=\"token string\">\"http://pages.example.com/\"</span></span>\ngitlab_pages<span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">'enable'</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h5><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">pages</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> deploy\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> mkdir .public\n    <span class=\"token punctuation\">-</span> cp <span class=\"token punctuation\">-</span>r * .public\n    <span class=\"token punctuation\">-</span> mv .public public\n  <span class=\"token key atrule\">artifacts</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> public\n  only<span class=\"token punctuation\">:</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>测试<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","tags":["gitlab"]},{"title":"determined-ai代码分析","url":"/2024/06/28/determined-ai%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/","content":"<p><a href=\"https://github.com/determined-ai/determined\">determined-ai</a>是一个ai训练平台</p>\n<span id=\"more\"></span>\n\n<h4 id=\"启动流程\"><a href=\"#启动流程\" class=\"headerlink\" title=\"启动流程\"></a>启动流程</h4><ul>\n<li>入口,使用了cobra作为命令行框架</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/cmd/determined-master/main.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  logger<span class=\"token punctuation\">.</span><span class=\"token function\">SetLogrus</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> rootCmd<span class=\"token punctuation\">.</span><span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fatal error running Determined master\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>命令行处理,全局变量rootCmd由<code>newRootCmd()</code>实现,<code>RUN</code>下开始真正的执行,runRoot</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/cmd/determined-master/root.go</span>\n\n<span class=\"token keyword\">var</span> rootCmd <span class=\"token operator\">=</span> <span class=\"token function\">newRootCmd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">newRootCmd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>cobra<span class=\"token punctuation\">.</span>Command <span class=\"token punctuation\">&#123;</span>\n  cmd <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">&#123;</span>\n    Use<span class=\"token punctuation\">:</span> <span class=\"token string\">\"determined-master\"</span><span class=\"token punctuation\">,</span>\n    Run<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cmd <span class=\"token operator\">*</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span> args <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">runRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%+v\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        os<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>处理日志和初始化配置文件以及必要的路径，做完这些准备之后就开始调用<code>internal.New()</code>初始化一个<code>master</code></p>\n</li>\n<li><p>然后执行run</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/cmd/determined-master/root.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">runRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n  logStore <span class=\"token operator\">:=</span> logger<span class=\"token punctuation\">.</span><span class=\"token function\">NewLogBuffer</span><span class=\"token punctuation\">(</span>logStoreSize<span class=\"token punctuation\">)</span>\n  log<span class=\"token punctuation\">.</span><span class=\"token function\">AddHook</span><span class=\"token punctuation\">(</span>logStore<span class=\"token punctuation\">)</span>\n\n  err <span class=\"token operator\">:=</span> <span class=\"token function\">initializeConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  config <span class=\"token operator\">:=</span> config<span class=\"token punctuation\">.</span><span class=\"token function\">GetMasterConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  printableConfig<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> config<span class=\"token punctuation\">.</span><span class=\"token function\">Printable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  err <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">MkdirAll</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>Cache<span class=\"token punctuation\">.</span>CacheDir<span class=\"token punctuation\">,</span> <span class=\"token number\">0o700</span><span class=\"token punctuation\">)</span>\n  m <span class=\"token operator\">:=</span> internal<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>logStore<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">TODO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>RUN这里是整个程序的主体结构</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/core.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>Master<span class=\"token punctuation\">)</span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> gRPCLogInitDone <span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 判断是否是新集群以创建密码，略过</span>\n \n    <span class=\"token comment\">// 设置数据库</span>\n    m<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">Setup</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>m<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">,</span> newClustersRequirePasswords<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 设置webbhook</span>\n    webhookManager<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> webhooks<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n    webhooks<span class=\"token punctuation\">.</span><span class=\"token function\">SetDefault</span><span class=\"token punctuation\">(</span>webhookManager<span class=\"token punctuation\">)</span>\n\n    l<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> logpattern<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n    logpattern<span class=\"token punctuation\">.</span><span class=\"token function\">SetDefault</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n\n\n    <span class=\"token comment\">// 根据配置文件的资源管理</span>\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> m<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span><span class=\"token function\">ResourceManagers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      err <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">checkIfRMDefaultsAreUnbound</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>ResourceManager<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 初始化用户服务</span>\n    user<span class=\"token punctuation\">.</span><span class=\"token function\">InitService</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>InternalConfig<span class=\"token punctuation\">.</span>ExternalSessions<span class=\"token punctuation\">)</span>\n    userService <span class=\"token operator\">:=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">GetService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 初始化代理</span>\n    proxy<span class=\"token punctuation\">.</span><span class=\"token function\">InitProxy</span><span class=\"token punctuation\">(</span>processProxyAuthentication<span class=\"token punctuation\">)</span>\n    portregistry<span class=\"token punctuation\">.</span><span class=\"token function\">InitPortRegistry</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span><span class=\"token function\">GetMasterConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ReservedPorts<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 初始化http服务</span>\n    m<span class=\"token punctuation\">.</span>echo <span class=\"token operator\">=</span> echo<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">// 中间有些路由和中间件注册</span>\n\n    <span class=\"token comment\">// 初始化资源管理</span>\n    <span class=\"token keyword\">if</span> m<span class=\"token punctuation\">.</span>rm<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> <span class=\"token function\">buildRM</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>echo<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span><span class=\"token function\">ResourceManagers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">&amp;</span>m<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>TaskContainerDefaults<span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">&amp;</span>aproto<span class=\"token punctuation\">.</span>MasterSetAgentOptions<span class=\"token punctuation\">&#123;</span>\n      MasterInfo<span class=\"token punctuation\">:</span>     m<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      LoggingOptions<span class=\"token punctuation\">:</span> m<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>Logging<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    cert<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 设置jobservice</span>\n    jobservice<span class=\"token punctuation\">.</span><span class=\"token function\">SetDefaultService</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>rm<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 命令服务初始化</span>\n    cs<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">NewService</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>rm<span class=\"token punctuation\">)</span>\n    command<span class=\"token punctuation\">.</span><span class=\"token function\">SetDefaultService</span><span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 一些文档之类的路由注册</span>\n\n    <span class=\"token comment\">// 最后进入启动环节</span>\n    <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">startServers</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> cert<span class=\"token punctuation\">,</span> gRPCLogInitDone<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>启动服务，这里需要注意使用cmux实现了一个监听接口同时可以http和grpc，且将grpc的一些api注册到http中 可以参考<a href=\"https://golang2.eddycjy.com/posts/ch3/06-grpc-http-support/\">https://golang2.eddycjy.com/posts/ch3/06-grpc-http-support/</a></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/core.go</span>\n\n<span class=\"token comment\">// baseListener是最终使用的不过在此之前先获取systemd的，如果没有用systemd则使用配置文件</span>\n<span class=\"token keyword\">var</span> baseListener net<span class=\"token punctuation\">.</span>Listener\nsystemdListener<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">getSystemdListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">case</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">case</span> systemdListener <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">:</span>\n    baseListener <span class=\"token operator\">=</span> systemdListener\n    port<span class=\"token punctuation\">,</span> pErr <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">findListeningPort</span><span class=\"token punctuation\">(</span>systemdListener<span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>Port <span class=\"token operator\">=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n    baseListener<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> net<span class=\"token punctuation\">.</span><span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tcp\"</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":%d\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 配置tls证书</span>\n<span class=\"token keyword\">if</span> cert <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// ...</span>\n    baseListener <span class=\"token operator\">=</span> tls<span class=\"token punctuation\">.</span><span class=\"token function\">NewListener</span><span class=\"token punctuation\">(</span>baseListener<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tls<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">&#123;</span>\n        Certificates<span class=\"token punctuation\">:</span>             <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>tls<span class=\"token punctuation\">.</span>Certificate<span class=\"token punctuation\">&#123;</span><span class=\"token operator\">*</span>cert<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        MinVersion<span class=\"token punctuation\">:</span>               tls<span class=\"token punctuation\">.</span>VersionTLS12<span class=\"token punctuation\">,</span>\n        PreferServerCipherSuites<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        ClientCAs<span class=\"token punctuation\">:</span>                clientCAs<span class=\"token punctuation\">,</span>\n        ClientAuth<span class=\"token punctuation\">:</span>               clientAuthMode<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token comment\">// grpc服务创建，其中 apiServer实现了`proto.DeterminedServer`中所有的接口</span>\n\n<span class=\"token comment\">// This must be before grpcutil.RegisterHTTPProxy is called since it may use stuff set up by the</span>\n<span class=\"token comment\">// gRPC server (logger initialization, maybe more). Found by --race.</span>\ngRPCServer <span class=\"token operator\">:=</span> grpcutil<span class=\"token punctuation\">.</span><span class=\"token function\">NewGRPCServer</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>apiServer<span class=\"token punctuation\">&#123;</span>m<span class=\"token punctuation\">:</span> m<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    m<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>Observability<span class=\"token punctuation\">.</span>EnablePrometheus<span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">&amp;</span>m<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>InternalConfig<span class=\"token punctuation\">.</span>ExternalSessions<span class=\"token punctuation\">,</span>\n    m<span class=\"token punctuation\">.</span>logs<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 将grpc的中的接口注册到http中</span>\nerr <span class=\"token operator\">=</span> grpcutil<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterHTTPProxy</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>echo<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> cert<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 这里使用cumx多路服务器，来实现一个端口就时可以使用http和grpc服务</span>\n<span class=\"token comment\">// Initialize listeners and multiplexing.</span>\nmux <span class=\"token operator\">:=</span> cmux<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>baseListener<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 设置cmux匹配grp的条件</span>\ngrpcListener <span class=\"token operator\">:=</span> mux<span class=\"token punctuation\">.</span><span class=\"token function\">MatchWithWriters</span><span class=\"token punctuation\">(</span>\n    cmux<span class=\"token punctuation\">.</span><span class=\"token function\">HTTP2MatchHeaderFieldSendSettings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/grpc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">defer</span> <span class=\"token function\">closeWithErrCheck</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"grpc\"</span><span class=\"token punctuation\">,</span> grpcListener<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 设置http 匹配协议</span>\nhttpListener <span class=\"token operator\">:=</span> mux<span class=\"token punctuation\">.</span><span class=\"token function\">Match</span><span class=\"token punctuation\">(</span>cmux<span class=\"token punctuation\">.</span><span class=\"token function\">HTTP1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cmux<span class=\"token punctuation\">.</span><span class=\"token function\">HTTP2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">defer</span> <span class=\"token function\">closeWithErrCheck</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">,</span> httpListener<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 启动服务并通过携程来传递错误</span>\n<span class=\"token comment\">// Start all servers and return the first error. This leaks a channel, but the complexity of</span>\n<span class=\"token comment\">// perfectly handling cleanup and all the error cases doesn't seem worth it for a function that is</span>\n<span class=\"token comment\">// called exactly once and causes the whole process to exit immediately when it returns.</span>\nerrs <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\nstart <span class=\"token operator\">:=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> run <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        errs <span class=\"token operator\">&lt;-</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">+</span><span class=\"token string\">\" failed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gRPC server\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// We should defer srv.Stop() here, but cmux does not unblock accept calls when underlying</span>\n    <span class=\"token comment\">// listeners close and grpc-go depends on cmux unblocking and closing, Stop() blocks</span>\n    <span class=\"token comment\">// indefinitely when using cmux.</span>\n    <span class=\"token comment\">// To be fixed by https://github.com/soheilhy/cmux/pull/69 which makes cmux an io.Closer.</span>\n    <span class=\"token keyword\">return</span> gRPCServer<span class=\"token punctuation\">.</span><span class=\"token function\">Serve</span><span class=\"token punctuation\">(</span>grpcListener<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">defer</span> gRPCServer<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HTTP server\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    m<span class=\"token punctuation\">.</span>echo<span class=\"token punctuation\">.</span>Listener <span class=\"token operator\">=</span> httpListener\n    m<span class=\"token punctuation\">.</span>echo<span class=\"token punctuation\">.</span>HidePort <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    m<span class=\"token punctuation\">.</span>echo<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">.</span>ConnContext <span class=\"token operator\">=</span> connsave<span class=\"token punctuation\">.</span>SaveConn\n    <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">.</span>echo<span class=\"token punctuation\">.</span><span class=\"token function\">StartServer</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>echo<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">defer</span> <span class=\"token function\">closeWithErrCheck</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"echo\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>echo<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cmux listener\"</span><span class=\"token punctuation\">,</span> mux<span class=\"token punctuation\">.</span>Serve<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 堵住 防止退出，只有接受到错误消息或者ctx.Done()才退出</span>\n<span class=\"token keyword\">select</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">case</span> err <span class=\"token operator\">:=</span> <span class=\"token operator\">&lt;-</span>errs<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> err\n<span class=\"token keyword\">case</span> <span class=\"token operator\">&lt;-</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"创建notebook分析流程\"><a href=\"#创建notebook分析流程\" class=\"headerlink\" title=\"创建notebook分析流程\"></a>创建notebook分析流程</h4><blockquote>\n<p>上面启动流程中说了一些路由是通过grpc来实现的是需要实现，主要是实现<code>proto.DeterminedServer</code>这个接口启动<code>LaunchNotebook()</code>是创建Experiment的实现逻辑</p>\n</blockquote>\n<ul>\n<li>在protobuf中定义了接口，且定义了http的接口</li>\n</ul>\n<pre class=\"line-numbers language-protobuf\" data-language=\"protobuf\"><code class=\"language-protobuf\"><span class=\"token comment\">// Launch a notebook.</span>\n<span class=\"token keyword\">rpc</span> <span class=\"token function\">LaunchNotebook</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LaunchNotebookRequest</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">LaunchNotebookResponse</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">option</span> <span class=\"token punctuation\">(</span>google<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    post<span class=\"token punctuation\">:</span> <span class=\"token string\">\"/api/v1/notebooks\"</span>\n    body<span class=\"token punctuation\">:</span> <span class=\"token string\">\"*\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">option</span> <span class=\"token punctuation\">(</span>grpc<span class=\"token punctuation\">.</span>gateway<span class=\"token punctuation\">.</span>protoc_gen_swagger<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>openapiv2_operation<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    tags<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Notebooks\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>go<code>apiServer</code>中则要实现</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/api_notebook.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span>apiServer<span class=\"token punctuation\">)</span> <span class=\"token function\">LaunchNotebook</span><span class=\"token punctuation\">(</span>\n  ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req <span class=\"token operator\">*</span>apiv1<span class=\"token punctuation\">.</span>LaunchNotebookRequest<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>apiv1<span class=\"token punctuation\">.</span>LaunchNotebookResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  launchReq<span class=\"token punctuation\">,</span> launchWarnings<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">getCommandLaunchParams</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>protoCommandParams<span class=\"token punctuation\">&#123;</span>\n  TemplateName<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>TemplateName<span class=\"token punctuation\">,</span>\n  WorkspaceID<span class=\"token punctuation\">:</span>  req<span class=\"token punctuation\">.</span>WorkspaceId<span class=\"token punctuation\">,</span>\n  Config<span class=\"token punctuation\">:</span>       req<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">,</span>\n  Files<span class=\"token punctuation\">:</span>        req<span class=\"token punctuation\">.</span>Files<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/*\n    中间都是一些参数处理launchReq\n*/</span>\n\n  <span class=\"token comment\">// Launch a Notebook.</span>\n  <span class=\"token comment\">// 拉起一个task和job类型都是是notebook的通用命令</span>\n  genericCmd<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> command<span class=\"token punctuation\">.</span>DefaultCmdService<span class=\"token punctuation\">.</span><span class=\"token function\">LaunchGenericCommand</span><span class=\"token punctuation\">(</span>\n    model<span class=\"token punctuation\">.</span>TaskTypeNotebook<span class=\"token punctuation\">,</span>\n    model<span class=\"token punctuation\">.</span>JobTypeNotebook<span class=\"token punctuation\">,</span>\n    launchReq<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 返回给前端</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>apiv1<span class=\"token punctuation\">.</span>LaunchNotebookResponse<span class=\"token punctuation\">&#123;</span>\n    Notebook<span class=\"token punctuation\">:</span> genericCmd<span class=\"token punctuation\">.</span><span class=\"token function\">ToV1Notebook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    Config<span class=\"token punctuation\">:</span>   protoutils<span class=\"token punctuation\">.</span><span class=\"token function\">ToStruct</span><span class=\"token punctuation\">(</span>launchReq<span class=\"token punctuation\">.</span>Spec<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    Warnings<span class=\"token punctuation\">:</span> pkgCommand<span class=\"token punctuation\">.</span><span class=\"token function\">LaunchWarningToProto</span><span class=\"token punctuation\">(</span>launchWarnings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>LaunchGenericCommand()</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/command/command_service.go</span>\n<span class=\"token comment\">// LaunchGenericCommand creates NTSC commands and persists them to the database.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>cs <span class=\"token operator\">*</span>CommandService<span class=\"token punctuation\">)</span> <span class=\"token function\">LaunchGenericCommand</span><span class=\"token punctuation\">(</span>\n    taskType model<span class=\"token punctuation\">.</span>TaskType<span class=\"token punctuation\">,</span>\n    jobType model<span class=\"token punctuation\">.</span>JobType<span class=\"token punctuation\">,</span>\n    req <span class=\"token operator\">*</span>CreateGeneric<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Command<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">// 省略掉一些创建id和传值的代码</span>\n    cmd <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>Command<span class=\"token punctuation\">&#123;</span>\n        db<span class=\"token punctuation\">:</span> cs<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">,</span>\n        rm<span class=\"token punctuation\">:</span> cs<span class=\"token punctuation\">.</span>rm<span class=\"token punctuation\">,</span>\n        GenericCommandSpec<span class=\"token punctuation\">:</span> <span class=\"token operator\">*</span>req<span class=\"token punctuation\">.</span>Spec<span class=\"token punctuation\">,</span>\n        taskID<span class=\"token punctuation\">:</span>           taskID<span class=\"token punctuation\">,</span>\n        taskType<span class=\"token punctuation\">:</span>         taskType<span class=\"token punctuation\">,</span>\n        jobType<span class=\"token punctuation\">:</span>          jobType<span class=\"token punctuation\">,</span>\n        jobID<span class=\"token punctuation\">:</span>            jobID<span class=\"token punctuation\">,</span>\n        contextDirectory<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>ContextDirectory<span class=\"token punctuation\">,</span>\n        logCtx<span class=\"token punctuation\">:</span>           logCtx<span class=\"token punctuation\">,</span>\n        syslog<span class=\"token punctuation\">:</span>           logrus<span class=\"token punctuation\">.</span><span class=\"token function\">WithFields</span><span class=\"token punctuation\">(</span>logrus<span class=\"token punctuation\">.</span>Fields<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"component\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"command\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithFields</span><span class=\"token punctuation\">(</span>logCtx<span class=\"token punctuation\">.</span><span class=\"token function\">Fields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 开始启动,看下start方法</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">TODO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 启动完成之后将task保存</span>\n    <span class=\"token comment\">// Add it to the registry.</span>\n    cs<span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">[</span>cmd<span class=\"token punctuation\">.</span>taskID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cmd\n    <span class=\"token keyword\">return</span> cmd<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/command/command.go</span>\n\n<span class=\"token comment\">// Start starts the command &amp; its respective allocation. Once started, it persists to the db.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>Command<span class=\"token punctuation\">)</span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">// 开始分配</span>\n    err <span class=\"token operator\">:=</span> task<span class=\"token punctuation\">.</span>DefaultService<span class=\"token punctuation\">.</span><span class=\"token function\">StartAllocation</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>logCtx<span class=\"token punctuation\">,</span>\n        sproto<span class=\"token punctuation\">.</span>AllocateRequest<span class=\"token punctuation\">&#123;</span>\n            AllocationID<span class=\"token punctuation\">:</span>        c<span class=\"token punctuation\">.</span>allocationID<span class=\"token punctuation\">,</span>\n            TaskID<span class=\"token punctuation\">:</span>              c<span class=\"token punctuation\">.</span>taskID<span class=\"token punctuation\">,</span>\n            JobID<span class=\"token punctuation\">:</span>               c<span class=\"token punctuation\">.</span>jobID<span class=\"token punctuation\">,</span>\n            JobSubmissionTime<span class=\"token punctuation\">:</span>   c<span class=\"token punctuation\">.</span>registeredTime<span class=\"token punctuation\">,</span>\n            IsUserVisible<span class=\"token punctuation\">:</span>       <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            Name<span class=\"token punctuation\">:</span>                c<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">.</span>Description<span class=\"token punctuation\">,</span>\n            SlotsNeeded<span class=\"token punctuation\">:</span>         c<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">.</span>Resources<span class=\"token punctuation\">.</span>Slots<span class=\"token punctuation\">,</span>\n            ResourcePool<span class=\"token punctuation\">:</span>        c<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">.</span>Resources<span class=\"token punctuation\">.</span>ResourcePool<span class=\"token punctuation\">,</span>\n            FittingRequirements<span class=\"token punctuation\">:</span> sproto<span class=\"token punctuation\">.</span>FittingRequirements<span class=\"token punctuation\">&#123;</span>SingleAgent<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            ProxyPorts<span class=\"token punctuation\">:</span>          sproto<span class=\"token punctuation\">.</span><span class=\"token function\">NewProxyPortConfig</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>GenericCommandSpec<span class=\"token punctuation\">.</span><span class=\"token function\">ProxyPorts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>taskID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            IdleTimeout<span class=\"token punctuation\">:</span>         idleWatcherConfig<span class=\"token punctuation\">,</span>\n            Restore<span class=\"token punctuation\">:</span>             c<span class=\"token punctuation\">.</span>restored<span class=\"token punctuation\">,</span>\n            ProxyTLS<span class=\"token punctuation\">:</span>            c<span class=\"token punctuation\">.</span>TaskType <span class=\"token operator\">==</span> model<span class=\"token punctuation\">.</span>TaskTypeNotebook<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>rm<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>GenericCommandSpec<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>OnExit<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Once the command is persisted to the dbs &amp; allocation starts, register it with the local job service.</span>\n    <span class=\"token comment\">// 注册到job server</span>\n    jobservice<span class=\"token punctuation\">.</span>DefaultService<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterJob</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>jobID<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 持久化到到数据库</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">persist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        c<span class=\"token punctuation\">.</span>syslog<span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Warnf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"command persist failure\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>StartAllocation,是一个接口</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/task/allocation_service.go</span>\n\n<span class=\"token comment\">// StartAllocation starts an allocation and returns a handle to it.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>as <span class=\"token operator\">*</span>allocationService<span class=\"token punctuation\">)</span> <span class=\"token function\">StartAllocation</span><span class=\"token punctuation\">(</span>\n    logCtx detLogger<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span>\n    req sproto<span class=\"token punctuation\">.</span>AllocateRequest<span class=\"token punctuation\">,</span>\n    db db<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">,</span>\n    rm rm<span class=\"token punctuation\">.</span>ResourceManager<span class=\"token punctuation\">,</span>\n    specifier tasks<span class=\"token punctuation\">.</span>TaskSpecifier<span class=\"token punctuation\">,</span>\n    onExit <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>AllocationExited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">/*\n...\n*/</span>\n    <span class=\"token comment\">// 随后进入分配环节</span>\n    ref<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">newAllocation</span><span class=\"token punctuation\">(</span>logCtx<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">,</span> rm<span class=\"token punctuation\">,</span> specifier<span class=\"token punctuation\">)</span>\n    as<span class=\"token punctuation\">.</span>allocations<span class=\"token punctuation\">[</span>req<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ref\n    <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 开启一个协程等待的资源结束</span>\n        <span class=\"token comment\">// 返回请求消息</span>\n        <span class=\"token boolean\">_</span> <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">.</span><span class=\"token function\">awaitTermination</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        ref<span class=\"token punctuation\">.</span><span class=\"token function\">Cleanup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        as<span class=\"token punctuation\">.</span>mu<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>as<span class=\"token punctuation\">.</span>allocations<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">)</span>\n        as<span class=\"token punctuation\">.</span>mu<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// don't defer in case onExit calls back into the service</span>\n\n        <span class=\"token function\">onExit</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span>\n\n        as<span class=\"token punctuation\">.</span>syslog<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"allocation cleaned up and removed from cache\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/task/allocation.go</span>\n\n\n<span class=\"token comment\">// newAllocation returns a new allocation, which tracks allocation state in a fairly generic way.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">newAllocation</span><span class=\"token punctuation\">(</span>\n    logCtx detLogger<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req sproto<span class=\"token punctuation\">.</span>AllocateRequest<span class=\"token punctuation\">,</span> db db<span class=\"token punctuation\">.</span>DB<span class=\"token punctuation\">,</span> rm rm<span class=\"token punctuation\">.</span>ResourceManager<span class=\"token punctuation\">,</span>\n    specifier tasks<span class=\"token punctuation\">.</span>TaskSpecifier<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>allocation<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    a <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>allocation<span class=\"token punctuation\">&#123;</span>\n        db<span class=\"token punctuation\">:</span> db<span class=\"token punctuation\">,</span>\n        rm<span class=\"token punctuation\">:</span> rm<span class=\"token punctuation\">,</span>\n        wg<span class=\"token punctuation\">:</span>     waitgroupx<span class=\"token punctuation\">.</span><span class=\"token function\">WithContext</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        syslog<span class=\"token punctuation\">:</span> logrus<span class=\"token punctuation\">.</span><span class=\"token function\">WithFields</span><span class=\"token punctuation\">(</span>logCtx<span class=\"token punctuation\">.</span><span class=\"token function\">Fields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        req<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">,</span>\n        model<span class=\"token punctuation\">:</span> model<span class=\"token punctuation\">.</span>Allocation<span class=\"token punctuation\">&#123;</span>\n            AllocationID<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">,</span>\n            TaskID<span class=\"token punctuation\">:</span>       req<span class=\"token punctuation\">.</span>TaskID<span class=\"token punctuation\">,</span>\n            Slots<span class=\"token punctuation\">:</span>        req<span class=\"token punctuation\">.</span>SlotsNeeded<span class=\"token punctuation\">,</span>\n            ResourcePool<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>ResourcePool<span class=\"token punctuation\">,</span>\n            Ports<span class=\"token punctuation\">:</span>        <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        specifier<span class=\"token punctuation\">:</span> specifier<span class=\"token punctuation\">,</span>\n        resources<span class=\"token punctuation\">:</span> resourcesList<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        logCtx<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>LogContext<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 请求资源</span>\n    rmEvents<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">requestResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 根据返回的rm事件运行</span>\n    a<span class=\"token punctuation\">.</span>wg<span class=\"token punctuation\">.</span><span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> rmEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"requestResources\"><a href=\"#requestResources\" class=\"headerlink\" title=\"requestResources\"></a>requestResources</h5><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/task/allocation.go</span>\n\n<span class=\"token comment\">// requestResources sets up the allocation.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span>allocation<span class=\"token punctuation\">)</span> <span class=\"token function\">requestResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>sproto<span class=\"token punctuation\">.</span>ResourcesSubscription<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 数据库保存</span>\n    a<span class=\"token punctuation\">.</span><span class=\"token function\">setModelState</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>AllocationStatePending<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">AddAllocation</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">TODO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"saving trial allocation\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 调用资源管理的Allocate方法，这也是个接口</span>\n    sub<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> a<span class=\"token punctuation\">.</span>rm<span class=\"token punctuation\">.</span><span class=\"token function\">Allocate</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> sub<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>Allocate</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/kubernetes_resource_manager.go</span>\n\n<span class=\"token comment\">// Allocate implements rm.ResourceManager.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">*</span>ResourceManager<span class=\"token punctuation\">)</span> <span class=\"token function\">Allocate</span><span class=\"token punctuation\">(</span>msg sproto<span class=\"token punctuation\">.</span>AllocateRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>sproto<span class=\"token punctuation\">.</span>ResourcesSubscription<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// This code exists to handle the case where an experiment does not have</span>\n    <span class=\"token comment\">// an explicit resource pool specified in the config. This should never happen</span>\n    <span class=\"token comment\">// for newly created/forked experiments as the default pool is filled in to the</span>\n    <span class=\"token comment\">// config at creation time. However, old experiments which were created prior to</span>\n    <span class=\"token comment\">// the introduction of resource pools could have no resource pool associated with</span>\n    <span class=\"token comment\">// them and so we need to handle that case gracefully.</span>\n\n    <span class=\"token comment\">// 通过传入的资源池找到该资源池</span>\n    rp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">poolByName</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>ResourcePool<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 订阅事件这个AllocationID事件</span>\n    sub <span class=\"token operator\">:=</span> rmevents<span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"分配请求\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 分配请求的资源</span>\n    rp<span class=\"token punctuation\">.</span><span class=\"token function\">AllocateRequest</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> sub<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>AllocateRequest</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/resource_pool.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">*</span>kubernetesResourcePool<span class=\"token punctuation\">)</span> <span class=\"token function\">AllocateRequest</span><span class=\"token punctuation\">(</span>msg sproto<span class=\"token punctuation\">.</span>AllocateRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    k<span class=\"token punctuation\">.</span>mu<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">defer</span> k<span class=\"token punctuation\">.</span>mu<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    k<span class=\"token punctuation\">.</span>reschedule <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token comment\">// 添加一个task</span>\n    k<span class=\"token punctuation\">.</span><span class=\"token function\">addTask</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>addTask</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">*</span>kubernetesResourcePool<span class=\"token punctuation\">)</span> <span class=\"token function\">addTask</span><span class=\"token punctuation\">(</span>msg sproto<span class=\"token punctuation\">.</span>AllocateRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n        msg<span class=\"token punctuation\">.</span>AllocationID <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">AllocationID</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    k<span class=\"token punctuation\">.</span><span class=\"token function\">getOrCreateGroup</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>JobID<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n        msg<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Unnamed-k8-Task\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    k<span class=\"token punctuation\">.</span>syslog<span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"restore\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>Restore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Infof</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"resources are requested by %s (Allocation ID: %s)\"</span><span class=\"token punctuation\">,</span>\n        msg<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> msg<span class=\"token punctuation\">.</span>IsUserVisible <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span>queuePositions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>JobID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">!</span>ok <span class=\"token punctuation\">&#123;</span>\n            k<span class=\"token punctuation\">.</span>queuePositions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>JobID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tasklist<span class=\"token punctuation\">.</span><span class=\"token function\">InitializeQueuePosition</span><span class=\"token punctuation\">(</span>\n                msg<span class=\"token punctuation\">.</span>JobSubmissionTime<span class=\"token punctuation\">,</span>\n                <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        k<span class=\"token punctuation\">.</span>jobIDToAllocationID<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>JobID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>AllocationID\n        k<span class=\"token punctuation\">.</span>allocationIDToJobID<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>JobID\n        k<span class=\"token punctuation\">.</span>allocationIDToRunningPods<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 添加到 reqlist中</span>\n    k<span class=\"token punctuation\">.</span>reqList<span class=\"token punctuation\">.</span><span class=\"token function\">AddTask</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>随后rp.Schedule将分配资源并发布消息，跳转至<a href=\"#schedule\">schedul</a></li>\n</ul>\n<h5 id=\"run\"><a href=\"#run\" class=\"headerlink\" title=\"run\"></a>run</h5><ul>\n<li>回到newAllocation,requestResources执行完成之后开始run</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/task/allocation.go</span>\n\n    <span class=\"token comment\">// 请求资源</span>\n    rmEvents<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">requestResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 根据返回的rm事件运行</span>\n    a<span class=\"token punctuation\">.</span>wg<span class=\"token punctuation\">.</span><span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> rmEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>run</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/task/allocation.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span>allocation<span class=\"token punctuation\">)</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> sub <span class=\"token operator\">*</span>sproto<span class=\"token punctuation\">.</span>ResourcesSubscription<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 循环获取sub事件</span>\n        event<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> sub<span class=\"token punctuation\">.</span><span class=\"token function\">GetWithContext</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// The following block is only used by tests to simulate a master crash by calling detach().</span>\n            <span class=\"token comment\">// It follows, though, no one should ever call detach() or wg.Cancel() in the code unless you are</span>\n            <span class=\"token comment\">// implementing graceful shutdown.</span>\n            <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// 处理获取的时间</span>\n        done <span class=\"token operator\">:=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">HandleRMEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> done <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>HandleRMEvent</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/task/allocation.go</span>\n\n<span class=\"token comment\">// HandleRMEvent handles downstream events from the resource manager.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span>allocation<span class=\"token punctuation\">)</span> <span class=\"token function\">HandleRMEvent</span><span class=\"token punctuation\">(</span>msg sproto<span class=\"token punctuation\">.</span>ResourcesEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>done <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">switch</span> msg <span class=\"token operator\">:=</span> msg<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token operator\">*</span>sproto<span class=\"token punctuation\">.</span>ResourcesAllocated<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">// 资源创建事件处理</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">resourcesAllocated</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n            a<span class=\"token punctuation\">.</span><span class=\"token function\">crash</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token operator\">*</span>sproto<span class=\"token punctuation\">.</span>ResourcesStateChanged<span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">.</span><span class=\"token function\">resourcesStateChanged</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">case</span> <span class=\"token operator\">*</span>sproto<span class=\"token punctuation\">.</span>ReleaseResources<span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">.</span><span class=\"token function\">releaseResources</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">case</span> <span class=\"token operator\">*</span>sproto<span class=\"token punctuation\">.</span>ContainerLog<span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">.</span><span class=\"token function\">sendTaskLog</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">ToTaskLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">case</span> <span class=\"token operator\">*</span>sproto<span class=\"token punctuation\">.</span>ResourcesRestoreError<span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">.</span><span class=\"token function\">restoreResourceFailure</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n    <span class=\"token keyword\">case</span> <span class=\"token operator\">*</span>sproto<span class=\"token punctuation\">.</span>InvalidResourcesRequestError<span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">.</span><span class=\"token function\">crash</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>Cause<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n    <span class=\"token keyword\">case</span> sproto<span class=\"token punctuation\">.</span>ResourcesReleasedEvent<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unexpected RM event\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>resourcesAllocated</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/task/allocation.go</span>\n\n<span class=\"token comment\">// resourcesAllocated handles receiving resources from the resource manager. Note: it makes a single</span>\n<span class=\"token comment\">// ask to the parent to build its task spec.. this is mostly a hack to defer lots of computationally</span>\n<span class=\"token comment\">// heavy stuff unless it is necessarily (which also works to spread occurrences of the same work</span>\n<span class=\"token comment\">// out). Eventually, Allocations should just be started with their TaskSpec.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span>allocation<span class=\"token punctuation\">)</span> <span class=\"token function\">resourcesAllocated</span><span class=\"token punctuation\">(</span>msg <span class=\"token operator\">*</span>sproto<span class=\"token punctuation\">.</span>ResourcesAllocated<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> cID<span class=\"token punctuation\">,</span> r <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> a<span class=\"token punctuation\">.</span>resources <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 启动函数这个也是个接口</span>\n            <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>logCtx<span class=\"token punctuation\">,</span> spec<span class=\"token punctuation\">,</span> sproto<span class=\"token punctuation\">.</span>ResourcesRuntimeInfo<span class=\"token punctuation\">&#123;</span>\n                Token<span class=\"token punctuation\">:</span>        token<span class=\"token punctuation\">,</span>\n                AgentRank<span class=\"token punctuation\">:</span>    a<span class=\"token punctuation\">.</span>resources<span class=\"token punctuation\">[</span>cID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Rank<span class=\"token punctuation\">,</span>\n                IsMultiAgent<span class=\"token punctuation\">:</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>resources<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"starting resources (%v): %w\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>Start</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/resource_pool.go</span>\n\n<span class=\"token comment\">// Start notifies the pods actor that it should launch a pod for the provided task spec.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p k8sPodResources<span class=\"token punctuation\">)</span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>\n    logCtx logger<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> spec tasks<span class=\"token punctuation\">.</span>TaskSpec<span class=\"token punctuation\">,</span> rri sproto<span class=\"token punctuation\">.</span>ResourcesRuntimeInfo<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 调用podSservice的StartTaskPod</span>\n    <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">.</span>podsService<span class=\"token punctuation\">.</span><span class=\"token function\">StartTaskPod</span><span class=\"token punctuation\">(</span>StartTaskPod<span class=\"token punctuation\">&#123;</span>\n        Req<span class=\"token punctuation\">:</span>          p<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">,</span>\n        AllocationID<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">,</span>\n        Spec<span class=\"token punctuation\">:</span>         spec<span class=\"token punctuation\">,</span>\n        Slots<span class=\"token punctuation\">:</span>        p<span class=\"token punctuation\">.</span>slots<span class=\"token punctuation\">,</span>\n        Rank<span class=\"token punctuation\">:</span>         rri<span class=\"token punctuation\">.</span>AgentRank<span class=\"token punctuation\">,</span>\n        Namespace<span class=\"token punctuation\">:</span>    p<span class=\"token punctuation\">.</span>namespace<span class=\"token punctuation\">,</span>\n        LogContext<span class=\"token punctuation\">:</span>   logCtx<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>StartTaskPod</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/pods.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span>pods<span class=\"token punctuation\">)</span> <span class=\"token function\">StartTaskPod</span><span class=\"token punctuation\">(</span>msg StartTaskPod<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    p<span class=\"token punctuation\">.</span>mu<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">defer</span> p<span class=\"token punctuation\">.</span>mu<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 执行接受启动任务</span>\n    <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">receiveStartTaskPod</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>receiveStartTaskPod</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/pods.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span>pods<span class=\"token punctuation\">)</span> <span class=\"token function\">receiveStartTaskPod</span><span class=\"token punctuation\">(</span>msg StartTaskPod<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// podHandle启动pod</span>\n    err <span class=\"token operator\">:=</span> newPodHandler<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"creating pod: %w\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>start</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span>pod<span class=\"token punctuation\">)</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> p<span class=\"token punctuation\">.</span>restore <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> p<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span>State <span class=\"token operator\">==</span> cproto<span class=\"token punctuation\">.</span>Running <span class=\"token punctuation\">&#123;</span>\n            err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">startPodLogStreamer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 创建pod并提交</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">createPodSpecAndSubmit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"creating pod spec: %w\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>createPodSpecAndSubmit</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/pod.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span>pod<span class=\"token punctuation\">)</span> <span class=\"token function\">createPodSpecAndSubmit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 创建k8spod的配置</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">createPodSpec</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>scheduler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 调用资源请求队列的创建资源</span>\n    p<span class=\"token punctuation\">.</span>resourceRequestQueue<span class=\"token punctuation\">.</span><span class=\"token function\">createKubernetesResources</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>pod<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>configMap<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>createKubernetesResources</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/request_queue.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span>requestQueue<span class=\"token punctuation\">)</span> <span class=\"token function\">createKubernetesResources</span><span class=\"token punctuation\">(</span>\n    podSpec <span class=\"token operator\">*</span>k8sV1<span class=\"token punctuation\">.</span>Pod<span class=\"token punctuation\">,</span>\n    configMapSpec <span class=\"token operator\">*</span>k8sV1<span class=\"token punctuation\">.</span>ConfigMap<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 发送创建消息工作ch，资源申请创建完成，</span>\n    <span class=\"token keyword\">select</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> r<span class=\"token punctuation\">.</span>workerChan <span class=\"token operator\">&lt;-</span> msg<span class=\"token punctuation\">:</span>\n        r<span class=\"token punctuation\">.</span>creationInProgress<span class=\"token punctuation\">.</span><span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n        queuedRequest <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>queuedResourceRequest<span class=\"token punctuation\">&#123;</span>createResources<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">&#125;</span>\n        r<span class=\"token punctuation\">.</span>queue <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">,</span> queuedRequest<span class=\"token punctuation\">)</span>\n        r<span class=\"token punctuation\">.</span>pendingResourceCreations<span class=\"token punctuation\">[</span>ref<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> queuedRequest\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"buiuldRM\"><a href=\"#buiuldRM\" class=\"headerlink\" title=\"buiuldRM\"></a>buiuldRM</h5><ul>\n<li>上面最终发给了一个workchan，workchan是在<code>Run</code>中的<code>buuldRM</code>中初始化</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/core.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">buildRM</span><span class=\"token punctuation\">(</span>\n    db <span class=\"token operator\">*</span>db<span class=\"token punctuation\">.</span>PgDB<span class=\"token punctuation\">,</span>\n    echo <span class=\"token operator\">*</span>echo<span class=\"token punctuation\">.</span>Echo<span class=\"token punctuation\">,</span>\n    rmConfigs <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>config<span class=\"token punctuation\">.</span>ResourceManagerWithPoolsConfig<span class=\"token punctuation\">,</span>\n    tcd <span class=\"token operator\">*</span>model<span class=\"token punctuation\">.</span>TaskContainerDefaultsConfig<span class=\"token punctuation\">,</span>\n    opts <span class=\"token operator\">*</span>aproto<span class=\"token punctuation\">.</span>MasterSetAgentOptions<span class=\"token punctuation\">,</span>\n    cert <span class=\"token operator\">*</span>tls<span class=\"token punctuation\">.</span>Certificate<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>rm<span class=\"token punctuation\">.</span>ResourceManager<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>rmConfigs<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n        config <span class=\"token operator\">:=</span> rmConfigs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">case</span> config<span class=\"token punctuation\">.</span>ResourceManager<span class=\"token punctuation\">.</span>AgentRM <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> agentrm<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">,</span> echo<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">,</span> cert<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">case</span> config<span class=\"token punctuation\">.</span>ResourceManager<span class=\"token punctuation\">.</span>KubernetesRM <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> kubernetesrm<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">,</span> tcd<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">,</span> cert<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">case</span> config<span class=\"token punctuation\">.</span>ResourceManager<span class=\"token punctuation\">.</span>DispatcherRM <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span>\n            config<span class=\"token punctuation\">.</span>ResourceManager<span class=\"token punctuation\">.</span>PbsRM <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">:</span>\n            license<span class=\"token punctuation\">.</span><span class=\"token function\">RequireLicense</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dispatcher resource manager\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> dispatcherrm<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">,</span> echo<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">,</span> cert<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no expected resource manager config is defined\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> multirm<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>defaultRMName<span class=\"token punctuation\">,</span> rms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>kubernetesrm.New</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// New returns a new ResourceManager, which communicates with</span>\n<span class=\"token comment\">// and submits work to a Kubernetes apiserver.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">New</span><span class=\"token punctuation\">(</span>\n    db <span class=\"token operator\">*</span>db<span class=\"token punctuation\">.</span>PgDB<span class=\"token punctuation\">,</span>\n    rmConfigs <span class=\"token operator\">*</span>config<span class=\"token punctuation\">.</span>ResourceManagerWithPoolsConfig<span class=\"token punctuation\">,</span>\n    taskContainerDefaults <span class=\"token operator\">*</span>model<span class=\"token punctuation\">.</span>TaskContainerDefaultsConfig<span class=\"token punctuation\">,</span>\n    opts <span class=\"token operator\">*</span>aproto<span class=\"token punctuation\">.</span>MasterSetAgentOptions<span class=\"token punctuation\">,</span>\n    cert <span class=\"token operator\">*</span>tls<span class=\"token punctuation\">.</span>Certificate<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ResourceManager<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n    poolNamespaces <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> k<span class=\"token punctuation\">.</span>poolsConfig <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> k<span class=\"token punctuation\">.</span>poolsConfig<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>KubernetesNamespace <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n            k<span class=\"token punctuation\">.</span>poolsConfig<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>KubernetesNamespace <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>Namespace\n        <span class=\"token punctuation\">&#125;</span>\n\n        poolNamespaces<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">.</span>poolsConfig<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>KubernetesNamespace<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span>poolsConfig<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PoolName\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 创建一个新的podserver</span>\n    k<span class=\"token punctuation\">.</span>podsService <span class=\"token operator\">=</span> <span class=\"token function\">newPodsService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> poolConfig <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> k<span class=\"token punctuation\">.</span>poolsConfig <span class=\"token punctuation\">&#123;</span>\n        poolConfig <span class=\"token operator\">:=</span> poolConfig\n        rp <span class=\"token operator\">:=</span> <span class=\"token function\">newResourcePool</span><span class=\"token punctuation\">(</span>maxSlotsPerPod<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>poolConfig<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">.</span>podsService<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 隔一段时间就从处理 rqelist 中的创建任务</span>\n            t <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">NewTicker</span><span class=\"token punctuation\">(</span>podSubmissionInterval<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">defer</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> <span class=\"token keyword\">range</span> t<span class=\"token punctuation\">.</span>C <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 调度任务并发布消息</span>\n                rp<span class=\"token punctuation\">.</span><span class=\"token function\">Schedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        k<span class=\"token punctuation\">.</span>pools<span class=\"token punctuation\">[</span>poolConfig<span class=\"token punctuation\">.</span>PoolName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rp\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> k<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"newPodsService\"><a href=\"#newPodsService\" class=\"headerlink\" title=\"newPodsService\"></a>newPodsService</h6><ul>\n<li>newPodsService</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/pods.go</span>\n\n<span class=\"token comment\">// newPodsService creates a new pod service for launching, querying and interacting with k8s pods.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">newPodsService</span><span class=\"token punctuation\">(</span>\n    namespace <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    namespaceToPoolName <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    masterServiceName <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    masterTLSConfig model<span class=\"token punctuation\">.</span>TLSClientConfig<span class=\"token punctuation\">,</span>\n    loggingConfig model<span class=\"token punctuation\">.</span>LoggingConfig<span class=\"token punctuation\">,</span>\n    scheduler <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    slotType device<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">,</span>\n    slotResourceRequests config<span class=\"token punctuation\">.</span>PodSlotResourceRequests<span class=\"token punctuation\">,</span>\n    resourcePoolConfigs <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>config<span class=\"token punctuation\">.</span>ResourcePoolConfig<span class=\"token punctuation\">,</span>\n    taskContainerDefaults <span class=\"token operator\">*</span>model<span class=\"token punctuation\">.</span>TaskContainerDefaultsConfig<span class=\"token punctuation\">,</span>\n    detMasterIP <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    detMasterPort <span class=\"token builtin\">int32</span><span class=\"token punctuation\">,</span>\n    kubeconfigPath <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    podStatusUpdateCallback podStatusUpdateCallback<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>pods <span class=\"token punctuation\">&#123;</span>\n    loggingTLSConfig <span class=\"token operator\">:=</span> masterTLSConfig\n    <span class=\"token keyword\">if</span> loggingConfig<span class=\"token punctuation\">.</span>ElasticLoggingConfig <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        loggingTLSConfig <span class=\"token operator\">=</span> loggingConfig<span class=\"token punctuation\">.</span>ElasticLoggingConfig<span class=\"token punctuation\">.</span>Security<span class=\"token punctuation\">.</span>TLS\n    <span class=\"token punctuation\">&#125;</span>\n    p <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>pods<span class=\"token punctuation\">&#123;</span>\n        wg<span class=\"token punctuation\">:</span> waitgroupx<span class=\"token punctuation\">.</span><span class=\"token function\">WithContext</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        namespace<span class=\"token punctuation\">:</span>                    namespace<span class=\"token punctuation\">,</span>\n        namespaceToPoolName<span class=\"token punctuation\">:</span>          namespaceToPoolName<span class=\"token punctuation\">,</span>\n        masterServiceName<span class=\"token punctuation\">:</span>            masterServiceName<span class=\"token punctuation\">,</span>\n        masterTLSConfig<span class=\"token punctuation\">:</span>              masterTLSConfig<span class=\"token punctuation\">,</span>\n        scheduler<span class=\"token punctuation\">:</span>                    scheduler<span class=\"token punctuation\">,</span>\n        loggingTLSConfig<span class=\"token punctuation\">:</span>             loggingTLSConfig<span class=\"token punctuation\">,</span>\n        loggingConfig<span class=\"token punctuation\">:</span>                loggingConfig<span class=\"token punctuation\">,</span>\n        podNameToPodHandler<span class=\"token punctuation\">:</span>          <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        podNameToResourcePool<span class=\"token punctuation\">:</span>        <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        containerIDToPodName<span class=\"token punctuation\">:</span>         <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        containerIDToSchedulingState<span class=\"token punctuation\">:</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>sproto<span class=\"token punctuation\">.</span>SchedulingState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        podNameToContainerID<span class=\"token punctuation\">:</span>         <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        podHandlerToMetadata<span class=\"token punctuation\">:</span>         <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token operator\">*</span>pod<span class=\"token punctuation\">]</span>podMetadata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        slotType<span class=\"token punctuation\">:</span>                     slotType<span class=\"token punctuation\">,</span>\n        slotResourceRequests<span class=\"token punctuation\">:</span>         slotResourceRequests<span class=\"token punctuation\">,</span>\n        resourcePoolConfigs<span class=\"token punctuation\">:</span>          resourcePoolConfigs<span class=\"token punctuation\">,</span>\n        baseContainerDefaults<span class=\"token punctuation\">:</span>        taskContainerDefaults<span class=\"token punctuation\">,</span>\n        detMasterIP<span class=\"token punctuation\">:</span>                  detMasterIP<span class=\"token punctuation\">,</span>\n        detMasterPort<span class=\"token punctuation\">:</span>                detMasterPort<span class=\"token punctuation\">,</span>\n        currentNodes<span class=\"token punctuation\">:</span>                 <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>k8sV1<span class=\"token punctuation\">.</span>Node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        nodeToSystemResourceRequests<span class=\"token punctuation\">:</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        podInterfaces<span class=\"token punctuation\">:</span>                <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>typedV1<span class=\"token punctuation\">.</span>PodInterface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        configMapInterfaces<span class=\"token punctuation\">:</span>          <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>typedV1<span class=\"token punctuation\">.</span>ConfigMapInterface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        syslog<span class=\"token punctuation\">:</span>                       logrus<span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"namespace\"</span><span class=\"token punctuation\">,</span> namespace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        podStatusUpdateCallback<span class=\"token punctuation\">:</span>      podStatusUpdateCallback<span class=\"token punctuation\">,</span>\n\n        kubeconfigPath<span class=\"token punctuation\">:</span> kubeconfigPath<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 初始化k8s客户端</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">startClientSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getMasterIPAndPort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getSystemResourceRequests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 启动资源请求队列</span>\n    <span class=\"token comment\">// 这里会创建一些woker 这些work监听workerChan发送过来的请求</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">startResourceRequestQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 启动pod的Informer</span>\n    err <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">startPodInformer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 启动node的Informer</span>\n    err <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">startNodeInformer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> k8error<span class=\"token punctuation\">.</span><span class=\"token function\">IsForbidden</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">case</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">:</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// k8s 事件监听</span>\n    err <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">startEventListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    err <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">startPreemptionListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> p\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>startResourceRequestQueue</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/pods.go</span>\n\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span>pods<span class=\"token punctuation\">)</span> <span class=\"token function\">startResourceRequestQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    failures <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> resourcesRequestFailure<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 启动请求队列</span>\n    p<span class=\"token punctuation\">.</span>resourceRequestQueue <span class=\"token operator\">=</span> <span class=\"token function\">startRequestQueue</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>podInterfaces<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>configMapInterfaces<span class=\"token punctuation\">,</span> failures<span class=\"token punctuation\">)</span>\n    p<span class=\"token punctuation\">.</span>wg<span class=\"token punctuation\">.</span><span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">select</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">case</span> failure <span class=\"token operator\">:=</span> <span class=\"token operator\">&lt;-</span>failures<span class=\"token punctuation\">:</span>\n                <span class=\"token comment\">// 处理情况</span>\n                p<span class=\"token punctuation\">.</span><span class=\"token function\">handleResourceRequestFailure</span><span class=\"token punctuation\">(</span>failure<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">case</span> <span class=\"token operator\">&lt;-</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/pods.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">startRequestQueue</span><span class=\"token punctuation\">(</span>\n    podInterfaces <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>typedV1<span class=\"token punctuation\">.</span>PodInterface<span class=\"token punctuation\">,</span>\n    configMapInterfaces <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>typedV1<span class=\"token punctuation\">.</span>ConfigMapInterface<span class=\"token punctuation\">,</span>\n    failures <span class=\"token keyword\">chan</span><span class=\"token operator\">&lt;-</span> resourcesRequestFailure<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>requestQueue <span class=\"token punctuation\">&#123;</span>\n    r <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>requestQueue<span class=\"token punctuation\">&#123;</span>\n        podInterfaces<span class=\"token punctuation\">:</span>       podInterfaces<span class=\"token punctuation\">,</span>\n        configMapInterfaces<span class=\"token punctuation\">:</span> configMapInterfaces<span class=\"token punctuation\">,</span>\n        failures<span class=\"token punctuation\">:</span>            failures<span class=\"token punctuation\">,</span>\n\n        workerChan<span class=\"token punctuation\">:</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        queue<span class=\"token punctuation\">:</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>queuedResourceRequest<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        creationInProgress<span class=\"token punctuation\">:</span>       <span class=\"token function\">make</span><span class=\"token punctuation\">(</span>set<span class=\"token punctuation\">.</span>Set<span class=\"token punctuation\">[</span>requestID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        pendingResourceCreations<span class=\"token punctuation\">:</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span>requestID<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>queuedResourceRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        blockedResourceDeletions<span class=\"token punctuation\">:</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span>requestID<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>queuedResourceRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        syslog<span class=\"token punctuation\">:</span> logrus<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"component\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"kubernetesrm-queue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 启动workers</span>\n    r<span class=\"token punctuation\">.</span><span class=\"token function\">startWorkers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> r\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>startWorkers</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/pods.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span>requestQueue<span class=\"token punctuation\">)</span> <span class=\"token function\">startWorkers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 根据numKubernetesWorkers来开启worker</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numKubernetesWorkers<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">startRequestProcessingWorker</span><span class=\"token punctuation\">(</span>\n            r<span class=\"token punctuation\">.</span>podInterfaces<span class=\"token punctuation\">,</span>\n            r<span class=\"token punctuation\">.</span>configMapInterfaces<span class=\"token punctuation\">,</span>\n            strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            r<span class=\"token punctuation\">.</span>workerChan<span class=\"token punctuation\">,</span>\n            r<span class=\"token punctuation\">.</span>workerReady<span class=\"token punctuation\">,</span>\n            r<span class=\"token punctuation\">.</span>failures<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>startRequestProcessingWorker</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/request_workers.go</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">startRequestProcessingWorker</span><span class=\"token punctuation\">(</span>\n    podInterfaces <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>typedV1<span class=\"token punctuation\">.</span>PodInterface<span class=\"token punctuation\">,</span>\n    configMapInterfaces <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>typedV1<span class=\"token punctuation\">.</span>ConfigMapInterface<span class=\"token punctuation\">,</span>\n    id <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    in <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    ready readyCallbackFunc<span class=\"token punctuation\">,</span>\n    failures <span class=\"token keyword\">chan</span><span class=\"token operator\">&lt;-</span> resourcesRequestFailure<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>requestProcessingWorker <span class=\"token punctuation\">&#123;</span>\n    syslog <span class=\"token operator\">:=</span> logrus<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"component\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"kubernetesrm-worker\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n    r <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>requestProcessingWorker<span class=\"token punctuation\">&#123;</span>\n        podInterfaces<span class=\"token punctuation\">:</span>       podInterfaces<span class=\"token punctuation\">,</span>\n        configMapInterfaces<span class=\"token punctuation\">:</span> configMapInterfaces<span class=\"token punctuation\">,</span>\n        failures<span class=\"token punctuation\">:</span>            failures<span class=\"token punctuation\">,</span>\n        syslog<span class=\"token punctuation\">:</span>              syslog<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 接受请求并处理</span>\n    <span class=\"token keyword\">go</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">receive</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">,</span> ready<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> r\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>receive</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span>requestProcessingWorker<span class=\"token punctuation\">)</span> <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span>in <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> ready readyCallbackFunc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">go</span> <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> msg <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> in <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">switch</span> msg <span class=\"token operator\">:=</span> msg<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">case</span> createKubernetesResources<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\">// 创建资源事件</span>\n            r<span class=\"token punctuation\">.</span><span class=\"token function\">receiveCreateKubernetesResources</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">go</span> <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token function\">keyForCreate</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">case</span> deleteKubernetesResources<span class=\"token punctuation\">:</span>\n            r<span class=\"token punctuation\">.</span><span class=\"token function\">receiveDeleteKubernetesResources</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">go</span> <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n            errStr <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unexpected message %T\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span>\n            r<span class=\"token punctuation\">.</span>syslog<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>errStr<span class=\"token punctuation\">)</span>\n            <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>errStr<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>receiveCreateKubernetesResources,到这里完成整个资源的创建</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// master/internal/rm/kubernetesrm/request_workers.go</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span>requestProcessingWorker<span class=\"token punctuation\">)</span> <span class=\"token function\">receiveCreateKubernetesResources</span><span class=\"token punctuation\">(</span>\n    msg createKubernetesResources<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    r<span class=\"token punctuation\">.</span>syslog<span class=\"token punctuation\">.</span><span class=\"token function\">Debugf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"creating configMap with spec %v\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>configMapSpec<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 创建configmap</span>\n    configMap<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span>configMapInterfaces<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>podSpec<span class=\"token punctuation\">.</span>Namespace<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">TODO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>configMapSpec<span class=\"token punctuation\">,</span> metaV1<span class=\"token punctuation\">.</span>CreateOptions<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        r<span class=\"token punctuation\">.</span>syslog<span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error creating configMap %s\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>configMapSpec<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n        r<span class=\"token punctuation\">.</span>failures <span class=\"token operator\">&lt;-</span> resourceCreationFailed<span class=\"token punctuation\">&#123;</span>podName<span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">.</span>podSpec<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">:</span> err<span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n    r<span class=\"token punctuation\">.</span>syslog<span class=\"token punctuation\">.</span><span class=\"token function\">Infof</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"created configMap %s\"</span><span class=\"token punctuation\">,</span> configMap<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n\n    r<span class=\"token punctuation\">.</span>syslog<span class=\"token punctuation\">.</span><span class=\"token function\">Debugf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"launching pod with spec %v\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>podSpec<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 创建pod</span>\n    pod<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span>podInterfaces<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>podSpec<span class=\"token punctuation\">.</span>Namespace<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">TODO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>podSpec<span class=\"token punctuation\">,</span> metaV1<span class=\"token punctuation\">.</span>CreateOptions<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        r<span class=\"token punctuation\">.</span>syslog<span class=\"token punctuation\">.</span><span class=\"token function\">WithError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error creating pod %s\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>podSpec<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n        r<span class=\"token punctuation\">.</span>failures <span class=\"token operator\">&lt;-</span> resourceCreationFailed<span class=\"token punctuation\">&#123;</span>podName<span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">.</span>podSpec<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">:</span> err<span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n    r<span class=\"token punctuation\">.</span>syslog<span class=\"token punctuation\">.</span><span class=\"token function\">Infof</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"created pod %s\"</span><span class=\"token punctuation\">,</span> pod<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"Schedule\"><a href=\"#Schedule\" class=\"headerlink\" title=\"Schedule\"></a>Schedule</h6><ul>\n<li>将定期处理reqlist中的任务</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// New returns a new ResourceManager, which communicates with</span>\n<span class=\"token comment\">// and submits work to a Kubernetes apiserver.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">New</span><span class=\"token punctuation\">(</span>\n    db <span class=\"token operator\">*</span>db<span class=\"token punctuation\">.</span>PgDB<span class=\"token punctuation\">,</span>\n    rmConfigs <span class=\"token operator\">*</span>config<span class=\"token punctuation\">.</span>ResourceManagerWithPoolsConfig<span class=\"token punctuation\">,</span>\n    taskContainerDefaults <span class=\"token operator\">*</span>model<span class=\"token punctuation\">.</span>TaskContainerDefaultsConfig<span class=\"token punctuation\">,</span>\n    opts <span class=\"token operator\">*</span>aproto<span class=\"token punctuation\">.</span>MasterSetAgentOptions<span class=\"token punctuation\">,</span>\n    cert <span class=\"token operator\">*</span>tls<span class=\"token punctuation\">.</span>Certificate<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ResourceManager<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">/*\n\n*/</span>\n        <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            t <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">NewTicker</span><span class=\"token punctuation\">(</span>podSubmissionInterval<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">defer</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> <span class=\"token keyword\">range</span> t<span class=\"token punctuation\">.</span>C <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 这里处理retlist</span>\n                rp<span class=\"token punctuation\">.</span><span class=\"token function\">Schedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>Schedule</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">*</span>kubernetesResourcePool<span class=\"token punctuation\">)</span> <span class=\"token function\">Schedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    k<span class=\"token punctuation\">.</span>mu<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">defer</span> k<span class=\"token punctuation\">.</span>mu<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> k<span class=\"token punctuation\">.</span>reschedule <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 调度等待的任务</span>\n        k<span class=\"token punctuation\">.</span><span class=\"token function\">schedulePendingTasks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    k<span class=\"token punctuation\">.</span>reschedule <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>schedulePendingTasks</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">*</span>kubernetesResourcePool<span class=\"token punctuation\">)</span> <span class=\"token function\">schedulePendingTasks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 遍历 reqList中的所有任务</span>\n    <span class=\"token keyword\">for</span> it <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span>reqList<span class=\"token punctuation\">.</span><span class=\"token function\">Iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> it<span class=\"token punctuation\">.</span><span class=\"token function\">Next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#123;</span>\n        req <span class=\"token operator\">:=</span> it<span class=\"token punctuation\">.</span><span class=\"token function\">Value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        group <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span>groups<span class=\"token punctuation\">[</span>req<span class=\"token punctuation\">.</span>JobID<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> group <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n            k<span class=\"token punctuation\">.</span>syslog<span class=\"token punctuation\">.</span><span class=\"token function\">Warnf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"schedulePendingTasks cannot find group for job %s\"</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>JobID<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>k<span class=\"token punctuation\">.</span>reqList<span class=\"token punctuation\">.</span><span class=\"token function\">IsScheduled</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> maxSlots <span class=\"token operator\">:=</span> group<span class=\"token punctuation\">.</span>MaxSlots<span class=\"token punctuation\">;</span> maxSlots <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> k<span class=\"token punctuation\">.</span>slotsUsedPerGroup<span class=\"token punctuation\">[</span>group<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>req<span class=\"token punctuation\">.</span>SlotsNeeded <span class=\"token operator\">></span> <span class=\"token operator\">*</span>maxSlots <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">continue</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token comment\">// 分配资源</span>\n            k<span class=\"token punctuation\">.</span><span class=\"token function\">assignResources</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>assignResources</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">*</span>kubernetesResourcePool<span class=\"token punctuation\">)</span> <span class=\"token function\">assignResources</span><span class=\"token punctuation\">(</span>\n    req <span class=\"token operator\">*</span>sproto<span class=\"token punctuation\">.</span>AllocateRequest<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token comment\">/*\n    分配资源逻辑\n*/</span>\n\n    allocations <span class=\"token operator\">:=</span> sproto<span class=\"token punctuation\">.</span>ResourceList<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> rs <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> resources <span class=\"token punctuation\">&#123;</span>\n        allocations<span class=\"token punctuation\">[</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">Summary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ResourcesID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rs\n        k<span class=\"token punctuation\">.</span>allocationIDToContainerID<span class=\"token punctuation\">[</span>req<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rs<span class=\"token punctuation\">.</span>containerID\n        k<span class=\"token punctuation\">.</span>containerIDtoAllocationID<span class=\"token punctuation\">[</span>rs<span class=\"token punctuation\">.</span>containerID<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>AllocationID\n    <span class=\"token punctuation\">&#125;</span>\n\n    assigned <span class=\"token operator\">:=</span> sproto<span class=\"token punctuation\">.</span>ResourcesAllocated<span class=\"token punctuation\">&#123;</span>\n        ID<span class=\"token punctuation\">:</span>                req<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">,</span>\n        Resources<span class=\"token punctuation\">:</span>         allocations<span class=\"token punctuation\">,</span>\n        JobSubmissionTime<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>JobSubmissionTime<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 添加套reqList中已分配列表中</span>\n    k<span class=\"token punctuation\">.</span>reqList<span class=\"token punctuation\">.</span><span class=\"token function\">AddAllocationRaw</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>assigned<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 发布分配完成的消息</span>\n    rmevents<span class=\"token punctuation\">.</span><span class=\"token function\">Publish</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>AllocationID<span class=\"token punctuation\">,</span> assigned<span class=\"token punctuation\">.</span><span class=\"token function\">Clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","tags":["ai","go"]},{"title":"go环境变量","url":"/2020/09/14/go%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/","content":"<p>go 有很多的环境变量记录一下常用的变量</p>\n<span id=\"more\"></span>\n\n<h4 id=\"查看环境变量\"><a href=\"#查看环境变量\" class=\"headerlink\" title=\"查看环境变量\"></a>查看环境变量</h4><ul>\n<li><p>go env 查看所有变量</p>\n</li>\n<li><p>go env xxx 查看执行环境变量</p>\n</li>\n<li><p>go help environment 查看各个环境变量的作用</p>\n</li>\n</ul>\n<h4 id=\"修改环境变量\"><a href=\"#修改环境变量\" class=\"headerlink\" title=\"修改环境变量\"></a>修改环境变量</h4><ul>\n<li><p>go 1.13以上推荐使用 go env -w NAME&#x3D;VALUE 来设置环境变量</p>\n</li>\n<li><p>go env -w 设置的变量根据<code>os.UserConfigDir()</code>返回的值来确定存在哪</p>\n<ul>\n<li>Linux在$HOME&#x2F;.config</li>\n<li>Darwin在$HOME&#x2F;Library&#x2F;Application Support</li>\n<li>Windows在%AppData%</li>\n</ul>\n</li>\n<li><p>go 1.13以下使用export NAME&#x3D;VALUE 写profile来设置，如.bashrc,.zshrc等</p>\n</li>\n</ul>\n<h4 id=\"常用变量说明\"><a href=\"#常用变量说明\" class=\"headerlink\" title=\"常用变量说明\"></a>常用变量说明</h4><table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>说明</th>\n<th>默认</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>GOROOT</td>\n<td>go的安装位置</td>\n<td>&#x2F;usr&#x2F;local&#x2F;bin</td>\n<td>-</td>\n</tr>\n<tr>\n<td>GOARCH</td>\n<td>架构类型</td>\n<td>当前机器架构类型</td>\n<td>-</td>\n</tr>\n<tr>\n<td>GOOS</td>\n<td>编译出文件的类型</td>\n<td>当前系统</td>\n<td>通过改变GOOS来设置交叉编译</td>\n</tr>\n<tr>\n<td>GOPATH</td>\n<td>go的项目存放目录</td>\n<td>$HOME&#x2F;go</td>\n<td>在没使用gomod的时候安装的代码就存放在此</td>\n</tr>\n<tr>\n<td>GOBIN</td>\n<td><code>go instlal</code>安装的文件目录</td>\n<td>-</td>\n<td>一般将此目录加入PATH,<code>export PATH=$PATH:$GOBIN&gt;$HOME/.zshrc</code></td>\n</tr>\n<tr>\n<td>GO111MODULE</td>\n<td>go mod 开关</td>\n<td>自动</td>\n<td>-</td>\n</tr>\n<tr>\n<td>GOPROXY</td>\n<td>go mod的代理地址</td>\n<td>-</td>\n<td><a href=\"https://goproxy.cn,https//mirrors.aliyun.com/goproxy/,https://goproxy.io,direct\">https://goproxy.cn,https://mirrors.aliyun.com/goproxy/,https://goproxy.io,direct</a></td>\n</tr>\n</tbody></table>\n","tags":["go"]},{"title":"gitlab升级之后gitlab-page404","url":"/2022/08/13/gitlab%E5%8D%87%E7%BA%A7%E4%B9%8B%E5%90%8Egitlab-page404/","content":"<p>记一次升级gitlab导致的gitlab page 404</p>\n<span id=\"more\"></span>\n\n<h4 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h4><p>公司gitlab每年都会升级上个大版本的最后一个小版本，按着计划本次从gitlab 13.12.12 升级到14.10.5，按着官方的升级计划升级到14.10.5是:<br>13.12.15 &#x3D;&gt; 14.0.12 &#x3D;&gt; 14.3.6 &#x3D;&gt; 14.6.2 &gt; 14.9.5 -&gt; 14.10.5<br>像往常一样准备所需要的安装包,发通知坐等夜晚十点的升级，开始了毕业之后最难查的bug。。。</p>\n<h4 id=\"经过\"><a href=\"#经过\" class=\"headerlink\" title=\"经过\"></a>经过</h4><p>当晚十点按计划先升级到<code>13.12.15</code>,打开用<code>gitab page</code>部署的wiki,查看之前写的gitlab升级，备份了一下<code>gitlab.rb</code>和<code>gitlab-secrets.json</code>，<br>在熟悉的yum确认界面下了y，gitlab开始执行升级随后在等了几分钟之后显示升级成功，打开gitlab先开始是502过会就正常了</p>\n<p>于是继续升级到gitlab14这个大版本，同样执行了升级命令，然后报错检查未过查看报错大概意思是<code>unicorn[xxx]</code>参数不再支持unicorn，于是搜索了下gitlab14不在支持unicorn<br>改为<code>puma</code>,夜晚不太想查对应的字段且这些都是优化项于是直接注释了，再次执行<code>yum install xxx</code>但是还是报错。然后又试了几次还是报这个错误，仔细看了配置文件unicorn的配置已经被我注释了，为啥还是报这个错了呢，稍微思索了一会突然想到了gitlab.rb这个配置文件修改之后要执行<code>gitlab-ctl reconfigure</code>才生效，执行之后再次升级果然没有报错了<br>同样的等了几分钟之后界面打开了。14版本新增了后台数据库迁移任务在迁移任务没没有完成再升级下个把版本会报错的，所以赶紧使用管理员账号看下后台任务，发现才完成2个还有10来个任务且进度很慢果然和预期的一样是没法一下子升级到目标版本的，遂检查下git clone git push等功能,发现没问题</p>\n<p>准备睡觉但是好巧不求随手点了下打开的wiki，然后wiki就404了。。。<img src=\"/../images/gitlab-troubleshooting-1.png\" alt=\"x\"><br>开始以为是刚升级完导致的，于是手动刷新了几次还是404此时心里有点纳闷，我都没更改gitlab的配置为什么会404，然后冷静一下首先此问题不是大问题gitlab重要功能没问题，然后对可能出问题的地方进行了一下分析，我只是注释了<code>unicorn</code>的一些配置其次14版本的后台字段升级会不会影响，于是查找了<code>unicorn</code>对应<code>puma</code>配置，修改完成之后重新reconfigure一下，重新打开wiki界面发现还是404。。。那么此时就有可能是14版本的后台迁移任务导致的，查看了下升级任务才玩跑2个第三个还很慢估计得第二天了，但是心里隐隐约约觉得这俩应该没啥关系，于是试探性的查看了下gitlab的nginx日志，发现里面有301返回的日志，此时企信群里有同事已经再说为啥gitlab page打不开了(真卷当时都11点多了)，我没有找到原因就没回他，于是继续顺着301这条线索找，</p>\n<p>开始怀疑是gitlab-pages服务返回了个301于是<code>gitlab-ctl tail gitlab-pages</code>查看了下gilab-page服务的日志，然后发现没日志。。。查看配置文件原来gitlab-pges的日志文件修改了,于是去了日志目录，从我升级之后日志就没了此时怀疑是gitlab-page服务是不是升级之后有问题。变在浏览器刷新wiki变来查看ngixn和pages日志，随后有报错502，在nginx日志显示是<code>connection refused</code>大概意思,发现解析出来的locahost是ipv6的而gitlab-page是监听的ipv4，手动调用下确实，于是将gitlab-page改为监听ipv6<br>测试一下界面还是404，随后一番操作时候发现和gitlab监听的地址关系不大，又改回监听ipv4，用curl测试<code>curl localhost:8090</code>有响应。百思不得其解。在晚上搜索了一番也么结果。此时已经凌晨一点半左右，于是没办法只能先睡觉了，在床上依然很纳闷，我明明没动gitlab-page相关配置为啥会出问题。</p>\n<p>第二天上午到公司之后和同事交流了一下问题，她也加入处理问题。在企信群里通知所有人gitlab-page有问题我们再看了，并建立一个相关故障群同步处理情况。做完这些之后我们就开始了处理，她按我提供的情况查了一下未发现问题，唯一的有价值的是gitlab-page升级之后存储方式有变化变成了zipfs，需要迁移。于是执行了一下迁移返回的job是0，也就是说不需要迁移，此时我们查看了gitlab的架构图，觉得可能是nginx的问题，我们一起看了nginx的配置文件没发现啥问题，加上这个nginx文件是gitlab.rb生成的。</p>\n<p><img src=\"/../images/gitlab-architecture_simplified_v14_9.png\" alt=\"x\"></p>\n<p>中午吃完饭之后，下午我俩分工，我重新部署一套环境来对比，她继续调查gitlab-page的问题。我咋经过一波折腾时候成功在测试环境上访问到了我做测试的page界面，而她那边发现的更多，比如<a href=\"https://docs.gitlab.com/14.10/ee/administration/pages/index.html#wildcard-domains-with-tls-support\">https://docs.gitlab.com/14.10/ee/administration/pages/index.html#wildcard-domains-with-tls-support</a>https导致的在经过一波操作测试还是不行，<br>还有这个issues下的所有方法<a href=\"https://gitlab.com/gitlab-org/gitlab/-/issues/331699\">https://gitlab.com/gitlab-org/gitlab/-/issues/331699</a>我们都是尝试了还是404，有点沮丧，此时一下午过得差不多了快要下班了。于是我想先回复一下业务，用go写一个web服务先临时替代一下gitlab-page。但是同事觉得直接用最简单的nginx好了，这里说下gitlab的page其实就是返回一个有规则的目录里的配置文件,于是尝试用nginx实现这个规则发现不行，同时领导也过来问了问帮我们叫来了另一个同事来写ningx，折腾了一个小时之后我们放弃了于是先下班了。满脑子都是404</p>\n<p>第二天上午到公司之后继续折腾那个nginx规则，同事则去培训了，然后发现不是不自动跳转就是找不到文件404，在快到中午时我放弃了，使用go配置gin实现了一下，很快就实现了除了一些路径稍微还有些问题，中午吃饭完之后三下午五除二就搞定了，将端口改为8080其他的和gitlab-page规则一致，自己测量下久违的界面出来了终于不是404😄，在群里发了通告。就开始处理问题了。在经过一波分析之后我还是觉得要不是nginx有问题要不就是gitlab-page有问题亦或者是认证有问题导致的跳转异常，于是我查看了gitalb-page的源码发现认证实际上在page上也有处理，于是直接停止了gitlab-page服务，手动在用命令行执行gitlab-page，在此测试发现gitlab-page的日志压根就没日志。那么这就可以百分之百确认是nginx的问题了，将nginx中转发gitlab-page的<code>cat /var/opt/gitlab/nginx/conf/gitlab-pages.conf</code>的<code>proxy_pass http://localhost:8090;</code>这一行注释，在他的前面增加了<code>return 200 &quot;test&quot;</code>来确认请求到了这里，测试之后浏览器并没后返回”test”字样，那么可以确认没有转发到这里！于是琢磨为啥流量没到这里。<br>同时通过网页f12查看第一个请求，其响应了301发现响应服务器为nginx，于是使用301作为关键字在<code>/var/opt/gitlab/nginx/conf</code>查找，发现了下面这一句</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-r</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"301\"</span> *\ngitlab-http.conf:43:    <span class=\"token builtin class-name\">return</span> <span class=\"token number\">301</span> https://git.example.com:443<span class=\"token variable\">$request_uri</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>于是发现这个是80跳转到443的配置，既常见的访问80自动跳转到http的443配置，但是这行监听的是gitlab的配置不是gitlab page的配置，但是我还是注释了此行进行测试，在浏览器测试之后发现界面由gitlab的404变成了nginx的404，也就是说<code>这行对本不是由他处理的gitab page产生了作用</code></p>\n<p><img src=\"/../images/gitlab-troubleshooting-2.png\" alt=\"x\"></p>\n<p>但是这只是解释了为啥跳转没解释路由问题，查看了gitla page的配置文件时发现一个奇怪的配置：</p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token directive\"><span class=\"token keyword\">server_name</span>  ~^(?&lt;group>.*)\\.page\\.example\\.com$</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这推测意思是只要是<code>group</code>这个组的并且下都是为此gitlab-page匹配的由gitlab-page这个配置文件的内容来处理，我开始以为这个group是nginx的变量之类的gitlab通过某种方式传入到了nginx当中，导致nginx没有匹配到此，所以我就问了公司比较熟悉nginx的同事,在咨询了他时候他说这个group其实是变量赋值，也就说说.page前面的字符串给了<code>group</code>这个变量，<br>遂邀请他来我工位上一起看下，简单说了下我的发现他看了下配置文件，我复盘了一下我的发现。 随后他说将在page的配置文件上添加一下listen参数，将信将疑的问他会是这个导致的吗，他说他遇到ipv4和ipv6监听不一致导致的路由失效，于是添加了下</p>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">listen 192.168.1.1:80;\nlisten [::]:80;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>添加完成之后重启，发现还是这个样子。他说估计是缓存，于是我换了个浏览器，久违的界面终于出来。不再是那个讨厌的404了</p>\n<h4 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h4><p>由于nginx的配置是生成的所以需要修改gitlab.rb的配置才行只需要将page的nignx也监听ipv6即可</p>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\">pages_nginx<span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">'listen_addresses'</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">'192.168.1.1'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'[::]'</span></span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"疑问\"><a href=\"#疑问\" class=\"headerlink\" title=\"疑问\"></a>疑问</h4><ul>\n<li>为什么老版本没有这个问题？</li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://docs.gitlab.com/ee/development/architecture.html\">gitlab架构</a></p>\n","tags":["gitlab","故障处理"]},{"title":"go资源内嵌embed","url":"/2021/03/19/go%E8%B5%84%E6%BA%90%E5%86%85%E5%B5%8Cembed/","content":"<p>Go官方在1.16版本发布了官方内嵌资源到二进制的功能，使得部署更加简单</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>在开发web的时候往往会有一些web文件，而部署的时候需要部署一个二进制还要部署web文件比较繁琐，在go1.16之前也有很多包实现了内嵌资源文件到二进制中如<a href=\"https://github.com/gobuffalo/packr\">https://github.com/gobuffalo/packr</a>，而如今go官方实现了这个特性</p>\n</blockquote>\n<h4 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token boolean\">_</span> <span class=\"token string\">\"embed\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//go:embed Dockerfile</span>\n<span class=\"token keyword\">var</span> f <span class=\"token builtin\">string</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上面的例子就是将当前目录的dockerfile内容内嵌到变量f中,编译之后即使这个文件不存在也能打印出内容</p>\n<h4 id=\"嵌入文件夹\"><a href=\"#嵌入文件夹\" class=\"headerlink\" title=\"嵌入文件夹\"></a>嵌入文件夹</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"embed\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"path/filepath\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//go:embed foo</span>\n<span class=\"token keyword\">var</span> fs embed<span class=\"token punctuation\">.</span>FS\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    files<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">ReadDir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> file <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> files <span class=\"token punctuation\">&#123;</span>\n        d<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">ReadFile</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n            fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件名:\"</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"内容:\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>上面的代码将目录下的foo目录内嵌到fs这个变量中，然后打印出这个文件夹里文字的名字和内容</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ tree foo \nfoo\n├── <span class=\"token builtin class-name\">test</span>\n└── test2\n\n<span class=\"token number\">0</span> directories, <span class=\"token number\">2</span> files\n\n<span class=\"token comment\"># 编译</span>\n$ go build <span class=\"token parameter variable\">-o</span> <span class=\"token builtin class-name\">test</span> <span class=\"token builtin class-name\">.</span>\n\n<span class=\"token comment\"># 执行</span>\n$ ./test                \n文件名: <span class=\"token builtin class-name\">test</span> 内容: hahah\n文件名: test2 内容: testest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h4><ul>\n<li>路径默认是从mod的目录为根目录</li>\n<li>会忽略”.“开头和”_“开头的文件</li>\n<li>不管是win还是linux都使用”&#x2F;“</li>\n<li>支持匹配如，<code>//go:embed foo/*.yaml</code></li>\n<li>可以同时导入多个目录 如<code>//go:embed foo test</code></li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.cnblogs.com/apocelipes/p/13907858.html\">https://www.cnblogs.com/apocelipes/p/13907858.html</a></p>\n","tags":["go"]},{"title":"helm使用","url":"/2021/07/07/helm%E4%BD%BF%E7%94%A8/","content":"<p>helm是cncf基金会下的一个云原生管理程序</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>helm2和helm3有些区别，helm3去掉了服务端，本文主要是使用helm3</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>macos</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> helm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>脚本安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> <span class=\"token parameter variable\">-o</span> get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3\n<span class=\"token function\">chmod</span> <span class=\"token number\">700</span> get_helm.sh\n./get_helm.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h4><h5 id=\"搜索应用\"><a href=\"#搜索应用\" class=\"headerlink\" title=\"搜索应用\"></a>搜索应用</h5><p>在hub中搜索</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm search hub <span class=\"token operator\">&lt;</span>应用<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在本地的repo中搜索</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm search repo <span class=\"token operator\">&lt;</span>应用<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"安装应用\"><a href=\"#安装应用\" class=\"headerlink\" title=\"安装应用\"></a>安装应用</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>仓库<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># 指定ns下安装</span>\nhelm <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>仓库<span class=\"token operator\">></span> <span class=\"token parameter variable\">--namespace</span> <span class=\"token operator\">&lt;</span>namespace<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>指定ns并创建</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>仓库<span class=\"token operator\">></span>  <span class=\"token parameter variable\">--namespace</span> <span class=\"token operator\">&lt;</span>namespace<span class=\"token operator\">></span> --create-namespace <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看helm chart的values文件</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm show values <span class=\"token operator\">&lt;</span>仓库<span class=\"token operator\">></span> <span class=\"token operator\">></span> values.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>通过values来设置参数</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>仓库<span class=\"token operator\">></span> <span class=\"token parameter variable\">--namespace</span> <span class=\"token operator\">&lt;</span>namespace<span class=\"token operator\">></span> --create-namespace <span class=\"token parameter variable\">-f</span> values.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>通过命令行来设置参数,–set参数可以有多个用户指定多个参数，其指定的参数就是values里的</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>仓库<span class=\"token operator\">></span> <span class=\"token parameter variable\">--namespace</span> <span class=\"token operator\">&lt;</span>namespace<span class=\"token operator\">></span> --create-namespace <span class=\"token parameter variable\">--set</span> <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span>:<span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>–dry-run参数不执行安装可以将要安装yaml打印出来</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>仓库<span class=\"token operator\">></span> <span class=\"token parameter variable\">--namespace</span> <span class=\"token operator\">&lt;</span>namespace<span class=\"token operator\">></span>  --create-namespace <span class=\"token parameter variable\">--debug</span> --dry-run <span class=\"token operator\">></span> resource.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"查看应用\"><a href=\"#查看应用\" class=\"headerlink\" title=\"查看应用\"></a>查看应用</h5><p>显示当前ns下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>显示当前ns下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm list <span class=\"token parameter variable\">-n</span> <span class=\"token operator\">&lt;</span>namespace<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>显示所有ns</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm list <span class=\"token parameter variable\">-A</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"升级应用\"><a href=\"#升级应用\" class=\"headerlink\" title=\"升级应用\"></a>升级应用</h5><p>获取安装时的设置值</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm get values <span class=\"token operator\">&lt;</span>应用<span class=\"token operator\">></span> <span class=\"token operator\">></span> tmp.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>升级配置或者版本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm upgrade <span class=\"token operator\">&lt;</span>应用<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>应用仓库<span class=\"token operator\">></span> <span class=\"token parameter variable\">-f</span> tmp.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>升级指定版本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm upgrade <span class=\"token operator\">&lt;</span>应用<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>应用仓库<span class=\"token operator\">></span> <span class=\"token parameter variable\">--version</span> vx.y.z<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>例子</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm get values cilium <span class=\"token operator\">></span> tmp.yaml\nhelm upgrade cilium cilium/cilium <span class=\"token parameter variable\">-f</span> tmp.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"回滚应用\"><a href=\"#回滚应用\" class=\"headerlink\" title=\"回滚应用\"></a>回滚应用</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm rollback <span class=\"token operator\">&lt;</span>应用<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"卸载应用\"><a href=\"#卸载应用\" class=\"headerlink\" title=\"卸载应用\"></a>卸载应用</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm uninstall <span class=\"token operator\">&lt;</span>名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"下载应用包\"><a href=\"#下载应用包\" class=\"headerlink\" title=\"下载应用包\"></a>下载应用包</h5><p>将在本地生成一个包里面是这个应用得chart文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm fetch <span class=\"token operator\">&lt;</span>应用仓库<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"本地直接生成模版\"><a href=\"#本地直接生成模版\" class=\"headerlink\" title=\"本地直接生成模版\"></a>本地直接生成模版</h4><ul>\n<li>常常用在离线安装或者本地开发当中</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm template <span class=\"token operator\">&lt;</span>解压后chart包<span class=\"token operator\">></span> <span class=\"token parameter variable\">-f</span> <span class=\"token operator\">&lt;</span>values文件<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"仓库操作\"><a href=\"#仓库操作\" class=\"headerlink\" title=\"仓库操作\"></a>仓库操作</h4><h5 id=\"添加仓库\"><a href=\"#添加仓库\" class=\"headerlink\" title=\"添加仓库\"></a>添加仓库</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm repo <span class=\"token function\">add</span> <span class=\"token operator\">&lt;</span>仓库地址<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"查看仓库\"><a href=\"#查看仓库\" class=\"headerlink\" title=\"查看仓库\"></a>查看仓库</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm repo list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"升级仓库\"><a href=\"#升级仓库\" class=\"headerlink\" title=\"升级仓库\"></a>升级仓库</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm repo update<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"删除仓库\"><a href=\"#删除仓库\" class=\"headerlink\" title=\"删除仓库\"></a>删除仓库</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm remove <span class=\"token operator\">&lt;</span>仓库名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"http://blog.naturelr.cc/\">http://blog.naturelr.cc</a><br><a href=\"https://helm.sh/docs\">https://helm.sh/docs</a></p>\n","tags":["k8s","helm"]},{"title":"gomod使用私有仓库","url":"/2023/04/11/gomod%E4%BD%BF%E7%94%A8%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/","content":"<p>在工作中我们有些mod是放在gitlab中的且一般是有认证的这里记录下解决办法</p>\n<span id=\"more\"></span>\n\n<h3 id=\"私有仓库设置\"><a href=\"#私有仓库设置\" class=\"headerlink\" title=\"私有仓库设置\"></a>私有仓库设置</h3><blockquote>\n<p>都可以通过<code>,</code>来设置多个</p>\n</blockquote>\n<ul>\n<li>告诉go那些仓库是私有仓库</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go <span class=\"token function\">env</span> <span class=\"token parameter variable\">-w</span> <span class=\"token assign-left variable\">GOPRIVATE</span><span class=\"token operator\">=</span><span class=\"token string\">\"git@git.example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>告诉go私有仓库不走goproxy代理</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go <span class=\"token function\">env</span> <span class=\"token parameter variable\">-w</span> <span class=\"token assign-left variable\">GONOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">\"git.example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>告诉go这个仓库的不用验证CA</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go <span class=\"token function\">env</span> <span class=\"token parameter variable\">-w</span> <span class=\"token assign-left variable\">GOINSECURE</span><span class=\"token operator\">=</span><span class=\"token string\">\"git.example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>设置不做校验的仓库</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go <span class=\"token function\">env</span> <span class=\"token parameter variable\">-w</span> <span class=\"token assign-left variable\">GONOSUMDB</span><span class=\"token operator\">=</span><span class=\"token string\">\"git.example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"使用gitlab-token认证\"><a href=\"#使用gitlab-token认证\" class=\"headerlink\" title=\"使用gitlab token认证\"></a>使用gitlab token认证</h4><ul>\n<li><p>原理其实就是替换下git的链接将普通的链接替换成可以认证的链接</p>\n</li>\n<li><p>token在gitlab的项目–&gt;设置–&gt;访问令牌，添加一个只读的即可</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 将go默认访问的替换成通过token认证的链接以达到认证的目的</span>\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> url.<span class=\"token string\">\"https://oauth2:<span class=\"token variable\">$TOKEN</span>@git.example.com/lib/utils.git\"</span>.insteadOf <span class=\"token string\">\"https://git.example.com/lib/utils.git\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"使用gitlab-ssh认证\"><a href=\"#使用gitlab-ssh认证\" class=\"headerlink\" title=\"使用gitlab ssh认证\"></a>使用gitlab ssh认证</h4><ul>\n<li>这里将https的请求换成ssh请求，需要注意的是本地的公钥需要提前加入到gitalb中</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> url.<span class=\"token string\">\"git@git.example.com:lib/utils.git\"</span>.insteadOf <span class=\"token string\">\"https://git.example.com/lib/utils.git\"</span>\n\n<span class=\"token comment\"># 另一种写法</span>\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> url.<span class=\"token string\">\"ssh://git@git.example.com:lib/utils.git\"</span>.insteadOf <span class=\"token string\">\"https://git.example.com/lib/utils.git\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n","tags":["gomod"]},{"title":"ipset","url":"/2021/07/28/ipset/","content":"<p>ipset是iptables的一个扩展，可以动态的修改规则的地址</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>主要用户存储网络，端口号，ip地址以及mac地址，然后在iptables中调用此模块,有点像是存储网络信息的数据库</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> ipset<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h4><p>ipset的操作比较简单</p>\n<h5 id=\"显示集合\"><a href=\"#显示集合\" class=\"headerlink\" title=\"显示集合\"></a>显示集合</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ipset list <span class=\"token operator\">&lt;</span>集合名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"增加集合\"><a href=\"#增加集合\" class=\"headerlink\" title=\"增加集合\"></a>增加集合</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ipset create <span class=\"token operator\">&lt;</span>集合名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>集合类型<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"删除集合\"><a href=\"#删除集合\" class=\"headerlink\" title=\"删除集合\"></a>删除集合</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 删除指定集合</span>\nipset destroy <span class=\"token operator\">&lt;</span>集合名字<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># 删除所有</span>\nipset destroy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"增加条目\"><a href=\"#增加条目\" class=\"headerlink\" title=\"增加条目\"></a>增加条目</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ipset <span class=\"token function\">add</span> <span class=\"token operator\">&lt;</span>集合名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>条目<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"删除条目\"><a href=\"#删除条目\" class=\"headerlink\" title=\"删除条目\"></a>删除条目</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ipset del <span class=\"token operator\">&lt;</span>集合名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>条目<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"保存规则\"><a href=\"#保存规则\" class=\"headerlink\" title=\"保存规则\"></a>保存规则</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ipset save <span class=\"token operator\">></span> ipset.bak<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"还原规则\"><a href=\"#还原规则\" class=\"headerlink\" title=\"还原规则\"></a>还原规则</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ipset restore <span class=\"token operator\">&lt;</span> ipset.bak<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://ipset.netfilter.org/\">https://ipset.netfilter.org</a></p>\n","tags":["网络"]},{"title":"hexo搭建博客","url":"/2020/09/16/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","content":"<p>记录一下用hexo搭建博客的过程和一些坑</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> <span class=\"token function\">node</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>具体看<a href=\"/2020/09/22/nodejs%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/\" title=\"nodeJS基本使用\">nodeJS基本使用</a>,当前版本的hexo在node14中会有告警，建议安装12并使用nvm管理node版本</p>\n<h4 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-cli <span class=\"token parameter variable\">-g</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"初始化Hexo\"><a href=\"#初始化Hexo\" class=\"headerlink\" title=\"初始化Hexo\"></a>初始化Hexo</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> blog <span class=\"token operator\">&amp;&amp;</span><span class=\"token builtin class-name\">cd</span> blog <span class=\"token comment\"># 创建文件夹并进入</span>\nhexo init            <span class=\"token comment\"># 初始化 hexo</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>这个时候执行<code>hexo g &amp;&amp; hexo s</code>就可以使用localhost:4000打开一个blog，此时这个主题是默认的</p>\n<h5 id=\"配置Hexo\"><a href=\"#配置Hexo\" class=\"headerlink\" title=\"配置Hexo\"></a>配置Hexo</h5><ul>\n<li>blog根目录目录下的<code>_config.yaml</code>是hexo的配置文件，自定义的相关设置需要修改此文件</li>\n</ul>\n<h4 id=\"安装-Next主题\"><a href=\"#安装-Next主题\" class=\"headerlink\" title=\"安装 Next主题\"></a>安装 Next主题</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-theme-next<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"配置Next主题\"><a href=\"#配置Next主题\" class=\"headerlink\" title=\"配置Next主题\"></a>配置Next主题</h5><ul>\n<li>配置主题为next，在<code>_config.yaml</code>中查找<code>theme</code>并修改为next</li>\n<li>配置文件中有详细的说明不再细说</li>\n</ul>\n<h4 id=\"Hexo-admin\"><a href=\"#Hexo-admin\" class=\"headerlink\" title=\"Hexo-admin\"></a>Hexo-admin</h4><p>hexo admin 是一个可以直接在网页上写文章且实时预览的插件</p>\n<p>执行<code>npm install --save hexo-admin</code>安装,访问<a href=\"http://localhost:4000/admin\">http://localhost:4000/admin</a></p>\n","tags":["hexo"]},{"title":"ipvs","url":"/2022/11/07/ipvs/","content":"<p>ipvs是个4层负载均衡器，常常用于服务的高可用</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>ipvs已经合并到linux内核当中，用户层面使用ipvsadm</p>\n</blockquote>\n<h4 id=\"安装ipvsadm\"><a href=\"#安装ipvsadm\" class=\"headerlink\" title=\"安装ipvsadm\"></a>安装ipvsadm</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> ipvsadm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h4><p><img src=\"/../images/ipvs-1.png\" alt=\"ipvs\"></p>\n<p>整个动作在内核态完成,跳过了一些链</p>\n<h4 id=\"术语\"><a href=\"#术语\" class=\"headerlink\" title=\"术语\"></a>术语</h4><table>\n<thead>\n<tr>\n<th>缩写</th>\n<th>全写</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CIP</td>\n<td>Client IP</td>\n<td>客户端ip</td>\n</tr>\n<tr>\n<td>VIP</td>\n<td>Virtual IP</td>\n<td>虚拟ip</td>\n</tr>\n<tr>\n<td>DIP</td>\n<td>Director Server IP</td>\n<td>负载均衡ip</td>\n</tr>\n<tr>\n<td>RIP</td>\n<td>Real Servier IP</td>\n<td>真正的后端服务ip</td>\n</tr>\n<tr>\n<td>DS</td>\n<td>Director Server</td>\n<td>部署负载均衡的服务器</td>\n</tr>\n<tr>\n<td>RS</td>\n<td>Real Server</td>\n<td>后端服务器</td>\n</tr>\n</tbody></table>\n<h4 id=\"三种模式\"><a href=\"#三种模式\" class=\"headerlink\" title=\"三种模式\"></a>三种模式</h4><table>\n<thead>\n<tr>\n<th>类型</th>\n<th>IP</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CIP</td>\n<td>10.23.18.81</td>\n</tr>\n<tr>\n<td>VIP</td>\n<td>10.23.59.162</td>\n</tr>\n<tr>\n<td>DS</td>\n<td>10.23.12.87</td>\n</tr>\n<tr>\n<td>RS1</td>\n<td>10.23.197.23</td>\n</tr>\n<tr>\n<td>RS2</td>\n<td>10.23.9.198</td>\n</tr>\n</tbody></table>\n<h5 id=\"NAT\"><a href=\"#NAT\" class=\"headerlink\" title=\"NAT\"></a>NAT</h5><ul>\n<li>本质是个dnat</li>\n<li>流量出入都经过DR</li>\n<li>来回流量都从dr过dr会成为瓶颈</li>\n<li>同一个网段时RS的默认网关需要指向DS,且本网段的路由需要删除不然不会通过默认路由到DR</li>\n</ul>\n<p><img src=\"/../images/ipvs-nat-1.png\" alt=\"x\"></p>\n<h6 id=\"NAT部署\"><a href=\"#NAT部署\" class=\"headerlink\" title=\"NAT部署\"></a>NAT部署</h6><ul>\n<li>在DS配置规则</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span>/proc/sys/net/ipv4/ip_forward\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">VIP</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.59.162\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RS1</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.197.23\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RS2</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.9.198\n\nipvsadm <span class=\"token parameter variable\">-A</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$VIP</span>:80 <span class=\"token parameter variable\">-s</span> rr\nipvsadm <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$VIP</span>:80 <span class=\"token parameter variable\">-r</span> <span class=\"token variable\">$RS1</span> <span class=\"token parameter variable\">-m</span>\nipvsadm <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$VIP</span>:80 <span class=\"token parameter variable\">-r</span> <span class=\"token variable\">$RS2</span> <span class=\"token parameter variable\">-m</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看规则</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@10-23-12-87 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ipvsadm -L -n</span>\nIP Virtual Server version <span class=\"token number\">1.2</span>.1 <span class=\"token punctuation\">(</span>size<span class=\"token operator\">=</span><span class=\"token number\">4096</span><span class=\"token punctuation\">)</span>\nProt LocalAddress:Port Scheduler Flags\n  -<span class=\"token operator\">></span> RemoteAddress:Port           Forward Weight ActiveConn InActConn\nTCP  <span class=\"token number\">10.23</span>.59.162:80 rr\n  -<span class=\"token operator\">></span> <span class=\"token number\">10.23</span>.9.198:80               Masq    <span class=\"token number\">1</span>      <span class=\"token number\">0</span>          <span class=\"token number\">2</span>\n  -<span class=\"token operator\">></span> <span class=\"token number\">10.23</span>.197.23:80              Masq    <span class=\"token number\">1</span>      <span class=\"token number\">0</span>          <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在RS上部署一个httpd用于判断访问到哪那台机器</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> httpd <span class=\"token operator\">&amp;&amp;</span> systemctl start httpd\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"i am rs <span class=\"token environment constant\">$HOSTNAME</span>\"</span> <span class=\"token operator\">></span> /var/www/html/index.html<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>此时在rs上<code>curl 10.23.59.162</code>这个vip会轮询访问，此时cip是自己</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@10-23-12-87 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl 10.23.59.162</span>\ni am rs <span class=\"token number\">10</span>-23-9-198\n<span class=\"token punctuation\">[</span>root@10-23-12-87 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl 10.23.59.162</span>\ni am rs <span class=\"token number\">10</span>-23-197-23\n<span class=\"token punctuation\">[</span>root@10-23-12-87 ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"同一个网络说明\"><a href=\"#同一个网络说明\" class=\"headerlink\" title=\"同一个网络说明\"></a>同一个网络说明</h6><p>client此时并不知道vip这个地址在哪,所以需要在dr上绑定vip,让隔壁的邻居知道vip的mac</p>\n<p>且由于vip和rs的地址都在同一个网段默认会通过二层直接到client,未经过dr的nat，导致client不认回包而被丢弃因此需要在rs上设置默认网关为dr</p>\n<ul>\n<li>dr执行</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> addr <span class=\"token function\">add</span> <span class=\"token number\">10.23</span>.59.162 dev eth0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>RS上执行,将默认路由指向dr</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">DS</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.12.87\n\n<span class=\"token comment\"># 设置默认路由</span>\n<span class=\"token function\">ip</span> route replace default via <span class=\"token variable\">$DS</span>\n<span class=\"token comment\"># 删除路由</span>\n<span class=\"token function\">ip</span> r del <span class=\"token number\">10.23</span>.0.0/16 dev eth0 proto kernel scope <span class=\"token function\">link</span> src <span class=\"token number\">10.23</span>.197.23<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"流量转发路径\"><a href=\"#流量转发路径\" class=\"headerlink\" title=\"流量转发路径\"></a>流量转发路径</h6><p><img src=\"/../images/ipvs-nat-2.png\" alt=\"cl\"><br><img src=\"/../images/ipvs-nat-3.png\" alt=\"dr\"><br><img src=\"/../images/ipvs-nat-4.png\" alt=\"rs\"></p>\n<p>通过抓包我可以看到client请求vip之后，dr接受到会将vip替换成rip然后发送给rs<br>rs收到之后因为会路由设置会发送给dr，dr将src地址再改回vip</p>\n<p><img src=\"/../images/ipvs-nat-5.png\" alt=\"rs\"></p>\n<h5 id=\"DR\"><a href=\"#DR\" class=\"headerlink\" title=\"DR\"></a>DR</h5><ul>\n<li><p>rs和ds需要在一个二层中</p>\n</li>\n<li><p>dr模式中客户端请求vip流量从ds通过修改mac地址来达到负载均衡</p>\n</li>\n<li><p>由于没有修改ip地址所以rs上需要添加vip到lo或者dummy类型的网口上，不然rs发现请求的ip不在本机就会被丢弃</p>\n</li>\n<li><p>由于rs的lo或者dummy的网卡上配置的有vip为了防止rs响应vip的请求，所以需要修改arp配置</p>\n</li>\n<li><p>不支持端口映射</p>\n</li>\n</ul>\n<h6 id=\"DR部署\"><a href=\"#DR部署\" class=\"headerlink\" title=\"DR部署\"></a>DR部署</h6><ul>\n<li>DS配置</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">VIP</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.59.162\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RS1</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.197.23\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RS2</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.9.198\n\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token function\">add</span> vip <span class=\"token builtin class-name\">type</span> dummy\n<span class=\"token function\">ip</span> addr <span class=\"token function\">add</span> <span class=\"token variable\">$VIP</span> dev vip\n\nipvsadm <span class=\"token parameter variable\">-A</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$VIP</span>:80 <span class=\"token parameter variable\">-s</span> rr\nipvsadm <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$VIP</span>:80 <span class=\"token parameter variable\">-r</span> <span class=\"token variable\">$RS1</span>:80 <span class=\"token parameter variable\">-g</span>\nipvsadm <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$VIP</span>:80 <span class=\"token parameter variable\">-r</span> <span class=\"token variable\">$RS2</span>:80 <span class=\"token parameter variable\">-g</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>两个RS配置</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 部署http服务用于区分是否负载均衡</span>\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> httpd <span class=\"token operator\">&amp;&amp;</span> systemctl start httpd\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"i am rs <span class=\"token environment constant\">$HOSTNAME</span>\"</span> <span class=\"token operator\">></span> /var/www/html/index.html\n\n<span class=\"token comment\"># 配置arp</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span>/proc/sys/net/ipv4/conf/all/arp_ignore\n<span class=\"token builtin class-name\">echo</span> <span class=\"token number\">2</span> <span class=\"token operator\">></span>/proc/sys/net/ipv4/conf/all/arp_announce\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">VIP</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.59.162\n\n<span class=\"token comment\"># 配置vip网卡(用dummy和lo都可以)</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token function\">add</span> vip <span class=\"token builtin class-name\">type</span> dummy\n<span class=\"token function\">ip</span> addr <span class=\"token function\">add</span> <span class=\"token variable\">$VIP</span> dev vip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>Client</li>\n</ul>\n<p>添加路由，原则来说因为在同一个交换机中直接通过二层,但是有些vpc的子网不是通过vpc创建的ip不会转发</p>\n<p>也可以查看云厂商的文档如vip或者辅助ip等来作为vip</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">VIP</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.59.162\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">DR</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.12.87\n\n<span class=\"token function\">ip</span> r <span class=\"token function\">add</span> <span class=\"token variable\">$VIP</span>/32 via <span class=\"token variable\">$DR</span> dev eth0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@10-23-18-81 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl 10.23.59.162</span>\ni am rs <span class=\"token number\">10</span>-23-197-23\n<span class=\"token punctuation\">[</span>root@10-23-18-81 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl 10.23.59.162</span>\ni am rs <span class=\"token number\">10</span>-23-9-198<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"流量抓包\"><a href=\"#流量抓包\" class=\"headerlink\" title=\"流量抓包\"></a>流量抓包</h6><p><img src=\"/../images/ipvs-dr-1.png\" alt=\"dr\"></p>\n<p><img src=\"/../images/ipvs-dr-2.png\" alt=\"dr\"></p>\n<p>图中可看出dr将mac地址换成类似rs的mac地址</p>\n<h5 id=\"隧道-IPIP\"><a href=\"#隧道-IPIP\" class=\"headerlink\" title=\"隧道(IPIP)\"></a>隧道(IPIP)</h5><h6 id=\"隧道-IPIP-部署\"><a href=\"#隧道-IPIP-部署\" class=\"headerlink\" title=\"隧道(IPIP)部署\"></a>隧道(IPIP)部署</h6><ul>\n<li>DR配置</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">VIP</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.59.162\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RS1</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.197.23\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RS2</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.9.198\n\nipvsadm <span class=\"token parameter variable\">-A</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$VIP</span>:80 <span class=\"token parameter variable\">-s</span> rr\nipvsadm <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$VIP</span>:80 <span class=\"token parameter variable\">-r</span> <span class=\"token variable\">$RS1</span>:80 <span class=\"token parameter variable\">-i</span>\nipvsadm <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$VIP</span>:80 <span class=\"token parameter variable\">-r</span> <span class=\"token variable\">$RS2</span>:80 <span class=\"token parameter variable\">-i</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>RS</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 加载内部模块</span>\nmodprobe ipip\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">VIP</span><span class=\"token operator\">=</span><span class=\"token number\">10.23</span>.59.162\n<span class=\"token comment\"># 将vip添加到ipip隧道网卡</span>\n<span class=\"token function\">ip</span> addr <span class=\"token function\">add</span> <span class=\"token variable\">$VIP</span> dev tunl0\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> tunl0 up\n\n<span class=\"token comment\"># 修改内核参数</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">></span>/proc/sys/net/ipv4/conf/tunl0/arp_ignore\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"2\"</span> <span class=\"token operator\">></span>/proc/sys/net/ipv4/conf/tunl0/arp_announce\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">></span>/proc/sys/net/ipv4/conf/all/arp_ignore\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"2\"</span> <span class=\"token operator\">></span>/proc/sys/net/ipv4/conf/all/arp_announce\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">></span> /proc/sys/net/ipv4/conf/tunl0/rp_filter\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">></span> /proc/sys/net/ipv4/conf/all/rp_filter<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"IPIP流量分析\"><a href=\"#IPIP流量分析\" class=\"headerlink\" title=\"IPIP流量分析\"></a>IPIP流量分析</h6><p><img src=\"/../images/ipvs-ipip-1.png\" alt=\"ipip\"></p>\n<p><img src=\"/../images/ipvs-ipip-2.png\" alt=\"ipip\"></p>\n<p>由于实验环境在同一个网段所以需要对arp响应进行处理</p>\n<h4 id=\"内核参数\"><a href=\"#内核参数\" class=\"headerlink\" title=\"内核参数\"></a>内核参数</h4><p>内核参数的文档</p>\n<p><a href=\"https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt\">https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt</a></p>\n<h5 id=\"arp-ignore\"><a href=\"#arp-ignore\" class=\"headerlink\" title=\"arp_ignore\"></a>arp_ignore</h5><p>设置使用那个网卡的mac和ip用来请求arp,即arp请求的src_mac和src_ip</p>\n<ul>\n<li>0(默认):将任何网卡的地址响应出去，而不关系该ip是否在接受的网卡上</li>\n<li>1:只响应目标ip接受网卡的地址</li>\n<li>2:只响应目标ip接受网卡的地址，且需要在同网段</li>\n<li>3:请求的地址作用域为host的不响应，只有作用域为<code>global</code>和<code>link</code>的才响应</li>\n<li>4-7:保留</li>\n<li>8:任何arp都不响应</li>\n</ul>\n<p>在dr模式中每个rs上都配置了vip的地址如果不设置arp_ignore为1则会响应vip的arp请求使客户端的请求绕过了ds直接到了rs</p>\n<h5 id=\"arp-announce\"><a href=\"#arp-announce\" class=\"headerlink\" title=\"arp_announce\"></a>arp_announce</h5><p>设置使用那个网卡的mac和ip用来响应arp请求,既arp响应的dst_mac和dst_ip</p>\n<ul>\n<li>0:使用任何配置在本接口上的地址响应</li>\n<li>1:尽量避免使用不属于该发送网卡子网的本地地址作为发送arp请求的源IP地址</li>\n<li>2:忽略IP数据包的源IP地址，选择该发送网卡上最合适的本地地址作为arp请求的源IP地址</li>\n</ul>\n<h5 id=\"rp-filter\"><a href=\"#rp-filter\" class=\"headerlink\" title=\"rp_filter\"></a>rp_filter</h5><p>反向路径过滤</p>\n<ul>\n<li>0:不校验</li>\n<li>1(默认):严格的校验，每个数据包都进行校验，校验反向路径通过特定的接口是否是最佳路径，如不是则丢弃</li>\n<li>2:宽松模式。只校验通过任意接口是否可达，如果不通则丢弃</li>\n<li>取conf&#x2F;{all,interface}&#x2F;rp_filter中的最大值</li>\n</ul>\n<h4 id=\"负载均衡算法\"><a href=\"#负载均衡算法\" class=\"headerlink\" title=\"负载均衡算法\"></a>负载均衡算法</h4><ul>\n<li>rr（轮询）</li>\n<li>wrr（权重）</li>\n<li>lc（最后连接）</li>\n<li>wlc（权重）</li>\n<li>lblc（本地最后连接）</li>\n<li>lblcr（带复制的本地最后连接）</li>\n<li>dh（目的地址哈希）</li>\n<li>sh（源地址哈希）</li>\n<li>sed（最小期望延迟）</li>\n<li>nq（永不排队）</li>\n</ul>\n<h4 id=\"ipvsadm常用命令\"><a href=\"#ipvsadm常用命令\" class=\"headerlink\" title=\"ipvsadm常用命令\"></a>ipvsadm常用命令</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看规则</span>\nipvsadm <span class=\"token parameter variable\">-L</span>\n\n<span class=\"token comment\"># 查看指定规则</span>\nipvsadm <span class=\"token parameter variable\">-L</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">10.0</span>.0.1:80\n\n<span class=\"token comment\"># 查看链接</span>\nipvsadm <span class=\"token parameter variable\">-l</span> <span class=\"token parameter variable\">-c</span>\n\n<span class=\"token comment\"># 清理所有规则</span>\nipvsadm <span class=\"token parameter variable\">-c</span>\n\n<span class=\"token comment\"># 清空计数器</span>\nipvsadm <span class=\"token parameter variable\">-Z</span>\n\n<span class=\"token comment\"># 添加一个虚拟服务器，算法为轮询</span>\nipvsadm <span class=\"token parameter variable\">-A</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">10.0</span>.0.1:80 <span class=\"token parameter variable\">-s</span> rr\n\n<span class=\"token comment\"># 删除一个虚拟服务,同时删除RS</span>\nipvsadm <span class=\"token parameter variable\">-D</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">10.0</span>.0.1:80\n\n<span class=\"token comment\"># 修改一个服务，将算法修改为wlc</span>\nipvsadm <span class=\"token parameter variable\">-E</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">10.0</span>.0.1:80 <span class=\"token parameter variable\">-s</span> wlc\n\n<span class=\"token comment\"># 添加一个RS,nat模式</span>\nipvsadm <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">10.0</span>.0.1:80 <span class=\"token parameter variable\">-r</span> <span class=\"token number\">192.168</span>.32.129:80 <span class=\"token parameter variable\">-m</span>\n\n<span class=\"token comment\"># 添加一个RS,路由模式,权重为3</span>\nipvsadm <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">10.0</span>.0.1:80 <span class=\"token parameter variable\">-r</span> <span class=\"token number\">192.168</span>.32.129:80 <span class=\"token parameter variable\">-g</span> <span class=\"token parameter variable\">-w</span> <span class=\"token number\">3</span>\n\n<span class=\"token comment\"># 添加一个RS,ipip隧道模式</span>\nipvsadm <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">10.0</span>.0.1:80 <span class=\"token parameter variable\">-r</span> <span class=\"token number\">192.168</span>.32.129:80 <span class=\"token parameter variable\">-i</span>\n\n<span class=\"token comment\"># 修改rs 将此rs的模式改为ipip权重为2</span>\nipvsadm <span class=\"token parameter variable\">-e</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">10.0</span>.0.1:80 <span class=\"token parameter variable\">-r</span> <span class=\"token number\">192.168</span>.32.129:80 <span class=\"token parameter variable\">-i</span> <span class=\"token parameter variable\">-w</span> <span class=\"token number\">2</span>\n\n<span class=\"token comment\"># 删除一个RS</span>\nipvsadm <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">10.0</span>.0.1:80 <span class=\"token parameter variable\">-r</span> <span class=\"token number\">192.168</span>.32.129:80\n\n<span class=\"token comment\"># 查看转发情况</span>\nipvsadm <span class=\"token parameter variable\">-L</span> <span class=\"token parameter variable\">-n</span> <span class=\"token parameter variable\">-c</span>\n\n<span class=\"token comment\"># 保存配置</span>\nipvsadm <span class=\"token parameter variable\">-S</span> <span class=\"token parameter variable\">-n</span> <span class=\"token operator\">></span>ipvs.conf\n\n<span class=\"token comment\"># 读取配置</span>\nipvsadm <span class=\"token parameter variable\">-R</span> <span class=\"token operator\">&lt;</span> ipvs.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.cnblogs.com/laolieren/p/lvs_explained.html\">https://www.cnblogs.com/laolieren/p/lvs_explained.html</a><br><a href=\"https://www.cnblogs.com/klb561/p/9215667.html\">https://www.cnblogs.com/klb561/p/9215667.html</a><br><a href=\"https://www.jianshu.com/p/734640384fda\">https://www.jianshu.com/p/734640384fda</a><br><a href=\"https://www.cnblogs.com/f-ck-need-u/p/8472744.html\">https://www.cnblogs.com/f-ck-need-u/p/8472744.html</a></p>\n","tags":["网络","负载均衡"]},{"title":"haproxy使用","url":"/2023/08/22/haproxy%E4%BD%BF%E7%94%A8/","content":"<p><a href=\"https://www.haproxy.org/\">haproxy</a>是一个负载均衡程序支持L4和L7,和ipvs不同的是他的实现在用户空间</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> haproxy\nsystemc start haproxy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><ul>\n<li><p>配置的路径为<code>/etc/haproxy/haproxy.cfg</code></p>\n</li>\n<li><p><code>global</code>为全局配置</p>\n</li>\n<li><p><code>defaults</code>则为默认配置</p>\n</li>\n<li><p><code>frontend backend listen</code>其中frontend和backend配合完成一个代理比较灵活，listen则比较方便直接能定义监听相关信息和后端地址</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">global # 全局配置\n    log         127.0.0.1 local2\n\n    chroot      &#x2F;var&#x2F;lib&#x2F;haproxy\n    pidfile     &#x2F;var&#x2F;run&#x2F;haproxy.pid\n    maxconn     4000 # 最大连接数\n    user        haproxy\n    group       haproxy\n    daemon # 以daemon方式运行\n\n    # turn on stats unix socket\n    stats socket &#x2F;var&#x2F;lib&#x2F;haproxy&#x2F;stats\ndefaults # 默认参数\n    mode                    http # 定义模式，http为7层，tcp则为4层\n    log                     global\n    option                  httplog\n    option                  dontlognull\n    option http-server-close\n    option forwardfor       except 127.0.0.0&#x2F;8\n    option                  redispatch\n    retries                 3\n    timeout http-request    10s\n    timeout queue           1m\n    timeout connect         10s\n    timeout client          1m\n    timeout server          1m\n    timeout http-keep-alive 10s\n    timeout check           10s\n    maxconn                 3000\n\nfrontend  main *:5000 # 定义前端\n    acl url_static       path_beg       -i &#x2F;static &#x2F;images &#x2F;javascript &#x2F;stylesheets # acl设置7层路径前缀匹配\n    acl url_static       path_end       -i .jpg .gif .png .css .js # acl设置7层路径后缀匹配，还有正则匹配\n\n    use_backend static          if url_static # 符合url_static这个规则则使用static这个后端\n    default_backend             app # 默认后端app\n\nbackend static\n    balance     roundrobin\n    server      static 127.0.0.1:4331 check\n\nbackend app # 后端app\n    balance     roundrobin # 代理算法\n    server  app1 10.7.112.201:80 check # 定义后端地址有很多个，check开启了健康检查\n\nlisten stats    #定义监控页面，通过浏览器可以查看haproxy状态\n    bind *:1080                   # 绑定端口1080\n    stats refresh 30s             # 每30秒更新监控数据\n    stats uri &#x2F;stats              # 访问监控页面的uri\n    stats realm HAProxy Stats     # 监控页面的认证提示\n    stats auth admin:admin        # 监控页面的用户名和密码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.cnblogs.com/f-ck-need-u/p/8502593.html#1-5-acl\">https://www.cnblogs.com/f-ck-need-u/p/8502593.html#1-5-acl</a></p>\n","tags":["网络","负载均衡"]},{"title":"iptables","url":"/2020/12/03/iptables/","content":"<p>Iptables是大多数发型版本中支持的防火墙</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>iptables是个前端其真正的后端是linux的netfilter框架,一些发行版略有区别，centos8中则使用nftables来代替</p>\n</blockquote>\n<h4 id=\"链\"><a href=\"#链\" class=\"headerlink\" title=\"链\"></a>链</h4><blockquote>\n<p>在linuxn内核中的五个钩子(hook)，iptable中还可以自定义链，自定义只能被默认链引用才能使用</p>\n</blockquote>\n<ul>\n<li>INPUT 发送到用户空间的钩子</li>\n<li>OUTPUT 从用户空间发发出的钩子</li>\n<li>PREROUTING 路由前的钩子</li>\n<li>FORWARD 转发的钩子</li>\n<li>POSTROUTING 路由后的钩子</li>\n</ul>\n<h4 id=\"表\"><a href=\"#表\" class=\"headerlink\" title=\"表\"></a>表</h4><blockquote>\n<p>一些相近功能规则的组</p>\n</blockquote>\n<ul>\n<li>filter表：负责过滤功能，内核模块：iptables_filter</li>\n<li>nat表：网络地址转换功能；内核模块：iptable_nat</li>\n<li>mangle表：拆解报文，做出修改并重新封装的功能；内核模块：iptable_mangle</li>\n<li>raw表：关闭nat表上启用的连接追踪机制；iptable_raw</li>\n</ul>\n<h4 id=\"链表关系\"><a href=\"#链表关系\" class=\"headerlink\" title=\"链表关系\"></a>链表关系</h4><p><img src=\"/../images/iptables-1.png\" alt=\"iptables\"></p>\n<ul>\n<li>以流量的视角来看</li>\n</ul>\n<p><img src=\"/../images/iptables_traverse.jpeg\" alt=\"iptables\"></p>\n<ul>\n<li>全局来看,<a href=\"https://upload.wikimedia.org/wikipedia/commons/3/37/Netfilter-packet-flow.svg\">原地址</a></li>\n</ul>\n<p><img src=\"/../images/Netfilter-packet-flow.svg\" alt=\"iptables\"></p>\n<h4 id=\"查看规则\"><a href=\"#查看规则\" class=\"headerlink\" title=\"查看规则\"></a>查看规则</h4><p><img src=\"/../images/iptables-2.png\" alt=\"iptables\"></p>\n<h5 id=\"命令说明\"><a href=\"#命令说明\" class=\"headerlink\" title=\"命令说明\"></a>命令说明</h5><ul>\n<li>-L 列出规则,L后面可也接受指定链</li>\n<li>-v 可以查看更多的信息</li>\n<li>-n 不对地址做名称反解 直接显示原来的IP地址</li>\n<li>-t 执行表名，默认为<code>filter</code>表</li>\n<li>–line-numbers 显示规则序列号,缩写为–line</li>\n<li>-x 精确数值</li>\n</ul>\n<h5 id=\"返回说明\"><a href=\"#返回说明\" class=\"headerlink\" title=\"返回说明\"></a>返回说明</h5><ul>\n<li>红色部分：<ul>\n<li>chain：链名，括号里的policy默认策略这里是drop</li>\n<li>packets：默认策略匹配到的包的数量</li>\n<li>bytes：当前链默认策略匹配到的所有包的大小总和</li>\n</ul>\n</li>\n<li>绿色部分：<ul>\n<li>bytes:对应匹配到的报文包的大小总和</li>\n<li>target:规则对应的target，往往表示规则对应的”动作”，即规则匹配成功后需要采取的措施</li>\n<li>prot:表示规则对应的协议，是否只针对某些协议应用此规则</li>\n<li>opt:表示规则对应的选项</li>\n<li>in:表示数据包由哪个接口(网卡)流入</li>\n<li>out:表示数据包由哪个接口(网卡)流出</li>\n<li>source:表示规则对应的源头IP或网段</li>\n<li>destination:表示规则对应的目标IP或网段</li>\n</ul>\n</li>\n<li>黄色部分：规则序列号</li>\n</ul>\n<h5 id=\"查看所有规则\"><a href=\"#查看所有规则\" class=\"headerlink\" title=\"查看所有规则\"></a>查看所有规则</h5><p>查看所有链所有表的规则</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iptables --line-numbers <span class=\"token parameter variable\">-nvL</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"查看指定规则\"><a href=\"#查看指定规则\" class=\"headerlink\" title=\"查看指定规则\"></a>查看指定规则</h5><p>查看指定表，默认链</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># iptables --line-numbers -nvL -t &lt;表></span>\niptables --line-numbers <span class=\"token parameter variable\">-nvL</span> <span class=\"token parameter variable\">-t</span> nat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>查看INPUT链的nat表</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># iptables --line-numbers -nvL &lt;链> -t &lt;表></span>\n<span class=\"token comment\"># iptables --line-numbers -nv -L &lt;链> -t &lt;表></span>\niptables --line-numbers <span class=\"token parameter variable\">-nv</span> <span class=\"token parameter variable\">-L</span> INPUT <span class=\"token parameter variable\">-t</span> nat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>查看INPUT链的nat表的序列号是3的规则</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># iptables --line-numbers -nvL &lt;链> 3-t &lt;表></span>\n<span class=\"token comment\"># iptables --line-numbers -nv -L &lt;链> 3 -t &lt;表></span>\niptables --line-numbers <span class=\"token parameter variable\">-nv</span> <span class=\"token parameter variable\">-L</span> INPUT <span class=\"token number\">3</span> <span class=\"token parameter variable\">-t</span> nat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"增加规则\"><a href=\"#增加规则\" class=\"headerlink\" title=\"增加规则\"></a>增加规则</h4><blockquote>\n<p>iptables是自上而下匹配规则的所以顺序很重要 <br>-A 尾部增加 <br>-I 头部增加 后面加上序列号则是指定序列号位置</p>\n</blockquote>\n<h5 id=\"尾部增加规则\"><a href=\"#尾部增加规则\" class=\"headerlink\" title=\"尾部增加规则\"></a>尾部增加规则</h5><p>在 filter表INPUT链中<code>尾部</code>增加一条丢弃从192.168.1.1发送过来数据的规则</p>\n<pre class=\"line-numbers language-Shell\" data-language=\"Shell\"><code class=\"language-Shell\"># iptables -t &lt;表名&gt; -A &lt;链名&gt; &lt;匹配条件&gt; -j &lt;动作&gt;\niptables -t filter -A INPUT -s 192.168.1.1 -j DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"头部增加规则\"><a href=\"#头部增加规则\" class=\"headerlink\" title=\"头部增加规则\"></a>头部增加规则</h5><p>在 filter表INPUT链中<code>头部</code>增加一条丢弃从192.168.1.2发送过来数据的规则</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># iptables -t &lt;表名> -I &lt;链名> &lt;匹配条件> -j &lt;动作></span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.2 <span class=\"token parameter variable\">-j</span> DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"指定位置增加规则\"><a href=\"#指定位置增加规则\" class=\"headerlink\" title=\"指定位置增加规则\"></a>指定位置增加规则</h5><p>在 filter表INPUT链中<code>指定位置</code>增加一条丢弃从192.168.1.3发送过来数据的规则</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># iptables -t &lt;表名> -I &lt;链名> &lt;规则序号>  &lt;匹配条件> -j &lt;动作></span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT  <span class=\"token number\">3</span> <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.2 <span class=\"token parameter variable\">-j</span> DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"修改规则\"><a href=\"#修改规则\" class=\"headerlink\" title=\"修改规则\"></a>修改规则</h4><p>将序列号为2的规则的动作修改为accept</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># iptables -t &lt;表名> -R &lt;链名> &lt;规则序号> &lt;原本的匹配条件> -j &lt;动作></span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-R</span> INPUT <span class=\"token number\">2</span> <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.146 <span class=\"token parameter variable\">-j</span> ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"修改默认规则\"><a href=\"#修改默认规则\" class=\"headerlink\" title=\"修改默认规则\"></a>修改默认规则</h5><p>将INPUT链默认策略设置为DROP,注意不要在生产环境执行此规则会断网</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># iptables -t &lt;表> -P &lt;链> &lt;动作></span>\n<span class=\"token comment\"># iptables  -P &lt;链> &lt;动作> 表可省略</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-P</span> INPUT DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"删除规则\"><a href=\"#删除规则\" class=\"headerlink\" title=\"删除规则\"></a>删除规则</h4><h5 id=\"按照规则序号删除规则\"><a href=\"#按照规则序号删除规则\" class=\"headerlink\" title=\"按照规则序号删除规则\"></a>按照规则序号删除规则</h5><pre class=\"line-numbers language-Shell\" data-language=\"Shell\"><code class=\"language-Shell\"># iptables -t &lt;表名&gt; -D &lt;链名&gt; &lt;规则序号&gt;\niptables -t filter -D INPUT 3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"按照具体的匹配条件与动作删除规则\"><a href=\"#按照具体的匹配条件与动作删除规则\" class=\"headerlink\" title=\"按照具体的匹配条件与动作删除规则\"></a>按照具体的匹配条件与动作删除规则</h5><pre class=\"line-numbers language-Shell\" data-language=\"Shell\"><code class=\"language-Shell\"># iptables -t &lt;表名&gt; -D &lt;链名&gt; &lt;匹配条件&gt; -j &lt;动作&gt;\niptables -t filter -D INPUT -s 192.168.1.2 -j DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除所有规则\"><a href=\"#删除所有规则\" class=\"headerlink\" title=\"删除所有规则\"></a>删除所有规则</h5><blockquote>\n<p>谨慎操作！！！</p>\n</blockquote>\n<p>清除filter表</p>\n<pre class=\"line-numbers language-Shell\" data-language=\"Shell\"><code class=\"language-Shell\"># iptables -t &lt;表名&gt; -F\niptables -t filter -F<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"处理动作\"><a href=\"#处理动作\" class=\"headerlink\" title=\"处理动作\"></a>处理动作</h4><blockquote>\n<p>处理动作在iptables中被称为target，动作也可以分为基本动作和扩展动作默认动作如下</p>\n</blockquote>\n<ul>\n<li>ACCEPT：允许数据包通过</li>\n<li>DROP：丢弃数据包,客户端会等待</li>\n<li>REJECT：拒绝数据包通过，客户端会立即发现拒绝</li>\n<li>SNAT：源地址转换</li>\n<li>DNAT：目标地址转换</li>\n<li>MASQUERADE：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上</li>\n<li>REDIRECT：在本机做端口映射</li>\n<li>LOG：在&#x2F;var&#x2F;log&#x2F;messages文件中记录日志信息，然后传给下一条</li>\n</ul>\n<h5 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h5><blockquote>\n<p>日志模块一般用于调试</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 开启日志</span>\niptables <span class=\"token parameter variable\">-A</span> INPUT <span class=\"token parameter variable\">-j</span> LOG\n\n<span class=\"token comment\"># 设置日志级别</span>\niptables <span class=\"token parameter variable\">-A</span> INPUT <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.0/24 <span class=\"token parameter variable\">-j</span> LOG --log-level <span class=\"token number\">7</span>\n\n<span class=\"token comment\"># 在日志加上前缀</span>\niptables <span class=\"token parameter variable\">-A</span> INPUT <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.0/24 <span class=\"token parameter variable\">-j</span> LOG --log-prefix <span class=\"token string\">\"iptables log: \"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"条件匹配\"><a href=\"#条件匹配\" class=\"headerlink\" title=\"条件匹配\"></a>条件匹配</h4><blockquote>\n<p>如果有多个规则，则规则之间是<code>与</code>关系</p>\n</blockquote>\n<h5 id=\"源地址匹配\"><a href=\"#源地址匹配\" class=\"headerlink\" title=\"源地址匹配\"></a>源地址匹配</h5><blockquote>\n<p>-s 用于匹配报文的源地址,可以同时指定多个源地址，每个IP之间用逗号隔开，也可以指定为一个网段。</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 丢弃从192.168.1.1和192.168.1.2发送过来的数据</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.1,192.168.1.2 <span class=\"token parameter variable\">-j</span> DROP\n<span class=\"token comment\"># 允许从192.168.1.0/24发送过来的数据</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.0/24 <span class=\"token parameter variable\">-j</span> ACCEPT\n<span class=\"token comment\"># 允许除了192.168.1.0/24发送过来的数据</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.0/24 <span class=\"token parameter variable\">-j</span> ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"目的地址匹配\"><a href=\"#目的地址匹配\" class=\"headerlink\" title=\"目的地址匹配\"></a>目的地址匹配</h5><blockquote>\n<p>-d 用于匹配报文的目标地址,和源地址匹配一样可以同时指定多个目标地址，每个IP之间用逗号隔开，也可以指定为一个网段。</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 丢弃发送到192.168.1.1和192.168.1.2的数据</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> OUTPUT <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.1,192.168.1.2 <span class=\"token parameter variable\">-j</span> DROP\n<span class=\"token comment\"># 允许发送数据到192.168.1.0/24</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.0/24 <span class=\"token parameter variable\">-j</span> ACCEPT\n<span class=\"token comment\"># 允许发送除了192.168.1.0/24数据</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.0/24 <span class=\"token parameter variable\">-j</span> ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"端口匹配\"><a href=\"#端口匹配\" class=\"headerlink\" title=\"端口匹配\"></a>端口匹配</h5><blockquote>\n<p>-p 匹配报文的协议类型,可以匹配的协议类型tcp、udp、icmp等</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 允许发送数据到192.168.1.1的tcp协议</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.1 <span class=\"token parameter variable\">-j</span> ACCEPT\n<span class=\"token comment\"># 允许发送数据到192.168.1.1的udp协议</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-p</span> udp <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.1 <span class=\"token parameter variable\">-j</span> ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"网卡流入匹配\"><a href=\"#网卡流入匹配\" class=\"headerlink\" title=\"网卡流入匹配\"></a>网卡流入匹配</h5><blockquote>\n<p>-i 匹配报文是从哪个网卡接口流入本机的，由于匹配条件只是用于匹配报文流入的网卡，所以在OUTPUT链与POSTROUTING链中不能使用此选项。</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> icmp <span class=\"token parameter variable\">-i</span> enp0s3 <span class=\"token parameter variable\">-j</span> DROP\n<span class=\"token comment\">#</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> icmp <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-i</span> enp0s3 <span class=\"token parameter variable\">-j</span> DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"网卡流出匹配\"><a href=\"#网卡流出匹配\" class=\"headerlink\" title=\"网卡流出匹配\"></a>网卡流出匹配</h5><blockquote>\n<p>-o 匹配报文将要从哪个网卡接口流出本机，于匹配条件只是用于匹配报文流出的网卡，所以在INPUT链与PREROUTING链中不能使用此选项。</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 丢弃从enp0s3网卡流出的icmp协议</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> OUTPUT <span class=\"token parameter variable\">-p</span> icmp <span class=\"token parameter variable\">-o</span> enp0s3 <span class=\"token parameter variable\">-j</span> DROP\n<span class=\"token comment\"># 丢弃除enp0s3网卡流出的icmp协议</span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> OUTPUT <span class=\"token parameter variable\">-p</span> icmp <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-o</span> enp0s3 <span class=\"token parameter variable\">-j</span> DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"自定义链\"><a href=\"#自定义链\" class=\"headerlink\" title=\"自定义链\"></a>自定义链</h4><blockquote>\n<p>在规则比较多时方便管理规则，自定义链需要被默认链引用才能生效</p>\n</blockquote>\n<h5 id=\"创建自定义链\"><a href=\"#创建自定义链\" class=\"headerlink\" title=\"创建自定义链\"></a>创建自定义链</h5><blockquote>\n<p>创建一个filter表名字叫TEST的链</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># iptables -t &lt;表> -N &lt;链名></span>\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-N</span> TEST<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"引用自定义链\"><a href=\"#引用自定义链\" class=\"headerlink\" title=\"引用自定义链\"></a>引用自定义链</h5><blockquote>\n<p>引用的时候只需要将动作使用自定义链名 <br>在默认链INPUT中插入一条目标端口是80协议是tcp动作是自定义链TEST的规则</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">--dport</span> <span class=\"token number\">80</span> <span class=\"token parameter variable\">-j</span> TEST<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"重命名自定义链\"><a href=\"#重命名自定义链\" class=\"headerlink\" title=\"重命名自定义链\"></a>重命名自定义链</h5><blockquote>\n<p>将TEST自定义链改为TEST2</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># iptables -E &lt;原自定义链名> &lt;目标自定义链名></span>\niptables <span class=\"token parameter variable\">-E</span> TEST TEST2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除自定义链\"><a href=\"#删除自定义链\" class=\"headerlink\" title=\"删除自定义链\"></a>删除自定义链</h5><blockquote>\n<p>删除TEST2的自定义链名</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># iptables -X &lt;自定义链名></span>\niptables <span class=\"token parameter variable\">-X</span> TEST2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"扩展模块\"><a href=\"#扩展模块\" class=\"headerlink\" title=\"扩展模块\"></a>扩展模块</h4><blockquote>\n<p>iptables支持使用扩展模块来进行功能的扩展</p>\n</blockquote>\n<h5 id=\"comment\"><a href=\"#comment\" class=\"headerlink\" title=\"comment\"></a>comment</h5><blockquote>\n<p>注释模块，顾名思义对规则进行说明</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token parameter variable\">-m</span> comment <span class=\"token parameter variable\">--comment</span> <span class=\"token string\">\"comment\"</span> \n\niptables <span class=\"token parameter variable\">-t</span> filter <span class=\"token parameter variable\">-I</span> INPUT <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.0/24 <span class=\"token parameter variable\">-m</span> comment <span class=\"token parameter variable\">--comment</span> <span class=\"token string\">\"xxxx\"</span> <span class=\"token parameter variable\">-j</span> ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"multiport\"><a href=\"#multiport\" class=\"headerlink\" title=\"multiport\"></a>multiport</h5><blockquote>\n<p>多端口模块，可以设置一条规则匹配多个端口</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token parameter variable\">-m</span> multiport <span class=\"token parameter variable\">--dports</span> <span class=\"token operator\">&lt;</span>端口号<span class=\"token operator\">></span>,<span class=\"token operator\">&lt;</span>端口号<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"ipset\"><a href=\"#ipset\" class=\"headerlink\" title=\"ipset\"></a>ipset</h5><blockquote>\n<p>可以一条规则匹配ipset里面的地址</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token parameter variable\">-m</span> <span class=\"token builtin class-name\">set</span> --match-set <span class=\"token operator\">&lt;</span>ipset名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"mark\"><a href=\"#mark\" class=\"headerlink\" title=\"mark\"></a>mark</h5><blockquote>\n<p>标记流量，需要注意的时候这个标记只在本地标记流量出去之后就没了</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 设置标签</span>\n<span class=\"token parameter variable\">-j</span> MARK --set-xmark 0x8000/0x8000\n\n<span class=\"token comment\"># 匹配标签并丢弃</span>\n<span class=\"token parameter variable\">-m</span> MARK <span class=\"token parameter variable\">--mark</span> 0x8000/0x8000 <span class=\"token parameter variable\">-j</span> DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>–set-xmark value[&#x2F;mask]  mask和value做异或运算</li>\n<li>–set-mark value[&#x2F;mask]   mask和value做或运算</li>\n<li>–and-mark bits           和nfmark做与运算</li>\n<li>–or-mark bits            和nfmark做或运算</li>\n<li>–xor-mark bits           和nfmark做异或运算</li>\n</ul>\n<h5 id=\"conntrack\"><a href=\"#conntrack\" class=\"headerlink\" title=\"conntrack\"></a>conntrack</h5><blockquote>\n<p>连接跟踪模块可以根据连接的状态匹配</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token parameter variable\">-m</span> conntrack <span class=\"token parameter variable\">--ctstate</span> RELATED,ESTABLISHED <span class=\"token parameter variable\">-j</span> ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>NEW 新建连接</li>\n<li>ESTABLISHED 已经连接</li>\n<li>RELATED 相关连接</li>\n<li>INVALID 无效连接</li>\n<li>UNTRACKED 人为设置的</li>\n</ul>\n<p>参考 <a href=\"https://www.cnblogs.com/saolv/p/13096965.html\">https://www.cnblogs.com/saolv/p/13096965.html</a></p>\n<h4 id=\"规则保存导出和还原\"><a href=\"#规则保存导出和还原\" class=\"headerlink\" title=\"规则保存导出和还原\"></a>规则保存导出和还原</h4><h5 id=\"保存规则\"><a href=\"#保存规则\" class=\"headerlink\" title=\"保存规则\"></a>保存规则</h5><blockquote>\n<p>centos7以上没有安装<code>iptables-services</code></p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装iptables-services</span>\nyum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> iptables-services\n\n<span class=\"token comment\"># 保存规则</span>\n<span class=\"token function\">service</span> iptables save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"导出规则\"><a href=\"#导出规则\" class=\"headerlink\" title=\"导出规则\"></a>导出规则</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iptables-restore <span class=\"token operator\">></span> iptable<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"还原规则\"><a href=\"#还原规则\" class=\"headerlink\" title=\"还原规则\"></a>还原规则</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iptables-save <span class=\"token operator\">&lt;</span> iptable<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"帮助\"><a href=\"#帮助\" class=\"headerlink\" title=\"帮助\"></a>帮助</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iptables <span class=\"token parameter variable\">-j</span> <span class=\"token operator\">&lt;</span>target<span class=\"token operator\">></span> <span class=\"token parameter variable\">-help</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"http://www.zsythink.net/archives/category/%e8%bf%90%e7%bb%b4%e7%9b%b8%e5%85%b3/iptables/\">朱双印个人博客</a><br><a href=\"https://www.frozentux.net/iptables-tutorial/iptables-tutorial.html\">https://www.frozentux.net/iptables-tutorial/iptables-tutorial.html</a></p>\n","tags":["网络","linux"]},{"title":"k8s-apiserver中loopback证书源码阅读","url":"/2023/07/09/k8s-apiserver%E4%B8%ADloopback%E8%AF%81%E4%B9%A6%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/","content":"<p>apiserver因为loopback证书过期导致一些功能无法使用,</p>\n<span id=\"more\"></span>\n\n<p>apiserver启动的时候会生成一个loopback证书，该证书默认只有一年有效期,k8s官方解释说应该每年升级或者重启一次,<a href=\"https://github.com/kubernetes/kubernetes/issues/86552\">issues</a></p>\n<p>但在实际场景当中不能没事就重启或升级apiserver</p>\n<h4 id=\"生成证书和回环客户端\"><a href=\"#生成证书和回环客户端\" class=\"headerlink\" title=\"生成证书和回环客户端\"></a>生成证书和回环客户端</h4><ul>\n<li>入口</li>\n</ul>\n<p>.&#x2F;cmd&#x2F;kube-apiserver&#x2F;main.go</p>\n<ul>\n<li>然后跳转</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./cmd/kube-apiserver/app/server.go<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// NewAPIServerCommand creates a *cobra.Command object with default parameters</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">NewAPIServerCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>cobra<span class=\"token punctuation\">.</span>Command <span class=\"token punctuation\">&#123;</span>\n    s <span class=\"token operator\">:=</span> options<span class=\"token punctuation\">.</span><span class=\"token function\">NewServerRunOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">...</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>completedOptions<span class=\"token punctuation\">,</span> genericapiserver<span class=\"token punctuation\">.</span><span class=\"token function\">SetupSignalHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// Run runs the specified APIServer.  This should never exit.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>completeOptions completedServerRunOptions<span class=\"token punctuation\">,</span> xstopCh <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// To help debugging, immediately log version</span>\n    klog<span class=\"token punctuation\">.</span><span class=\"token function\">Infof</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Version: %+v\"</span><span class=\"token punctuation\">,</span> version<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    klog<span class=\"token punctuation\">.</span><span class=\"token function\">InfoS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Golang settings\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GOGC\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GOGC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GOMAXPROCS\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GOMAXPROCS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GOTRACEBACK\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GOTRACEBACK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    server<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">CreateServerChain</span><span class=\"token punctuation\">(</span>completeOptions<span class=\"token punctuation\">,</span> stopCh<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n\n    prepared<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">PrepareRun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> prepared<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>stopCh<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// CreateServerChain creates the apiservers connected via delegation.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">CreateServerChain</span><span class=\"token punctuation\">(</span>completedOptions completedServerRunOptions<span class=\"token punctuation\">,</span> stopCh <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>aggregatorapiserver<span class=\"token punctuation\">.</span>APIAggregator<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 回环证书在此创建</span>\n    kubeAPIServerConfig<span class=\"token punctuation\">,</span> serviceResolver<span class=\"token punctuation\">,</span> pluginInitializer<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">CreateKubeAPIServerConfig</span><span class=\"token punctuation\">(</span>completedOptions<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">CreateKubeAPIServerConfig</span><span class=\"token punctuation\">(</span>s completedServerRunOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">*</span>controlplane<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">,</span>\n    aggregatorapiserver<span class=\"token punctuation\">.</span>ServiceResolver<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>admission<span class=\"token punctuation\">.</span>PluginInitializer<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">error</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">...</span>\n    genericConfig<span class=\"token punctuation\">,</span> versionedInformers<span class=\"token punctuation\">,</span> serviceResolver<span class=\"token punctuation\">,</span> pluginInitializers<span class=\"token punctuation\">,</span> admissionPostStartHook<span class=\"token punctuation\">,</span> storageFactory<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">buildGenericConfig</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>ServerRunOptions<span class=\"token punctuation\">,</span> proxyTransport<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// BuildGenericConfig takes the master server options and produces the genericapiserver.Config associated with it</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">buildGenericConfig</span><span class=\"token punctuation\">(</span>\n    s <span class=\"token operator\">*</span>options<span class=\"token punctuation\">.</span>ServerRunOptions<span class=\"token punctuation\">,</span>\n    proxyTransport <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Transport<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>\n    genericConfig <span class=\"token operator\">*</span>genericapiserver<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">,</span>\n    versionedInformers clientgoinformers<span class=\"token punctuation\">.</span>SharedInformerFactory<span class=\"token punctuation\">,</span>\n    serviceResolver aggregatorapiserver<span class=\"token punctuation\">.</span>ServiceResolver<span class=\"token punctuation\">,</span>\n    pluginInitializers <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>admission<span class=\"token punctuation\">.</span>PluginInitializer<span class=\"token punctuation\">,</span>\n    admissionPostStartHook genericapiserver<span class=\"token punctuation\">.</span>PostStartHookFunc<span class=\"token punctuation\">,</span>\n    storageFactory <span class=\"token operator\">*</span>serverstorage<span class=\"token punctuation\">.</span>DefaultStorageFactory<span class=\"token punctuation\">,</span>\n    lastErr <span class=\"token builtin\">error</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    genericConfig <span class=\"token operator\">=</span> genericapiserver<span class=\"token punctuation\">.</span><span class=\"token function\">NewConfig</span><span class=\"token punctuation\">(</span>legacyscheme<span class=\"token punctuation\">.</span>Codecs<span class=\"token punctuation\">)</span>\n    genericConfig<span class=\"token punctuation\">.</span>MergedResourceConfig <span class=\"token operator\">=</span> controlplane<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultAPIResourceConfigSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> lastErr <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>GenericServerRunOptions<span class=\"token punctuation\">.</span><span class=\"token function\">ApplyTo</span><span class=\"token punctuation\">(</span>genericConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> lastErr <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 将生成的回环客户端赋值给genericConfig</span>\n    <span class=\"token keyword\">if</span> lastErr <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>SecureServing<span class=\"token punctuation\">.</span><span class=\"token function\">ApplyTo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>genericConfig<span class=\"token punctuation\">.</span>SecureServing<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>genericConfig<span class=\"token punctuation\">.</span>LoopbackClientConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> lastErr <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./k8s.io/apiserver/pkg/server/options/serving_with_loopback.go<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>SecureServingOptionsWithLoopback<span class=\"token punctuation\">)</span> <span class=\"token function\">ApplyTo</span><span class=\"token punctuation\">(</span>secureServingInfo <span class=\"token operator\">*</span><span class=\"token operator\">*</span>server<span class=\"token punctuation\">.</span>SecureServingInfo<span class=\"token punctuation\">,</span> loopbackClientConfig <span class=\"token operator\">*</span><span class=\"token operator\">*</span>rest<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">||</span> s<span class=\"token punctuation\">.</span>SecureServingOptions <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">||</span> secureServingInfo <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n\n    <span class=\"token comment\">// 将正式放到SNICerts,给http服务使用</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>secureServingInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>SNICerts <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>dynamiccertificates<span class=\"token punctuation\">.</span>SNICertKeyContentProvider<span class=\"token punctuation\">&#123;</span>certProvider<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>secureServingInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>SNICerts<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n    secureLoopbackClientConfig<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>secureServingInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">NewLoopbackClientConfig</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> certPem<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用生成的证书创建一个reset客户端</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// if we failed and there's no fallback loopback client config, we need to fail</span>\n    <span class=\"token keyword\">case</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>loopbackClientConfig <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>secureServingInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>SNICerts <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>secureServingInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>SNICerts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> err\n\n    <span class=\"token comment\">// if we failed, but we already have a fallback loopback client config (usually insecure), allow it</span>\n    <span class=\"token keyword\">case</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>loopbackClientConfig <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">*</span>loopbackClientConfig <span class=\"token operator\">=</span> secureLoopbackClientConfig <span class=\"token comment\">// 传回结构体</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./k8s.io/client-go/util/cert/cert.go<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// GenerateSelfSignedCertKey creates a self-signed certificate and key for the given host.</span>\n<span class=\"token comment\">// Host may be an IP or a DNS name</span>\n<span class=\"token comment\">// You may also specify additional subject alt names (either ip or dns names) for the certificate.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">GenerateSelfSignedCertKey</span><span class=\"token punctuation\">(</span>host <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> alternateIPs <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>net<span class=\"token punctuation\">.</span>IP<span class=\"token punctuation\">,</span> alternateDNS <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">GenerateSelfSignedCertKeyWithFixtures</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> alternateIPs<span class=\"token punctuation\">,</span> alternateDNS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">GenerateSelfSignedCertKeyWithFixtures</span><span class=\"token punctuation\">(</span>host <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> alternateIPs <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>net<span class=\"token punctuation\">.</span>IP<span class=\"token punctuation\">,</span> alternateDNS <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> fixtureDirectory <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    validFrom <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>time<span class=\"token punctuation\">.</span>Hour<span class=\"token punctuation\">)</span> <span class=\"token comment\">// valid an hour earlier to avoid flakes due to clock skew</span>\n    maxAge <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span>Hour <span class=\"token operator\">*</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">365</span>         <span class=\"token comment\">// one year self-signed certs # 这里就是控制证书过期的时间</span>\n\n    baseName <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s_%s_%s\"</span><span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span><span class=\"token function\">ipsToStrings</span><span class=\"token punctuation\">(</span>alternateIPs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>alternateDNS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    certFixturePath <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>fixtureDirectory<span class=\"token punctuation\">,</span> baseName<span class=\"token operator\">+</span><span class=\"token string\">\".crt\"</span><span class=\"token punctuation\">)</span>\n    keyFixturePath <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>fixtureDirectory<span class=\"token punctuation\">,</span> baseName<span class=\"token operator\">+</span><span class=\"token string\">\".key\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>fixtureDirectory<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n        cert<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ioutil<span class=\"token punctuation\">.</span><span class=\"token function\">ReadFile</span><span class=\"token punctuation\">(</span>certFixturePath<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n            key<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ioutil<span class=\"token punctuation\">.</span><span class=\"token function\">ReadFile</span><span class=\"token punctuation\">(</span>keyFixturePath<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> err <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> cert<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cert %s can be read, but key %s cannot: %v\"</span><span class=\"token punctuation\">,</span> certFixturePath<span class=\"token punctuation\">,</span> keyFixturePath<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        maxAge <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Hour <span class=\"token operator\">*</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">365</span> <span class=\"token comment\">// 100 years fixtures</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n    caTemplate <span class=\"token operator\">:=</span> x509<span class=\"token punctuation\">.</span>Certificate<span class=\"token punctuation\">&#123;</span>\n        SerialNumber<span class=\"token punctuation\">:</span> big<span class=\"token punctuation\">.</span><span class=\"token function\">NewInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        Subject<span class=\"token punctuation\">:</span> pkix<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">&#123;</span>\n            CommonName<span class=\"token punctuation\">:</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s-ca@%d\"</span><span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        NotBefore<span class=\"token punctuation\">:</span> validFrom<span class=\"token punctuation\">,</span>\n        NotAfter<span class=\"token punctuation\">:</span>  validFrom<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>maxAge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        KeyUsage<span class=\"token punctuation\">:</span>              x509<span class=\"token punctuation\">.</span>KeyUsageKeyEncipherment <span class=\"token operator\">|</span> x509<span class=\"token punctuation\">.</span>KeyUsageDigitalSignature <span class=\"token operator\">|</span> x509<span class=\"token punctuation\">.</span>KeyUsageCertSign<span class=\"token punctuation\">,</span>\n        BasicConstraintsValid<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        IsCA<span class=\"token punctuation\">:</span>                  <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>到此位置生成的证书和回环客户端完成，其中回环客户端复制给了<code>controlplane.Config.LoopbackClientConfig</code>,证书给了<code>controlplane.Config.SNICerts</code></li>\n</ul>\n<h4 id=\"使用证书\"><a href=\"#使用证书\" class=\"headerlink\" title=\"使用证书\"></a>使用证书</h4><ul>\n<li>使用证书的地方为</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">staging/src/k8s.io/apiserver/pkg/server/genericapiserver.go<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s preparedGenericAPIServer<span class=\"token punctuation\">)</span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>stopCh <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">...</span>\n    stoppedCh<span class=\"token punctuation\">,</span> listenerStoppedCh<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">NonBlockingRun</span><span class=\"token punctuation\">(</span>stopHttpServerCh<span class=\"token punctuation\">,</span> shutdownTimeout<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s preparedGenericAPIServer<span class=\"token punctuation\">)</span> <span class=\"token function\">NonBlockingRun</span><span class=\"token punctuation\">(</span>stopCh <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> shutdownTimeout time<span class=\"token punctuation\">.</span>Duration<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">...</span>\n    <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>SecureServingInfo <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">.</span>Handler <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> err <span class=\"token builtin\">error</span>\n        stoppedCh<span class=\"token punctuation\">,</span> listenerStoppedCh<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>SecureServingInfo<span class=\"token punctuation\">.</span><span class=\"token function\">Serve</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>Handler<span class=\"token punctuation\">,</span> shutdownTimeout<span class=\"token punctuation\">,</span> internalStopCh<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>internalStopCh<span class=\"token punctuation\">)</span>\n            <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>auditStopCh<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n    s<span class=\"token punctuation\">.</span><span class=\"token function\">RunPostStartHooks</span><span class=\"token punctuation\">(</span>stopCh<span class=\"token punctuation\">)</span> <span class=\"token comment\">//启动之前注册的hook</span>\n    <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> systemd<span class=\"token punctuation\">.</span><span class=\"token function\">SdNotify</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"READY=1\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        klog<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unable to send systemd daemon successful start message: %v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>继续跳转到<code>server()</code></li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>SecureServingInfo<span class=\"token punctuation\">)</span> <span class=\"token function\">Serve</span><span class=\"token punctuation\">(</span>handler http<span class=\"token punctuation\">.</span>Handler<span class=\"token punctuation\">,</span> shutdownTimeout time<span class=\"token punctuation\">.</span>Duration<span class=\"token punctuation\">,</span> stopCh <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    tlsConfig<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">tlsConfig</span><span class=\"token punctuation\">(</span>stopCh<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 这里配置http的证书</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>SecureServingInfo<span class=\"token punctuation\">)</span> <span class=\"token function\">tlsConfig</span><span class=\"token punctuation\">(</span>stopCh <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>tls<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 创建了基本的tls.config</span>\n    tlsConfig <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>tls<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Can't use SSLv3 because of POODLE and BEAST</span>\n        <span class=\"token comment\">// Can't use TLSv1.0 because of POODLE and BEAST using CBC cipher</span>\n        <span class=\"token comment\">// Can't use TLSv1.1 because of RC4 cipher usage</span>\n        MinVersion<span class=\"token punctuation\">:</span> tls<span class=\"token punctuation\">.</span>VersionTLS12<span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// enable HTTP2 for go's 1.7 HTTP Server</span>\n        NextProtos<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"h2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http/1.1\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span> \n    <span class=\"token comment\">// 创建了一个动态证书控制器</span>\n    <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>ClientCA <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">||</span> s<span class=\"token punctuation\">.</span>Cert <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token operator\">||</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>SNICerts<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n        dynamicCertificateController <span class=\"token operator\">:=</span> dynamiccertificates<span class=\"token punctuation\">.</span><span class=\"token function\">NewDynamicServingCertificateController</span><span class=\"token punctuation\">(</span>\n            tlsConfig<span class=\"token punctuation\">,</span>\n            s<span class=\"token punctuation\">.</span>ClientCA<span class=\"token punctuation\">,</span>\n            s<span class=\"token punctuation\">.</span>Cert<span class=\"token punctuation\">,</span>\n            s<span class=\"token punctuation\">.</span>SNICerts<span class=\"token punctuation\">,</span>\n            <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// TODO see how to plumb an event recorder down in here. For now this results in simply klog messages.</span>\n        <span class=\"token punctuation\">)</span>\n<span class=\"token operator\">...</span>\n        <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> sniCert <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> s<span class=\"token punctuation\">.</span>SNICerts <span class=\"token punctuation\">&#123;</span>\n            sniCert<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span>dynamicCertificateController<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> controller<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> sniCert<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>dynamiccertificates<span class=\"token punctuation\">.</span>ControllerRunner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">// runonce to try to prime data.  If this fails, it's ok because we fail closed.</span>\n                    <span class=\"token comment\">// Files are required to be populated already, so this is for convenience.</span>\n                <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> controller<span class=\"token punctuation\">.</span><span class=\"token function\">RunOnce</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//</span>\n                    klog<span class=\"token punctuation\">.</span><span class=\"token function\">Warningf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Initial population of SNI serving certificate failed: %v\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">go</span> controller<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 同步证书</span>\n        \n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n\ntlsConfig<span class=\"token punctuation\">.</span>GetConfigForClient <span class=\"token operator\">=</span> dynamicCertificateController<span class=\"token punctuation\">.</span>GetConfigForClient <span class=\"token comment\">// 设置了这个参数之后，接受到https请求之后会调用这个</span>\n<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"使用客户端\"><a href=\"#使用客户端\" class=\"headerlink\" title=\"使用客户端\"></a>使用客户端</h4><ul>\n<li>回环证书在很多地方回到<code>CreateServerChain</code>这里</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// 这里已经有调用了</span>\n    apiExtensionsConfig<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">createAPIExtensionsConfig</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>kubeAPIServerConfig<span class=\"token punctuation\">.</span>GenericConfig<span class=\"token punctuation\">,</span> kubeAPIServerConfig<span class=\"token punctuation\">.</span>ExtraConfig<span class=\"token punctuation\">.</span>VersionedInformers<span class=\"token punctuation\">,</span> pluginInitializer<span class=\"token punctuation\">,</span> completedOptions<span class=\"token punctuation\">.</span>ServerRunOptions<span class=\"token punctuation\">,</span> completedOptions<span class=\"token punctuation\">.</span>MasterCount<span class=\"token punctuation\">,</span>\n        serviceResolver<span class=\"token punctuation\">,</span> webhook<span class=\"token punctuation\">.</span><span class=\"token function\">NewDefaultAuthenticationInfoResolverWrapper</span><span class=\"token punctuation\">(</span>kubeAPIServerConfig<span class=\"token punctuation\">.</span>ExtraConfig<span class=\"token punctuation\">.</span>ProxyTransport<span class=\"token punctuation\">,</span> kubeAPIServerConfig<span class=\"token punctuation\">.</span>GenericConfig<span class=\"token punctuation\">.</span>EgressSelector<span class=\"token punctuation\">,</span> kubeAPIServerConfig<span class=\"token punctuation\">.</span>GenericConfig<span class=\"token punctuation\">.</span>LoopbackClientConfig<span class=\"token punctuation\">,</span> kubeAPIServerConfig<span class=\"token punctuation\">.</span>GenericConfig<span class=\"token punctuation\">.</span>TracerProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// TODO</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token operator\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>最多为hook使用，在http服务启动之后前面注册的hook就开始执行其中传入了回环证书</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// RunPostStartHooks runs the PostStartHooks for the server</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>GenericAPIServer<span class=\"token punctuation\">)</span> <span class=\"token function\">RunPostStartHooks</span><span class=\"token punctuation\">(</span>stopCh <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    s<span class=\"token punctuation\">.</span>postStartHookLock<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">defer</span> s<span class=\"token punctuation\">.</span>postStartHookLock<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    s<span class=\"token punctuation\">.</span>postStartHooksCalled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n    context <span class=\"token operator\">:=</span> PostStartHookContext<span class=\"token punctuation\">&#123;</span>\n        LoopbackClientConfig<span class=\"token punctuation\">:</span> s<span class=\"token punctuation\">.</span>LoopbackClientConfig<span class=\"token punctuation\">,</span> <span class=\"token comment\">//使用了回环</span>\n        StopCh<span class=\"token punctuation\">:</span>               stopCh<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">for</span> hookName<span class=\"token punctuation\">,</span> hookEntry <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> s<span class=\"token punctuation\">.</span>postStartHooks <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 将前面注册的hook全部启动</span>\n        <span class=\"token keyword\">go</span> <span class=\"token function\">runPostStartHook</span><span class=\"token punctuation\">(</span>hookName<span class=\"token punctuation\">,</span> hookEntry<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><ul>\n<li><p>一个服务多个证书，其实就是通过<code>tsl.Config.GetConfigForClient</code>来实现</p>\n</li>\n<li><p>为什么要loopback,从代码来看apiserve本身也需要请求一个资源，比如校验参数的正确性,如果不请求自己就需要从新写一套从etcd获取的逻辑，这样就逻辑重复了</p>\n</li>\n<li><p>除了一些零散的调用主要是通过AddPostStartHookOrDie注册的hook在启动后调用</p>\n</li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg2NTU3NjgxOA==&amp;action=getalbum&amp;album_id=2958341226519298049&amp;scene=173&amp;from_msgid=2247488299&amp;from_itemidx=1&amp;count=3&amp;nolastread=1#wechat_redirect\">https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg2NTU3NjgxOA==&amp;action=getalbum&amp;album_id=2958341226519298049&amp;scene=173&amp;from_msgid=2247488299&amp;from_itemidx=1&amp;count=3&amp;nolastread=1#wechat_redirect</a></p>\n<p><a href=\"https://github.com/kubernetes/kubernetes/issues/86552\">https://github.com/kubernetes/kubernetes/issues/86552</a></p>\n","tags":["k8s"]},{"title":"ip命令基本使用","url":"/2021/05/02/ip%E5%91%BD%E4%BB%A4%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","content":"<p>ip 命令是linux中常用的网络配置命令</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>ip命令是iproute2包中的命令</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><blockquote>\n<p>一般发行版再带ip命令</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># macos</span>\nbrew <span class=\"token function\">install</span> iproute2mac\n\n<span class=\"token comment\"># ubuntu</span>\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> iproute2\n\n<span class=\"token comment\"># centos</span>\nyum <span class=\"token function\">install</span> iproute2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"设备-device\"><a href=\"#设备-device\" class=\"headerlink\" title=\"设备(device)\"></a>设备(device)</h4><blockquote>\n<p>主要是配置OSI模型中的第二层数据链路层</p>\n</blockquote>\n<h5 id=\"查看设备\"><a href=\"#查看设备\" class=\"headerlink\" title=\"查看设备\"></a>查看设备</h5><pre class=\"line-numbers language-sehll\" data-language=\"sehll\"><code class=\"language-sehll\"># 显示所有\nip link show\n\n详细显示\nip -s link show<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"操作设备\"><a href=\"#操作设备\" class=\"headerlink\" title=\"操作设备\"></a>操作设备</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 开启网卡</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 up\n\n<span class=\"token comment\"># 关闭网卡</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 down\n\n<span class=\"token comment\"># 开启网卡的混合模式</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 promisc on\n\n<span class=\"token comment\"># 关闭网卡的混个模式</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 promisc offi\n\n<span class=\"token comment\"># 设置网卡队列长度</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 txqueuelen <span class=\"token number\">1200</span>\n\n<span class=\"token comment\"># 设置网卡最大传输单元</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 mtu <span class=\"token number\">1400</span>\n\n<span class=\"token comment\"># 修改名字</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 name eth0\n\n<span class=\"token comment\"># 修改网卡的MAC地址</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 address aa:aa:aa:aa:aa:aa\n\n<span class=\"token comment\"># 将 ens33 连接到vbr0网桥</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 master vbr0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"IP相关配置\"><a href=\"#IP相关配置\" class=\"headerlink\" title=\"IP相关配置\"></a>IP相关配置</h4><h5 id=\"查看IP\"><a href=\"#查看IP\" class=\"headerlink\" title=\"查看IP\"></a>查看IP</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 显示所有IP地址</span>\n<span class=\"token function\">ip</span> address\n<span class=\"token comment\"># 简写</span>\n<span class=\"token function\">ip</span> addr \n\n<span class=\"token comment\"># 显示指定网卡的IP</span>\n<span class=\"token function\">ip</span> addr ens\n\n<span class=\"token comment\"># 详细显示指定网卡的IP</span>\n<span class=\"token function\">ip</span> <span class=\"token parameter variable\">-s</span> addr ens33\n\n<span class=\"token number\">2</span>: ens33: <span class=\"token operator\">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class=\"token operator\">></span> mtu <span class=\"token number\">1500</span> qdisc fq_codel state UP group default qlen <span class=\"token number\">1000</span>\n    link/ether 00:0c:29:d9:89:c8 brd ff:ff:ff:ff:ff:ff\n    inet <span class=\"token number\">192.168</span>.32.132/24 brd <span class=\"token number\">192.168</span>.32.255 scope global noprefixroute ens33\n       valid_lft forever preferred_lft forever\n    inet6 fe80::20c:29ff:fed9:89c8/64 scope <span class=\"token function\">link</span>\n       valid_lft forever preferred_lft forever<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>broadcast：设定广播位址，如果设定值是 + 表示让系统自动计算；</li>\n<li>label：该设备的别名，例如eth0:0；</li>\n<li>scope：这个设备的领域，默认global，通常是以下几个大类：</li>\n<li>global：允许来自所有来源的连线；<ul>\n<li>site：仅支持IPv6 ，仅允许本主机的连接；</li>\n<li>link：仅允许本设备自我连接；</li>\n<li>host：仅允许本主机内部的连接；</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"增加IP\"><a href=\"#增加IP\" class=\"headerlink\" title=\"增加IP\"></a>增加IP</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 设置ens33网卡IP地址192.168.1.1</span>\n<span class=\"token function\">ip</span> addr <span class=\"token function\">add</span> <span class=\"token number\">192.168</span>.1.1/24 dev ens33 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除IP\"><a href=\"#删除IP\" class=\"headerlink\" title=\"删除IP\"></a>删除IP</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"> <span class=\"token comment\"># 删除ens33网卡IP地址</span>\n<span class=\"token function\">ip</span> addr del <span class=\"token number\">192.168</span>.1.1/24 dev ens33<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"路由相关配置\"><a href=\"#路由相关配置\" class=\"headerlink\" title=\"路由相关配置\"></a>路由相关配置</h4><h5 id=\"查看路由\"><a href=\"#查看路由\" class=\"headerlink\" title=\"查看路由\"></a>查看路由</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 显示系统路由</span>\n<span class=\"token function\">ip</span> route show\n\n<span class=\"token comment\"># 简写</span>\n<span class=\"token function\">ip</span> r\n\ndefault via <span class=\"token number\">192.168</span>.32.2 dev ens33 proto static metric <span class=\"token number\">100</span>                      \n<span class=\"token number\">169.254</span>.0.0/16 dev ens33 scope <span class=\"token function\">link</span> metric <span class=\"token number\">1000</span>                                 \n<span class=\"token number\">172.16</span>.1.0/24 dev docker0 proto kernel scope <span class=\"token function\">link</span> src <span class=\"token number\">172.16</span>.1.1                \n<span class=\"token number\">192.168</span>.32.0/24 dev ens33 proto kernel scope <span class=\"token function\">link</span> src <span class=\"token number\">192.168</span>.32.132 metric <span class=\"token number\">100</span> \n<span class=\"token number\">192.168</span>.49.0/24 dev br-e6a94a27c143 proto kernel scope <span class=\"token function\">link</span> src <span class=\"token number\">192.168</span>.49.1    \n<span class=\"token number\">192.168</span>.122.0/24 dev virbr0 proto kernel scope <span class=\"token function\">link</span> src <span class=\"token number\">192.168</span>.122.1 linkdown  \n\n<span class=\"token comment\"># 显示vip这个路由表的路由</span>\n<span class=\"token function\">ip</span> route show table vip\n\n<span class=\"token comment\"># 查看某个地址走那条路由</span>\n<span class=\"token function\">ip</span> route get <span class=\"token number\">114.114</span>.114.114<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>proto：此路由的路由协定，主要有redirect,kernel,boot,static,ra等，其中kernel是直接由核心判断自动设定。</li>\n<li>scope：路由的范围，主要是link，是与本设备有关的直接连接。</li>\n</ul>\n<h5 id=\"增加-修改路由\"><a href=\"#增加-修改路由\" class=\"headerlink\" title=\"增加&#x2F;修改路由\"></a>增加&#x2F;修改路由</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 设置192.168.1.0网段的网关为192.168.1.1数据走eth0接口</span>\n<span class=\"token function\">ip</span> route <span class=\"token function\">add</span> <span class=\"token number\">192.168</span>.1.0/24 via <span class=\"token number\">192.168</span>.1.1 dev eth0\n\n<span class=\"token comment\"># 设置默认网关为192.168.1.1</span>\n<span class=\"token function\">ip</span> route <span class=\"token function\">add</span> default via <span class=\"token number\">192.168</span>.1.1 dev eth0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除路由\"><a href=\"#删除路由\" class=\"headerlink\" title=\"删除路由\"></a>删除路由</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 删除192.168.1.0网段的网关</span>\n<span class=\"token function\">ip</span> route del <span class=\"token number\">192.168</span>.1.0/24\n\n<span class=\"token comment\"># 删除默认路由</span>\n<span class=\"token function\">ip</span> route del default\n\n<span class=\"token comment\"># 删除路由</span>\n<span class=\"token function\">ip</span> route delete <span class=\"token number\">192.168</span>.1.0/24 dev eth0 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"网络命名空间\"><a href=\"#网络命名空间\" class=\"headerlink\" title=\"网络命名空间\"></a>网络命名空间</h4><h5 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> netns\n<span class=\"token function\">ip</span> netns show<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"增加\"><a href=\"#增加\" class=\"headerlink\" title=\"增加\"></a>增加</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 增加一个叫test的网络命名空间</span>\n<span class=\"token function\">ip</span> netns <span class=\"token function\">add</span> <span class=\"token builtin class-name\">test</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 删除一个叫test的网络命名空间</span>\n<span class=\"token function\">ip</span> netns del <span class=\"token builtin class-name\">test</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 在 test ns 下执行ip addr</span>\n<span class=\"token function\">ip</span> netns <span class=\"token builtin class-name\">exec</span> <span class=\"token builtin class-name\">test</span> <span class=\"token function\">ip</span> addr<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://wangchujiang.com/linux-command/c/ip.html\">https://wangchujiang.com/linux-command/c/ip.html</a><br><a href=\"https://www.jianshu.com/p/7466862382c4\">https://www.jianshu.com/p/7466862382c4</a></p>\n","tags":["网络"]},{"title":"juicefs基本使用","url":"/2024/05/05/juicefs%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","content":"<p>juicefs高性能分布式文件系统，能将s3，webdav等协议挂到文件系统中和其他接口，采用换数据和数据分离设计</p>\n<span id=\"more\"></span>\n\n<p><img src=\"/../images/juicefs%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8-1.svg\" alt=\"alt text\"></p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li><p>juicefs需要fuse，没有安装需要安装</p>\n</li>\n<li><p>默认安装到 &#x2F;usr&#x2F;local&#x2F;bin</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sSL</span> https://d.juicefs.com/install <span class=\"token operator\">|</span> <span class=\"token function\">sh</span> -<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h4><h5 id=\"创建文件系统\"><a href=\"#创建文件系统\" class=\"headerlink\" title=\"创建文件系统\"></a>创建文件系统</h5><ul>\n<li>使用sqlite3作为元数据存储,名字叫dlfs</li>\n<li>后端使用文件系统，目录为<code>$HOME/.juicefs/local</code>，这也是默认的参数</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs <span class=\"token function\">format</span> <span class=\"token parameter variable\">--storage</span> <span class=\"token function\">file</span> <span class=\"token parameter variable\">--bucket</span> <span class=\"token environment constant\">$HOME</span>/.juicefs/local sqlite3://dlfs.db dlfs\n<span class=\"token comment\"># 等效</span>\njuicefs <span class=\"token function\">format</span> sqlite3://dlfs.db dlfs\n<span class=\"token comment\"># 2024/05/05 00:11:26.689029 juicefs[41492] &lt;INFO>: Meta address: sqlite3://dlfs.db [interface.go:497]</span>\n<span class=\"token comment\"># 2024/05/05 00:11:26.690663 juicefs[41492] &lt;INFO>: Data use file:///home/debian/.juicefs/local/dlfs/ [format.go:471]</span>\n<span class=\"token comment\"># 2024/05/05 00:11:27.808629 juicefs[41492] &lt;INFO>: Volume is formatted as &#123;</span>\n<span class=\"token comment\">#   \"Name\": \"dlfs\",</span>\n<span class=\"token comment\">#   \"UUID\": \"7df826c4-9850-4591-99cd-1b58261a21c4\",</span>\n<span class=\"token comment\">#   \"Storage\": \"file\",</span>\n<span class=\"token comment\">#   \"Bucket\": \"/home/debian/.juicefs/local/\",</span>\n<span class=\"token comment\">#   \"BlockSize\": 4096,</span>\n<span class=\"token comment\">#   \"Compression\": \"none\",</span>\n<span class=\"token comment\">#   \"EncryptAlgo\": \"aes256gcm-rsa\",</span>\n<span class=\"token comment\">#   \"TrashDays\": 1,</span>\n<span class=\"token comment\">#   \"MetaVersion\": 1,</span>\n<span class=\"token comment\">#   \"MinClientVersion\": \"1.1.0-A\",</span>\n<span class=\"token comment\">#   \"DirStats\": true</span>\n<span class=\"token comment\"># &#125; [format.go:508]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"挂载一个卷\"><a href=\"#挂载一个卷\" class=\"headerlink\" title=\"挂载一个卷\"></a>挂载一个卷</h5><ul>\n<li>挂载到当前目录下的jfs,默认是前台的</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs <span class=\"token function\">mount</span> sqlite3://dlfs.db ./jfs\n<span class=\"token comment\"># 2024/05/05 00:15:55.623202 juicefs[41499] &lt;INFO>: Meta address: sqlite3://dlfs.db [interface.go:497]</span>\n<span class=\"token comment\"># 2024/05/05 00:15:55.632156 juicefs[41499] &lt;INFO>: Data use file:///home/debian/.juicefs/local/dlfs/ [mount.go:605]</span>\n<span class=\"token comment\"># 2024/05/05 00:15:55.632923 juicefs[41499] &lt;INFO>: Disk cache (/home/debian/.juicefs/cache/7df826c4-9850-4591-99cd-1b58261a21c4/): capacity (102400 MB), free ratio (10%), max pending pages (15) [disk_cache.go:114]</span>\n<span class=\"token comment\"># 2024/05/05 00:15:55.887736 juicefs[41499] &lt;INFO>: Create session 1 OK with version: 1.1.2+2024-02-04.8dbd89a [base.go:494]</span>\n<span class=\"token comment\"># 2024/05/05 00:15:55.890264 juicefs[41499] &lt;INFO>: Prometheus metrics listening on 127.0.0.1:9567 [mount.go:160]</span>\n<span class=\"token comment\"># 2024/05/05 00:15:55.891592 juicefs[41499] &lt;INFO>: Mounting volume dlfs at ./jfs ... [mount_unix.go:269]</span>\n<span class=\"token comment\"># 2024/05/05 00:15:55.893449 juicefs[41499] &lt;WARNING>: setpriority: permission denied [fuse.go:431]</span>\n<span class=\"token comment\"># 2024/05/05 00:15:56.149422 juicefs[41499] &lt;INFO>: OK, dlfs is ready at ./jfs [mount_unix.go:48]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>-d参数则为后台</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs <span class=\"token function\">mount</span> <span class=\"token parameter variable\">-d</span> sqlite3://dlfs.db ./jfs\n<span class=\"token comment\"># 2024/05/05 00:17:01.165052 juicefs[41512] &lt;INFO>: Meta address: sqlite3://dlfs.db [interface.go:497]</span>\n<span class=\"token comment\"># 2024/05/05 00:17:01.167909 juicefs[41512] &lt;INFO>: Data use file:///home/debian/.juicefs/local/dlfs/ [mount.go:605]</span>\n<span class=\"token comment\"># 2024/05/05 00:17:01.168481 juicefs[41512] &lt;INFO>: Disk cache (/home/debian/.juicefs/cache/7df826c4-9850-4591-99cd-1b58261a21c4/): capacity (102400 MB), free ratio (10%), max pending pages (15) [disk_cache.go:114]</span>\n<span class=\"token comment\"># 2024/05/05 00:17:01.670775 juicefs[41512] &lt;INFO>: OK, dlfs is ready at ./jfs [mount_unix.go:48]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>开机自动挂载 –update-fstab</li>\n</ul>\n<h5 id=\"卸载挂载点\"><a href=\"#卸载挂载点\" class=\"headerlink\" title=\"卸载挂载点\"></a>卸载挂载点</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs <span class=\"token function\">umount</span> ./jfs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>实时统计</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs profile ./jfs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看状态</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs status sqlite3://dlfs.db ./jfs/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看信息</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs info ./jfs/\n<span class=\"token comment\"># ./jfs/ :</span>\n<span class=\"token comment\">#   inode: 1</span>\n<span class=\"token comment\">#   files: 1</span>\n<span class=\"token comment\">#    dirs: 1</span>\n<span class=\"token comment\">#  length: 0 Bytes</span>\n<span class=\"token comment\">#    size: 8.00 KiB (8192 Bytes)</span>\n<span class=\"token comment\">#    path: /</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>调试模式</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs debug ./jfs/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs summary ./jfs/\n<span class=\"token comment\"># ./jfs/: 2                      257.0/s</span>\n<span class=\"token comment\"># ./jfs/: 8.0 KiB (8192 Bytes)   1.5 MiB/s</span>\n<span class=\"token comment\"># +------+---------+------+-------+</span>\n<span class=\"token comment\"># | PATH |   SIZE  | DIRS | FILES |</span>\n<span class=\"token comment\"># +------+---------+------+-------+</span>\n<span class=\"token comment\"># | /    | 8.0 KiB |    1 |     1 |</span>\n<span class=\"token comment\"># | xxxx | 4.0 KiB |    0 |     1 |</span>\n<span class=\"token comment\"># +------+---------+------+-------+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>性能测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs bench ./jfs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"使用webdav和mysql\"><a href=\"#使用webdav和mysql\" class=\"headerlink\" title=\"使用webdav和mysql\"></a>使用webdav和mysql</h4><ul>\n<li>创建一个文件系统，元数据选择mysql存储选择webdav</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs <span class=\"token function\">format</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token parameter variable\">--storage</span> webdav <span class=\"token punctuation\">\\</span>\n<span class=\"token parameter variable\">--bucket</span> http://home.naturelr.cc:6089/dav/nas/zxz <span class=\"token punctuation\">\\</span>\n--access-key <span class=\"token operator\">&lt;</span>webdav账号<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span>\n--secret-key <span class=\"token operator\">&lt;</span>webdav密码<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span> \nmysql://<span class=\"token operator\">&lt;</span>mysql账号<span class=\"token operator\">></span>:<span class=\"token operator\">&lt;</span>mysql密码<span class=\"token operator\">></span>@<span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>mysql地址<span class=\"token operator\">></span>:3306<span class=\"token punctuation\">)</span>/<span class=\"token operator\">&lt;</span>mysql数据库<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span>\njuicefs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>挂载目录</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">juicefs <span class=\"token function\">mount</span> <span class=\"token string\">\"mysql://&lt;mysql账号>:&lt;mysql密码>@(&lt;mysql地址>:3306)/juicefs\"</span> <span class=\"token operator\">&lt;</span>挂载路径<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://mp.weixin.qq.com/s/Uar9hlaLdlAL6IIhMWNotw\">https://mp.weixin.qq.com/s/Uar9hlaLdlAL6IIhMWNotw</a><br><a href=\"https://juicefs.com/docs/zh/community/introduction/\">https://juicefs.com/docs/zh/community/introduction/</a></p>\n","tags":["存储"]},{"title":"k8s-service网络","url":"/2022/12/14/k8s-service%E7%BD%91%E7%BB%9C/","content":"<p>k8s service是对一组pod进行抽象的方法</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>pod并不是永久的随时可以销毁的，那么他ip也会变的，这样的话就需要一种方法来作为pod的”前端“来转发到pod上去</p>\n</blockquote>\n<h4 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h4><p>service的ip是虚拟的他的具体实现程序是<code>kube-proxy</code></p>\n<p><img src=\"/../images/kube-svc-1.png\" alt=\"svc\"></p>\n<p>如图，流量被service给负载到后端当中，对于用户来说只要访问service即可</p>\n<p>kub-proxy有目前主要有四种</p>\n<ul>\n<li>用户空间: 早期的方案，所有策略都在用户空间效率比较差</li>\n<li>iptables: iptables在内核空间，主要通过nat实现，由于iptables是一个一个匹配所有规则多时效果延迟比较大</li>\n<li>ipvs: 和iptables类似只不过使用了ipvs</li>\n<li>ebpf: 最新的技术速度快效率高，但对内核版本要求比较高</li>\n</ul>\n<p>目前主流使用iptables和ipvs，所以主要说iptables和ipvs</p>\n<p><img src=\"/../images/kube-svc-1.png\" alt=\"svc\"></p>\n<h5 id=\"kube-proxy\"><a href=\"#kube-proxy\" class=\"headerlink\" title=\"kube-proxy\"></a>kube-proxy</h5><h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> foo\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 选择需要负载到pod</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> foo\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span> <span class=\"token comment\"># 服务的端口</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span> <span class=\"token comment\"># pod的端口</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP <span class=\"token comment\"># 类型，默认ClusterIP</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>将上面的保存为foo.yaml然后执行<code>kubectl apply -f foo.yaml</code>即可创建一个svc</p>\n<h4 id=\"类型\"><a href=\"#类型\" class=\"headerlink\" title=\"类型\"></a>类型</h4><p>k8s的服务类型拥有很多种，根据实际情况选择</p>\n<h5 id=\"ClusterIP\"><a href=\"#ClusterIP\" class=\"headerlink\" title=\"ClusterIP\"></a>ClusterIP</h5><p>默认的类型,创建一个虚拟的ip并将选择器选择的pod的ip作为这个虚拟ip的后端</p>\n<h5 id=\"NodePort\"><a href=\"#NodePort\" class=\"headerlink\" title=\"NodePort\"></a>NodePort</h5><p>和ClusterIP基本一致，但是会将端口映射到所有集群中所有的节点上,端口范围默认是3000以上</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> foo\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">externalTrafficPolicy</span><span class=\"token punctuation\">:</span> Cluster\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> foo\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"Headless\"><a href=\"#Headless\" class=\"headerlink\" title=\"Headless\"></a>Headless</h5><p>和ClusterIP基本一致，只是没有虚拟ip同时失去了lb的功能,<code>kube-proxy</code>不会处理此svc且dns返回对应ep的所有地址，常用于<code>服务发现</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> foo\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span> \n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> foo\n  <span class=\"token key atrule\">clusterIP</span><span class=\"token punctuation\">:</span> None <span class=\"token comment\"># 指定为none</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span> \n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span> \n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"LoadBalancer\"><a href=\"#LoadBalancer\" class=\"headerlink\" title=\"LoadBalancer\"></a>LoadBalancer</h5><p>这个类型一般只有云服务商只能使用，创建这个服务的同时在云服务商的lb服务商上创建了一个实例</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> foo<span class=\"token punctuation\">-</span>loadbalancer\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">externalTrafficPolicy</span><span class=\"token punctuation\">:</span> Cluster\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n    <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">800</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> foo\n  <span class=\"token key atrule\">sessionAffinity</span><span class=\"token punctuation\">:</span> None\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> LoadBalancer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"ExternalName\"><a href=\"#ExternalName\" class=\"headerlink\" title=\"ExternalName\"></a>ExternalName</h5><p>外部的服务对内部的一个别名，比如web的域名是10.23.83.9.sslip.io，则在集群中可以使用web来访问10.23.83.9.sslip.io,</p>\n<p>没有选择器,kube-proxy不会创建规则,仅在dns层面完成</p>\n<p>externalName为dns地址如果是ip的话dns无法解析,而且如果是http(s)将可能无法访问，因为你访问的是<code>a</code>,而对应的服务只接受<code>b</code>域名</p>\n<p>解决方法使用类似&lt;sslip.io&gt;这种域名来通过域名动态解析到ip上</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> web\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">externalName</span><span class=\"token punctuation\">:</span> 10.23.83.9.sslip.io\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> tcp\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n  <span class=\"token key atrule\">sessionAffinity</span><span class=\"token punctuation\">:</span> None\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ExternalName<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"外部IP\"><a href=\"#外部IP\" class=\"headerlink\" title=\"外部IP\"></a>外部IP</h5><p>可以将一个外部地址导入到集群内部对应的服务里,在本地请求</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>service\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> cdebug\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n  <span class=\"token key atrule\">externalIPs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> 1.1.1.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>使用效果如下</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@10-23-141-183 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get svc my-service</span>\nNAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>   AGE\nmy-service   ClusterIP   <span class=\"token number\">172.17</span>.4.228   <span class=\"token number\">1.1</span>.1.1       <span class=\"token number\">80</span>/TCP    19h\n<span class=\"token punctuation\">[</span>root@10-23-141-183 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl 1.1.1.1</span>\nClientAddr: <span class=\"token number\">10.23</span>.141.183:52416\nClientReqPath: /\nClientReqMeth: GET\nServerHostName: cdebug-77cc4fc98f-rv9hn\nServerAddr: <span class=\"token number\">10.23</span>.8.140\n<span class=\"token punctuation\">[</span>root@10-23-141-183 ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#                                                                                 </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"指定后端Endpoints\"><a href=\"#指定后端Endpoints\" class=\"headerlink\" title=\"指定后端Endpoints\"></a>指定后端Endpoints</h5><ul>\n<li>可以手动创建可以svc同名的ep来指定一个svc的对应的ep</li>\n</ul>\n<h4 id=\"流量策略\"><a href=\"#流量策略\" class=\"headerlink\" title=\"流量策略\"></a>流量策略</h4><p>流量策略主要解决在拥有众多ep的服务在转发流量时有些pod距离访问的node比较远导致延迟增大</p>\n<p>目前拥有2种策略，<code>cluster</code>和<code>local</code></p>\n<ul>\n<li><p>cluster(默认):会将流量转发到所有节点的pod当中,但有可能pod在其他节点或者其他地域上会导致延迟</p>\n</li>\n<li><p>local: 只会将流量转发本地的pod上，不会转发到其他node上的pod,拥有较好的性能</p>\n</li>\n</ul>\n<p><img src=\"/../images/kube-svc-3.png\" alt=\"kube-svc\"></p>\n<h5 id=\"internalTrafficPolicy\"><a href=\"#internalTrafficPolicy\" class=\"headerlink\" title=\"internalTrafficPolicy\"></a>internalTrafficPolicy</h5><ul>\n<li>主要针对pod访问svc的策略</li>\n</ul>\n<h5 id=\"externalTrafficPolicy\"><a href=\"#externalTrafficPolicy\" class=\"headerlink\" title=\"externalTrafficPolicy\"></a>externalTrafficPolicy</h5><ul>\n<li>针对外面通过node port访问集群的svc</li>\n</ul>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><h5 id=\"iptables\"><a href=\"#iptables\" class=\"headerlink\" title=\"iptables\"></a>iptables</h5><h5 id=\"规则分析\"><a href=\"#规则分析\" class=\"headerlink\" title=\"规则分析\"></a>规则分析</h5><h6 id=\"PREROUTING\"><a href=\"#PREROUTING\" class=\"headerlink\" title=\"PREROUTING\"></a>PREROUTING</h6><ul>\n<li><code>PREROUTING</code>链的nat表是所有svc的入口,进入的流量都会到<code>KUBE-SERVICES</code>这条自定义链</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL PREROUTING -t nat</span>\nChain PREROUTING <span class=\"token punctuation\">(</span>policy ACCEPT <span class=\"token number\">1</span> packets, <span class=\"token number\">60</span> bytes<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n   <span class=\"token number\">57</span>  <span class=\"token number\">3492</span> KUBE-SERVICES  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* kubernetes <span class=\"token function\">service</span> portals */\n    <span class=\"token number\">2</span>   <span class=\"token number\">192</span> DOCKER_OUTPUT  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">192.168</span>.65.2        \n   <span class=\"token number\">57</span>  <span class=\"token number\">3420</span> DOCKER     all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            ADDRTYPE match dst-type LOCAL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在<code>KUBE-SERVICES</code>中就是我们定义的svc对应的规则,来源地址是任何目标地址是<code>clusterIP</code>时,匹配对应svc的自定义链</li>\n<li>其中<code>KUBE-NODEPORTS</code>是处理nodePort类型的规则</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL KUBE-SERVICES -t nat </span>\nChain KUBE-SERVICES <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-SVC-NPX46M4PTMTKRN6Y  tcp  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">10.96</span>.0.1            /* default/kubernetes:https cluster IP */ tcp dpt:443\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-SVC-JD5MR3NA4I4DYORP  tcp  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">10.96</span>.0.10           /* kube-system/kube-dns:metrics cluster IP */ tcp dpt:9153\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-SVC-TCOU7JCQXEZGVUNU  udp  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">10.96</span>.0.10           /* kube-system/kube-dns:dns cluster IP */ udp dpt:53\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-SVC-ERIFXISQEP7F7OF4  tcp  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">10.96</span>.0.10           /* kube-system/kube-dns:dns-tcp cluster IP */ tcp dpt:53\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-SVC-ZZYI5KMAZUYAMTQ6  tcp  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">10.98</span>.178.225        /* default/cdebug cluster IP */ tcp dpt:80\n <span class=\"token number\">1043</span> <span class=\"token number\">62580</span> KUBE-NODEPORTS  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* kubernetes <span class=\"token function\">service</span> nodeports<span class=\"token punctuation\">;</span> NOTE: this must be the last rule <span class=\"token keyword\">in</span> this chain */ ADDRTYPE match dst-type LOCAL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在<code>KUBE-SVC-ZZYI5KMAZUYAMTQ6</code>这条自定义链中定义了具体的nat地址,当原地址不是10.244.0.0&#x2F;16目标是clusterIP时会进入一个打标签的自定义链</li>\n<li>下面2条是每一条分别对应<code>svc</code>的<code>ep</code>,进入第一条的几率是50%通过<code>random</code>,实现了负载均衡</li>\n<li>10.244.0.0&#x2F;16是<code>kube-proxy</code>的<code>clusterCIDR</code>设置,作用是区别流量是否是pod的流量以用来直接访问svc参考<a href=\"https://blog.csdn.net/shida_csdn/article/details/104334372\">https://blog.csdn.net/shida_csdn/article/details/104334372</a></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL KUBE-SVC-ZZYI5KMAZUYAMTQ6 -t nat</span>\nChain KUBE-SVC-ZZYI5KMAZUYAMTQ6 <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-MARK-MASQ  tcp  --  *      *      <span class=\"token operator\">!</span><span class=\"token number\">10.244</span>.0.0/16        <span class=\"token number\">10.98</span>.178.225        /* default/cdebug cluster IP */ tcp dpt:80\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-SEP-36ZFR6ZLFG6NGI5P  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* default/cdebug -<span class=\"token operator\">></span> <span class=\"token number\">172.17</span>.0.4:80 */ statistic mode random probability <span class=\"token number\">0.50000000000</span>\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-SEP-4E32UMZN7V2DQATS  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* default/cdebug -<span class=\"token operator\">></span> <span class=\"token number\">172.17</span>.0.5:80 */<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在<code>KUBE-MARK-MASQ</code>是个标记的链他会将流量打上<code>0x4000</code>标签,该流量将在<code>PODTROUTNG</code>链中的<code>KUBE-POSTROUTING</code>被执行snat</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL KUBE-MARK-MASQ -t nat</span>\nChain KUBE-MARK-MASQ <span class=\"token punctuation\">(</span><span class=\"token number\">8</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> MARK       all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            MARK or 0x4000<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这里对来源是<code>172.17.0.4(ep)</code>的进行打标签，同时进行了DNAT到了ep</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL KUBE-SEP-36ZFR6ZLFG6NGI5P -t nat</span>\nChain KUBE-SEP-36ZFR6ZLFG6NGI5P <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-MARK-MASQ  all  --  *      *       <span class=\"token number\">172.17</span>.0.4           <span class=\"token number\">0.0</span>.0.0/0            /* default/cdebug */\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> DNAT       tcp  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* default/cdebug */ tcp to:172.17.0.4:80<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>KUBE-NODEPORTS</code>下是存放nodePort的规则,打标签之后进入了svc</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL KUBE-NODEPORTS -t nat</span>\nChain KUBE-NODEPORTS <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-EXT-ZZYI5KMAZUYAMTQ6  tcp  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* default/cdebug */ tcp dpt:32753<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>具体内容和<code>KUBE-SERVICES</code>里一样的规则复用了每个svc创建的链</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL KUBE-EXT-ZZYI5KMAZUYAMTQ6  -t nat</span>\nChain KUBE-EXT-ZZYI5KMAZUYAMTQ6 <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n    <span class=\"token number\">2</span>   <span class=\"token number\">120</span> KUBE-MARK-MASQ  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* masquerade traffic <span class=\"token keyword\">for</span> default/cdebug external destinations */\n    <span class=\"token number\">2</span>   <span class=\"token number\">120</span> KUBE-SVC-ZZYI5KMAZUYAMTQ6  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0           <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"INPUT\"><a href=\"#INPUT\" class=\"headerlink\" title=\"INPUT\"></a>INPUT</h6><ul>\n<li>这里主要实现了一些防火墙规则</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL INPUT -t filter</span>\nChain INPUT <span class=\"token punctuation\">(</span>policy ACCEPT 279K packets, 37M bytes<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n 647K   39M KUBE-PROXY-FIREWALL  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            ctstate NEW /* kubernetes load balancer firewall */\n  75M   10G KUBE-NODEPORTS  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* kubernetes health check <span class=\"token function\">service</span> ports */\n 647K   39M KUBE-EXTERNAL-SERVICES  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            ctstate NEW /* kubernetes externally-visible <span class=\"token function\">service</span> portals */\n  75M   10G KUBE-FIREWALL  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL  KUBE-PROXY-FIREWALL -t filter </span>\nChain KUBE-PROXY-FIREWALL <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL  KUBE-NODEPORTS -t filter</span>\nChain KUBE-NODEPORTS <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL  KUBE-EXTERNAL-SERVICES -t filter</span>\nChain KUBE-EXTERNAL-SERVICES <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这个将丢弃标签为<code>0x8000</code>的流量还有源头不是<code>127.0.0.0/8</code>目标是<code>127.0.0.0/8</code>状态是RELATED,ESTABLISHED,DNAT的流量</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL KUBE-FIREWALL -t filter</span>\nChain KUBE-FIREWALL <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> DROP       all  --  *      *      <span class=\"token operator\">!</span><span class=\"token number\">127.0</span>.0.0/8          <span class=\"token number\">127.0</span>.0.0/8          /* block incoming localnet connections */ <span class=\"token operator\">!</span> ctstate RELATED,ESTABLISHED,DNAT\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> DROP       all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* kubernetes firewall <span class=\"token keyword\">for</span> dropping marked packets */ mark match 0x8000/0x8000<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"FORWARD\"><a href=\"#FORWARD\" class=\"headerlink\" title=\"FORWARD\"></a>FORWARD</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL FORWARD -t filter</span>\nChain FORWARD <span class=\"token punctuation\">(</span>policy ACCEPT <span class=\"token number\">0</span> packets, <span class=\"token number\">0</span> bytes<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-PROXY-FIREWALL  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            ctstate NEW /* kubernetes load balancer firewall */\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-FORWARD  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* kubernetes forwarding rules */\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-SERVICES  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            ctstate NEW /* kubernetes <span class=\"token function\">service</span> portals */\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-EXTERNAL-SERVICES  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            ctstate NEW /* kubernetes externally-visible <span class=\"token function\">service</span> portals */\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> DOCKER-<span class=\"token environment constant\">USER</span>  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0           \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> DOCKER-ISOLATION-STAGE-1  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0           \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> ACCEPT     all  --  *      docker0  <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            ctstate RELATED,ESTABLISHED\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> DOCKER     all  --  *      docker0  <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0           \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> ACCEPT     all  --  docker0 <span class=\"token operator\">!</span>docker0  <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0           \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> ACCEPT     all  --  docker0 docker0  <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL  KUBE-FORWARD  -t filter</span>\nChain KUBE-FORWARD <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> DROP       all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            ctstate INVALID\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> ACCEPT     all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* kubernetes forwarding rules */ mark match 0x4000/0x4000\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> ACCEPT     all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* kubernetes forwarding conntrack rule */ ctstate RELATED,ESTABLISHED<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"OUTPUT\"><a href=\"#OUTPUT\" class=\"headerlink\" title=\"OUTPUT\"></a>OUTPUT</h6><ul>\n<li>这里继续会有一个<code>KUBE-SERVICES</code>这个链用于处理节点上访问svc</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL OUTPUT -t nat</span>\nChain OUTPUT <span class=\"token punctuation\">(</span>policy ACCEPT <span class=\"token number\">3995</span> packets, 240K bytes<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n 748K   45M KUBE-SERVICES  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* kubernetes <span class=\"token function\">service</span> portals */\n  <span class=\"token number\">130</span>  <span class=\"token number\">8116</span> DOCKER_OUTPUT  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">192.168</span>.65.2        \n 499K   30M DOCKER     all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0           <span class=\"token operator\">!</span><span class=\"token number\">127.0</span>.0.0/8          ADDRTYPE match dst-type LOCAL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL OUTPUT -t filter</span>\nChain OUTPUT <span class=\"token punctuation\">(</span>policy ACCEPT 368K packets, 49M bytes<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n 748K   45M KUBE-PROXY-FIREWALL  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            ctstate NEW /* kubernetes load balancer firewall */\n 748K   45M KUBE-SERVICES  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            ctstate NEW /* kubernetes <span class=\"token function\">service</span> portals */\n  75M 9999M KUBE-FIREWALL  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0           <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"POSTROUTING\"><a href=\"#POSTROUTING\" class=\"headerlink\" title=\"POSTROUTING\"></a>POSTROUTING</h6><ul>\n<li>整个流程中最后一个地点，这里主要对前面打了<code>0x4000/0x4000</code>的标签进行snat</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL POSTROUTING -t nat   </span>\nChain POSTROUTING <span class=\"token punctuation\">(</span>policy ACCEPT <span class=\"token number\">4112</span> packets, 247K bytes<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n 748K   45M KUBE-POSTROUTING  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* kubernetes postrouting rules */\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> MASQUERADE  all  --  *      <span class=\"token operator\">!</span>docker0  <span class=\"token number\">172.17</span>.0.0/16        <span class=\"token number\">0.0</span>.0.0/0           \n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> DOCKER_POSTROUTING  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">192.168</span>.65.2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@minikube:~<span class=\"token comment\"># iptables -nvL KUBE-POSTROUTING -t nat</span>\nChain KUBE-POSTROUTING <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination         \n <span class=\"token number\">4253</span>  255K RETURN     all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            mark match <span class=\"token operator\">!</span> 0x4000/0x4000\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> MARK       all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            MARK xor 0x4000\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> MASQUERADE  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* kubernetes <span class=\"token function\">service</span> traffic requiring SNAT */ random-fully<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"概览\"><a href=\"#概览\" class=\"headerlink\" title=\"概览\"></a>概览</h6><p><img src=\"/../images/kube-svc-7.png\" alt=\"svc\"></p>\n<blockquote>\n<p>流程图</p>\n</blockquote>\n<p><img src=\"/../images/kube-proxy-iptables-nat-control-flow.svg\" alt=\"Alt text\"></p>\n<h5 id=\"集群外访问NodePort\"><a href=\"#集群外访问NodePort\" class=\"headerlink\" title=\"集群外访问NodePort\"></a>集群外访问NodePort</h5><p>集群外部一台服务器(10.23.83.9)通过<code>nodePort</code>请求集群的cdebug这个服务</p>\n<p>cdebug服务详情</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">❯ k get svc <span class=\"token parameter variable\">-o</span> wide\nNAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>        AGE    SELECTOR\ncdebug       NodePort    <span class=\"token number\">172.17</span>.102.133   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">80</span>:32577/TCP   5d2h   <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>cdebug\nkubernetes   ClusterIP   <span class=\"token number\">172.17</span>.0.1       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">443</span>/TCP        5d2h   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n\n❯ k get po <span class=\"token parameter variable\">-l</span> <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>cdebug <span class=\"token parameter variable\">-o</span> wide\nNAME                      READY   STATUS    RESTARTS   AGE    IP            NODE            NOMINATED NODE   READINESS GATES\ncdebug-77cc4fc98f-rv9hn   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          5d1h   <span class=\"token number\">10.23</span>.8.140   <span class=\"token number\">10.23</span>.142.106   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n\n❯ kubectl get po nginx <span class=\"token parameter variable\">-o</span> wide\nNAME    READY   STATUS    RESTARTS   AGE   IP              NODE            NOMINATED NODE   READINESS GATES\nnginx   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          22h   <span class=\"token number\">10.23</span>.246.131   <span class=\"token number\">10.23</span>.142.106   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这是在请求的node上抓包</li>\n</ul>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">发送\n10.23.83.9:36848 > 10.23.142.106:32577\n10.23.142.106:36848 > 10.23.8.140:80\n\n返回\n10.23.8.140:80 > 10.23.142.106:36848\n10.23.142.106:32577 > 10.23.83.9:36848<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/../images/kube-svc-4.png\" alt=\"svc\"></p>\n<p>可以看到客户端请求集群的nodePort，iptables目的地址改为对应的pod地址,源地址则是nodePort的地址,所以pod<code>不知道真正的客户端是谁</code><br>即pod看到的请求来自<code>请求的nodePort所在的node</code><br>这里做了</p>\n<ul>\n<li>在netfilter流向,这里充当了一个路由器防火墙</li>\n</ul>\n<p><img src=\"/../images/kube-svc-5.png\" alt=\"svc\"></p>\n<h5 id=\"集群内节点访问NodePort\"><a href=\"#集群内节点访问NodePort\" class=\"headerlink\" title=\"集群内节点访问NodePort\"></a>集群内节点访问NodePort</h5><p>和集群外访问NodePort差不多,最终pod的看到的源地址为访问所在的node的地址</p>\n<h5 id=\"POD访问SVC\"><a href=\"#POD访问SVC\" class=\"headerlink\" title=\"POD访问SVC\"></a>POD访问SVC</h5><p>发送<br>10.23.246.131:38906 &gt; 172.17.102.133:80<br>10.23.246.131:38906 &gt; 10.23.8.140:80</p>\n<p>响应<br>10.23.8.140:80    &gt; 10.23.246.131:38906<br>172.17.102.133:80 &gt; 10.23.246.131:38906</p>\n<p><img src=\"/../images/kube-svc-6.png\" alt=\"svc\"></p>\n<p>路径和访问NodePort差不都只不过没有做SNAT只做了DNAT,也就是说集群POD访问SVC是可以知道客户端的真实地址</p>\n<h4 id=\"kube-proxy修改为ipvs\"><a href=\"#kube-proxy修改为ipvs\" class=\"headerlink\" title=\"kube-proxy修改为ipvs\"></a>kube-proxy修改为ipvs</h4><ul>\n<li>去人内核模块是否有ipvs</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lsmos<span class=\"token operator\">|</span><span class=\"token function\">grep</span> ip_vs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>根据情况是否安装ipvsadm管理工具</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> ipvsadm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>kube-proxy配置文件中<code>mode</code>,改为<code>ipvs</code>即可切换为ipvs,如果是<code>ds</code>运行的话需要重启pod</li>\n</ul>\n<h4 id=\"ipvs\"><a href=\"#ipvs\" class=\"headerlink\" title=\"ipvs\"></a>ipvs</h4><p>总体来说ipvs相比iptables要简单一些</p>\n<ul>\n<li><p>创建了一个名为<code>kube-ipvs0</code>的<code>dummy</code>类型网卡，该网卡上会有所有<code>CluserIP</code>的地址,用于让该ip的流量进入协议栈，不然网卡发现本地没该地址流量被丢弃</p>\n</li>\n<li><p>iptables上会通过创建一些规则,使用<code>ipset</code>提升性能</p>\n</li>\n<li><p>创建ipvs转发规则,使用nat模式</p>\n</li>\n</ul>\n<h5 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h5><ul>\n<li>一个svc叫cdebug详情如下</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># kubectl get svc cdebug</span>\nNAME     TYPE       CLUSTER-IP       EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>        AGE\ncdebug   NodePort   <span class=\"token number\">172.17</span>.102.133   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">80</span>:32577/TCP   25d\n<span class=\"token comment\"># kubectl get ep  cdebug</span>\nNAME     ENDPOINTS          AGE\ncdebug   <span class=\"token number\">10.23</span>.169.107:80   25d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"网卡\"><a href=\"#网卡\" class=\"headerlink\" title=\"网卡\"></a>网卡</h6><ul>\n<li>节点上的kube-ipvs0网卡上可以看到这个svc的<code>ClusterIP</code></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ip -s addr show kube-ipvs0 |grep 172.17.102.133</span>\n    inet <span class=\"token number\">172.17</span>.102.133/32 scope global kube-ipvs0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h6 id=\"ipvs规则\"><a href=\"#ipvs规则\" class=\"headerlink\" title=\"ipvs规则\"></a>ipvs规则</h6><ul>\n<li>同时ipvs的规则中rs为svc对应的ep也就是pod的地址转发规则为<code>rr</code></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ipvsadm -Ln -t 172.17.102.133:80</span>\nProt LocalAddress:Port Scheduler Flags\n  -<span class=\"token operator\">></span> RemoteAddress:Port           Forward Weight ActiveConn InActConn\nTCP  <span class=\"token number\">172.17</span>.102.133:80 rr\n  -<span class=\"token operator\">></span> <span class=\"token number\">10.23</span>.169.107:80             Masq    <span class=\"token number\">1</span>      <span class=\"token number\">0</span>          <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"iptable规则\"><a href=\"#iptable规则\" class=\"headerlink\" title=\"iptable规则\"></a>iptable规则</h6><ul>\n<li>ipvs下依然使用了iptables</li>\n<li>使用ipset模块来过滤添加标记,并在POSTROUTING上做snat</li>\n<li>和iptables模式一样分别在<code>OUTPUT</code>和<code>PREROUTING</code>上调用了<code>KUBE-SERVICES</code></li>\n<li><code>KUBE-SERVICES</code>和iptables模式相比没有了负载均衡功能(交给了ipvs)</li>\n<li>ipvs模式吧所有的流量都做snat</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># iptables -t nat -nvL KUBE-SERVICES</span>\nChain KUBE-SERVICES <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> references<span class=\"token punctuation\">)</span>\n pkts bytes target     prot opt <span class=\"token keyword\">in</span>     out     <span class=\"token builtin class-name\">source</span>               destination\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-LOAD-BALANCER  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* Kubernetes <span class=\"token function\">service</span> lb portal */ match-set KUBE-LOAD-BALANCER dst,dst\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-MARK-MASQ  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* Kubernetes <span class=\"token function\">service</span> cluster <span class=\"token function\">ip</span> + port <span class=\"token keyword\">for</span> masquerade purpose */ match-set KUBE-CLUSTER-IP src,dst\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> KUBE-MARK-MASQ  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* Kubernetes <span class=\"token function\">service</span> external <span class=\"token function\">ip</span> + port <span class=\"token keyword\">for</span> masquerade and filter purpose */ match-set KUBE-EXTERNAL-IP dst,dst\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> ACCEPT     all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* Kubernetes <span class=\"token function\">service</span> external <span class=\"token function\">ip</span> + port <span class=\"token keyword\">for</span> masquerade and filter purpose */ match-set KUBE-EXTERNAL-IP dst,dst PHYSDEV match <span class=\"token operator\">!</span> --physdev-is-in ADDRTYPE match src-type <span class=\"token operator\">!</span>LOCAL\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> ACCEPT     all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            /* Kubernetes <span class=\"token function\">service</span> external <span class=\"token function\">ip</span> + port <span class=\"token keyword\">for</span> masquerade and filter purpose */ match-set KUBE-EXTERNAL-IP dst,dst ADDRTYPE match dst-type LOCAL\n   <span class=\"token number\">39</span>  <span class=\"token number\">2148</span> KUBE-NODE-PORT  all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            ADDRTYPE match dst-type LOCAL\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> ACCEPT     all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            match-set KUBE-CLUSTER-IP dst,dst\n    <span class=\"token number\">0</span>     <span class=\"token number\">0</span> ACCEPT     all  --  *      *       <span class=\"token number\">0.0</span>.0.0/0            <span class=\"token number\">0.0</span>.0.0/0            match-set KUBE-LOAD-BALANCER dst,dst<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"如何选择\"><a href=\"#如何选择\" class=\"headerlink\" title=\"如何选择\"></a>如何选择</h4><p>当svc比较多的时候选择ipvs比较好，否则iptables</p>\n<p>参考<a href=\"https://docs.ucloud.cn/uk8s/userguide/kubeproxy_mode\">https://docs.ucloud.cn/uk8s/userguide/kubeproxy_mode</a></p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://kubernetes.io/zh/docs/concepts/services-networking/service/\">https://kubernetes.io/zh/docs/concepts/services-networking/service/</a><br><a href=\"https://draveness.me/kubernetes-service/\">https://draveness.me/kubernetes-service/</a></p>\n","tags":["k8s","网络"]},{"title":"k8s中安装gitlab-runner","url":"/2021/12/17/k8s%E4%B8%AD%E5%AE%89%E8%A3%85gitlab-runenr/","content":"<p>记录下在k8s中安装gitlab-runner</p>\n<span id=\"more\"></span>\n\n<h4 id=\"获取注册token\"><a href=\"#获取注册token\" class=\"headerlink\" title=\"获取注册token\"></a>获取注册token</h4><ul>\n<li><p>全局runner：管理员界面-&gt;概览—&gt;runner-&gt;左上角(&#x2F;admin&#x2F;runners)</p>\n</li>\n<li><p>组runner：组界面-&gt;设置-&gt;CI&#x2F;CD-&gt;展开runner(&#x2F;groups&#x2F;&lt;组名&gt;&#x2F;-&#x2F;settings&#x2F;ci_cd)</p>\n</li>\n<li><p>项目runner：项目界面-&gt;设置-&gt;CI&#x2F;CD-&gt;展开runner(&lt;组名&gt;&#x2F;&lt;项目名&gt;&#x2F;-&#x2F;settings&#x2F;ci_cd)</p>\n</li>\n</ul>\n<h4 id=\"添加helmc仓库\"><a href=\"#添加helmc仓库\" class=\"headerlink\" title=\"添加helmc仓库\"></a>添加helmc仓库</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm repo <span class=\"token function\">add</span> gitlab https://charts.gitlab.io<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"解压chart包\"><a href=\"#解压chart包\" class=\"headerlink\" title=\"解压chart包\"></a>解压chart包</h4><blockquote>\n<p>解压他的包为了得到完整的values.yaml，这个文件里面说的很详细的一些配置</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm pull gitlab/gitlab-runner\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xvf</span> gitlab-runner-0.35.3.tgz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"修改参数\"><a href=\"#修改参数\" class=\"headerlink\" title=\"修改参数\"></a>修改参数</h4><ul>\n<li><p>修改<code>gitlabUrl</code>的地址为你的gitlab地址</p>\n</li>\n<li><p>配置<code>runnerRegistrationToken</code>为你的token</p>\n</li>\n<li><p>配置<code>tags</code>字段，可以在在选择性</p>\n</li>\n<li><p>增加权限，这里直接给所有权限</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">rbac</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">create</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span> \n   <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">]</span>\n     <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">]</span>\n   <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n     <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">]</span>\n     <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"安装gitlab\"><a href=\"#安装gitlab\" class=\"headerlink\" title=\"安装gitlab\"></a>安装gitlab</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm <span class=\"token function\">install</span> <span class=\"token parameter variable\">--namespace</span> gitlab gitlab-runner <span class=\"token parameter variable\">-f</span> values.yaml gitlab/gitlab-runner <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-sehll\" data-language=\"sehll\"><code class=\"language-sehll\">helm upgrade --namespace gitlab -f values.yaml gitlab-runner gitlab&#x2F;gitlab-runner<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://docs.gitlab.com/runner/install/kubernetes.html\">https://docs.gitlab.com/runner/install/kubernetes.html</a></p>\n","tags":["cicd"]},{"title":"k8s中创建8ks-vcluster","url":"/2022/12/19/k8s%E4%B8%AD%E5%88%9B%E5%BB%BA8ks-vcluster/","content":"<p>vcluster是一个kink(k8s in k8s)程序即在k8s里创建k8s,和ns相比主要可以随便安装crd等资源且可以获得类似完整的集群体验</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li>macos</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> <span class=\"token parameter variable\">-o</span> vcluster <span class=\"token string\">\"https://github.com/loft-sh/vcluster/releases/latest/download/vcluster-darwin-arm64\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-c</span> <span class=\"token parameter variable\">-m</span> 0755 vcluster /usr/local/bin <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> vcluster<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>其他的<a href=\"https://www.vcluster.com/docs/getting-started/setup\">https://www.vcluster.com/docs/getting-started/setup</a></li>\n</ul>\n<h4 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h4><p><img src=\"/../images/vcluster-1.svg\" alt=\"vcluster\"></p>\n<p>其主要原理是在宿主集群中启动了一个轻量k8s-k3s,然后将k3s的端口通过宿主集群的svc暴漏,在虚拟集群中创建的资源通过同步到宿主集群中由宿主集群来创建具体的pod</p>\n<h4 id=\"常用操作\"><a href=\"#常用操作\" class=\"headerlink\" title=\"常用操作\"></a>常用操作</h4><ul>\n<li>创建集群,创建完成之后会在当前的kubeconfig中添加虚拟机集群的context</li>\n</ul>\n<pre class=\"line-numbers language-shlel\" data-language=\"shlel\"><code class=\"language-shlel\">vcluster create &lt;集群名字&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看所有集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vcluster list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>删除集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vcluster list <span class=\"token operator\">&lt;</span>集群名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>连接集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vcluster connect <span class=\"token operator\">&lt;</span>集群名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.vcluster.com/docs/what-are-virtual-clusters\">https://www.vcluster.com/docs/what-are-virtual-clusters</a></p>\n","tags":["k8s","部署"]},{"title":"k8s使用nfs持久化数据","url":"/2022/07/16/k8s%E4%BD%BF%E7%94%A8nfs%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E6%8D%AE/","content":"<p>nfs是们常用的远程存储，这里记录下k8s安装nfs</p>\n<span id=\"more\"></span>\n\n<h4 id=\"部署nfs服务器\"><a href=\"#部署nfs服务器\" class=\"headerlink\" title=\"部署nfs服务器\"></a>部署nfs服务器</h4><p>安装nfs工具</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> nfs-utils\nsystemctl start nfs <span class=\"token operator\">&amp;&amp;</span> systemctl <span class=\"token builtin class-name\">enable</span> nfs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>创建nfs的目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /data/nfs/ <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">chmod</span> <span class=\"token parameter variable\">-R</span> <span class=\"token number\">777</span> /data/nfs\n\n<span class=\"token comment\"># 设置共享目录</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"/data/nfs *(rw,no_root_squash,sync)\"</span> <span class=\"token operator\">>></span> /etc/exports\n<span class=\"token comment\"># 应用配置</span>\nexportfs <span class=\"token parameter variable\">-r</span>\n<span class=\"token comment\"># 查看配置</span>\nexportfs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>启动nfs服务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl restart rpcbind <span class=\"token operator\">&amp;&amp;</span> systemctl <span class=\"token builtin class-name\">enable</span> rpcbind\nsystemctl restart nfs <span class=\"token operator\">&amp;&amp;</span> systemctl <span class=\"token builtin class-name\">enable</span> nfs\n\n<span class=\"token comment\"># 查看 RPC 服务的注册状况</span>\nrpcinfo <span class=\"token parameter variable\">-p</span> localhost\n\n<span class=\"token comment\"># 测试一下</span>\nshowmount <span class=\"token parameter variable\">-e</span> <span class=\"token number\">192.168</span>.32.133<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"k8s安装nfs驱动\"><a href=\"#k8s安装nfs驱动\" class=\"headerlink\" title=\"k8s安装nfs驱动\"></a>k8s安装nfs驱动</h4><p>官方仓库<a href=\"https://github.com/kubernetes-csi/csi-driver-nfs\">https://github.com/kubernetes-csi/csi-driver-nfs</a></p>\n<div class=\"note warning\"><p>官方默认的镜像在国内是无法访问，需要转储到国内的仓库里，建议找台香港的机器或者科学上网</p>\n</div>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">registry.k8s.io/sig-storage/csi-provisioner:v3.2.0\nregistry.k8s.io/sig-storage/livenessprobe:v2.7.0\nregistry.k8s.io/sig-storage/csi-node-driver-registrar:v2.5.1\ngcr.io/k8s-staging-sig-storage/nfsplugin:canary<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"在线安装\"><a href=\"#在线安装\" class=\"headerlink\" title=\"在线安装\"></a>在线安装</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-skSL</span> https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/master/deploy/install-driver.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span> <span class=\"token parameter variable\">-s</span> master --<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"本地安装\"><a href=\"#本地安装\" class=\"headerlink\" title=\"本地安装\"></a>本地安装</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/kubernetes-csi/csi-driver-nfs.git\n<span class=\"token builtin class-name\">cd</span> csi-driver-nfs\n./deploy/install-driver.sh master <span class=\"token builtin class-name\">local</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>等待所有pod running</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> kube-system get pod  <span class=\"token operator\">|</span><span class=\"token function\">grep</span> nfs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"部署存储类对象\"><a href=\"#部署存储类对象\" class=\"headerlink\" title=\"部署存储类对象\"></a>部署存储类对象</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> nfs-cs.yml</span>\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: nfs\nparameters:\n  server: 192.168.32.133 # nfs服务器地址\n  share: /data/nfs # nfs共享的目录\nprovisioner: nfs.csi.k8s.io\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate\nEOF</span>\n\nkubectl apply <span class=\"token parameter variable\">-f</span> nfs-cs.yml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 将nfs-csi 设置为默认存储类</span>\nkubectl patch storageclass nfs-csi <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"metadata\": &#123;\"annotations\":&#123;\"storageclass.kubernetes.io/is-default-class\":\"true\"&#125;&#125;&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"测试部署\"><a href=\"#测试部署\" class=\"headerlink\" title=\"测试部署\"></a>测试部署</h4><p>静态pv</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolume\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> pv<span class=\"token punctuation\">-</span>nfs\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">capacity</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 10Gi\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> ReadWriteMany\n  <span class=\"token key atrule\">persistentVolumeReclaimPolicy</span><span class=\"token punctuation\">:</span> Retain\n  <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> nfs<span class=\"token punctuation\">-</span>csi\n  <span class=\"token key atrule\">mountOptions</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> nfsvers=3\n  <span class=\"token key atrule\">csi</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">driver</span><span class=\"token punctuation\">:</span> nfs.csi.k8s.io\n    <span class=\"token key atrule\">readOnly</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">volumeHandle</span><span class=\"token punctuation\">:</span> unique<span class=\"token punctuation\">-</span>volumeid  <span class=\"token comment\"># make sure it's a unique id in the cluster</span>\n    <span class=\"token key atrule\">volumeAttributes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span> 192.168.32.133\n      <span class=\"token key atrule\">share</span><span class=\"token punctuation\">:</span> /data/nfs\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolumeClaim\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> pvc<span class=\"token punctuation\">-</span>nfs<span class=\"token punctuation\">-</span>static\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> ReadWriteMany\n  <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 10Gi\n  <span class=\"token key atrule\">volumeName</span><span class=\"token punctuation\">:</span> pv<span class=\"token punctuation\">-</span>nfs\n  <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> nfs<span class=\"token punctuation\">-</span>csi\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test\n      <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /data\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test\n    <span class=\"token key atrule\">persistentVolumeClaim</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">claimName</span><span class=\"token punctuation\">:</span> pvc<span class=\"token punctuation\">-</span>nfs<span class=\"token punctuation\">-</span>static<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://github.com/kubernetes-csi/csi-driver-nfs\">https://github.com/kubernetes-csi/csi-driver-nfs</a></p>\n","tags":["k8s","存储"]},{"title":"k8s动态准入控制","url":"/2021/06/17/k8s%E5%8A%A8%E6%80%81%E5%87%86%E5%85%A5%E6%8E%A7%E5%88%B6/","content":"<p>准入控制是k8s中用来提供安全控制的一个控制器，而动态控制则是用户定制的安全策略</p>\n<span id=\"more\"></span>\n\n<h4 id=\"种类\"><a href=\"#种类\" class=\"headerlink\" title=\"种类\"></a>种类</h4><blockquote>\n<p>动态准入控制分为两种，分别为Mutating，Validating</p>\n</blockquote>\n<h5 id=\"Mutating\"><a href=\"#Mutating\" class=\"headerlink\" title=\"Mutating\"></a>Mutating</h5><p>Mutating主要为修改性质的，在api调用完成之后k8s会根据<code>ValidatingWebhookConfiguration</code>中的条件发送给配置的webhook服务，webhook服务根据业务逻辑进行修改，比如说大名鼎鼎的istio的Sidecar注入就是于此</p>\n<h5 id=\"Validating\"><a href=\"#Validating\" class=\"headerlink\" title=\"Validating\"></a>Validating</h5><p>Validating主要为验证性质的，主要看是不是符合条件集群要求，比方说为了高可用不允许设置副本数为1的类型为deployment的请求</p>\n<h4 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h4><blockquote>\n<p>下图所显的是api请求的流程<br><img src=\"/../images/pasted-24.png\" alt=\"upload successful\"></p>\n</blockquote>\n<h4 id=\"编写webhook\"><a href=\"#编写webhook\" class=\"headerlink\" title=\"编写webhook\"></a>编写webhook</h4><h5 id=\"创建证书\"><a href=\"#创建证书\" class=\"headerlink\" title=\"创建证书\"></a>创建证书</h5><blockquote>\n<p>创建证书的的程序很多比较出名的是<code>openssl</code>，这里我们使用rancher提供的一个自动生成证书的脚本</p>\n</blockquote>\n<h6 id=\"1-将下面的脚本保存为create-self-signed-cert-sh\"><a href=\"#1-将下面的脚本保存为create-self-signed-cert-sh\" class=\"headerlink\" title=\"1. 将下面的脚本保存为create_self-signed-cert.sh\"></a>1. 将下面的脚本保存为<code>create_self-signed-cert.sh</code></h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash -e</span>\n\n<span class=\"token function-name function\">help</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' ================================================================ '</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-domain: 生成ssl证书需要的主域名，如不指定则默认为www.rancher.local，如果是ip访问服务，则可忽略；'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-trusted-ip: 一般ssl证书只信任域名的访问请求，有时候需要使用ip去访问server，那么需要给ssl证书添加扩展IP，多个IP用逗号隔开；'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-trusted-domain: 如果想多个域名访问，则添加扩展域名（SSL_TRUSTED_DOMAIN）,多个扩展域名用逗号隔开；'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-size: ssl加密位数，默认2048；'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-cn: 国家代码(2个字母的代号),默认CN;'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' 使用示例:'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' ./create_self-signed-cert.sh --ssl-domain=www.test.com --ssl-trusted-domain=www.test2.com \\ '</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-trusted-ip=1.1.1.1,2.2.2.2,3.3.3.3 --ssl-size=2048 --ssl-date=3650'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' ================================================================'</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token keyword\">in</span>\n    -h<span class=\"token operator\">|</span>--help<span class=\"token punctuation\">)</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">exit</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">esac</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">==</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin class-name\">exit</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">CMDOPTS</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$*</span>\"</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">OPTS</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$CMDOPTS</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token assign-left variable\">key</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $<span class=\"token punctuation\">&#123;</span>OPTS<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F<span class=\"token string\">\"=\"</span> <span class=\"token string\">'&#123;print $1&#125;'</span> <span class=\"token variable\">)</span></span>\n    <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $<span class=\"token punctuation\">&#123;</span>OPTS<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F<span class=\"token string\">\"=\"</span> <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token variable\">)</span></span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"<span class=\"token variable\">$key</span>\"</span> <span class=\"token keyword\">in</span>\n        --ssl-domain<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">SSL_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ssl-trusted-ip<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">SSL_TRUSTED_IP</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ssl-trusted-domain<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">SSL_TRUSTED_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ssl-size<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">SSL_SIZE</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ssl-date<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">SSL_DATE</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ca-date<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">CA_DATE</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ssl-cn<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">CN</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">esac</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># CA相关配置</span>\n<span class=\"token assign-left variable\">CA_DATE</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;CA_DATE<span class=\"token operator\">:-</span>3650&#125;</span>\n<span class=\"token assign-left variable\">CA_KEY</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;CA_KEY<span class=\"token operator\">:-</span>cakey.pem&#125;</span>\n<span class=\"token assign-left variable\">CA_CERT</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;CA_CERT<span class=\"token operator\">:-</span>cacerts.pem&#125;</span>\n<span class=\"token assign-left variable\">CA_DOMAIN</span><span class=\"token operator\">=</span>cattle-ca\n\n<span class=\"token comment\"># ssl相关配置</span>\n<span class=\"token assign-left variable\">SSL_CONFIG</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;SSL_CONFIG<span class=\"token operator\">:-</span>$PWD<span class=\"token operator\">/</span>openssl.cnf&#125;</span>\n<span class=\"token assign-left variable\">SSL_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;SSL_DOMAIN<span class=\"token operator\">:-</span>'www.rancher.local'&#125;</span>\n<span class=\"token assign-left variable\">SSL_DATE</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;SSL_DATE<span class=\"token operator\">:-</span>3650&#125;</span>\n<span class=\"token assign-left variable\">SSL_SIZE</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;SSL_SIZE<span class=\"token operator\">:-</span>2048&#125;</span>\n\n<span class=\"token comment\">## 国家代码(2个字母的代号),默认CN;</span>\n<span class=\"token assign-left variable\">CN</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;CN<span class=\"token operator\">:-</span>CN&#125;</span>\n\n<span class=\"token assign-left variable\">SSL_KEY</span><span class=\"token operator\">=</span><span class=\"token variable\">$SSL_DOMAIN</span>.key\n<span class=\"token assign-left variable\">SSL_CSR</span><span class=\"token operator\">=</span><span class=\"token variable\">$SSL_DOMAIN</span>.csr\n<span class=\"token assign-left variable\">SSL_CERT</span><span class=\"token operator\">=</span><span class=\"token variable\">$SSL_DOMAIN</span>.crt\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ---------------------------- <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m       | 生成 SSL Cert |       <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ---------------------------- <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-e</span> ./<span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 1. 发现已存在CA私钥，备份\"</span><span class=\"token variable\">$&#123;CA_KEY&#125;</span><span class=\"token string\">\"为\"</span><span class=\"token variable\">$&#123;CA_KEY&#125;</span><span class=\"token string\">\"-bak，然后重新创建 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n    <span class=\"token function\">mv</span> <span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;CA_KEY&#125;</span>\"</span>-bak\n    openssl genrsa <span class=\"token parameter variable\">-out</span> <span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token variable\">$&#123;SSL_SIZE&#125;</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 1. 生成新的CA私钥 <span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n    openssl genrsa <span class=\"token parameter variable\">-out</span> <span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token variable\">$&#123;SSL_SIZE&#125;</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-e</span> ./<span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 2. 发现已存在CA证书，先备份\"</span><span class=\"token variable\">$&#123;CA_CERT&#125;</span><span class=\"token string\">\"为\"</span><span class=\"token variable\">$&#123;CA_CERT&#125;</span><span class=\"token string\">\"-bak，然后重新创建 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n    <span class=\"token function\">mv</span> <span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;CA_CERT&#125;</span>\"</span>-bak\n    openssl req <span class=\"token parameter variable\">-x509</span> <span class=\"token parameter variable\">-sha256</span> <span class=\"token parameter variable\">-new</span> <span class=\"token parameter variable\">-nodes</span> <span class=\"token parameter variable\">-key</span> <span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token parameter variable\">-days</span> <span class=\"token variable\">$&#123;CA_DATE&#125;</span> <span class=\"token parameter variable\">-out</span> <span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token parameter variable\">-subj</span> <span class=\"token string\">\"/C=<span class=\"token variable\">$&#123;CN&#125;</span>/CN=<span class=\"token variable\">$&#123;CA_DOMAIN&#125;</span>\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 2. 生成新的CA证书 <span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n    openssl req <span class=\"token parameter variable\">-x509</span> <span class=\"token parameter variable\">-sha256</span> <span class=\"token parameter variable\">-new</span> <span class=\"token parameter variable\">-nodes</span> <span class=\"token parameter variable\">-key</span> <span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token parameter variable\">-days</span> <span class=\"token variable\">$&#123;CA_DATE&#125;</span> <span class=\"token parameter variable\">-out</span> <span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token parameter variable\">-subj</span> <span class=\"token string\">\"/C=<span class=\"token variable\">$&#123;CN&#125;</span>/CN=<span class=\"token variable\">$&#123;CA_DOMAIN&#125;</span>\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 3. 生成Openssl配置文件 <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOM\n[req]\nreq_extensions = v3_req\ndistinguished_name = req_distinguished_name\n[req_distinguished_name]\n[ v3_req ]\nbasicConstraints = CA:FALSE\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\nextendedKeyUsage = clientAuth, serverAuth\nEOM</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-n</span> <span class=\"token variable\">$&#123;SSL_TRUSTED_IP&#125;</span> <span class=\"token operator\">||</span> <span class=\"token parameter variable\">-n</span> <span class=\"token variable\">$&#123;SSL_TRUSTED_DOMAIN&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOM\nsubjectAltName = @alt_names\n[alt_names]\nEOM</span>\n    <span class=\"token assign-left variable\"><span class=\"token environment constant\">IFS</span></span><span class=\"token operator\">=</span><span class=\"token string\">\",\"</span>\n    <span class=\"token assign-left variable\">dns</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$&#123;SSL_TRUSTED_DOMAIN&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token assign-left variable\">dns</span><span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;<span class=\"token operator\">!</span>dns<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n      <span class=\"token builtin class-name\">echo</span> DNS.<span class=\"token variable\"><span class=\"token variable\">$((</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token variable\">))</span></span> <span class=\"token operator\">=</span> <span class=\"token variable\">$&#123;dns<span class=\"token punctuation\">[</span>$i<span class=\"token punctuation\">]</span>&#125;</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span>\n    <span class=\"token keyword\">done</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-n</span> <span class=\"token variable\">$&#123;SSL_TRUSTED_IP&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token assign-left variable\">ip</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$&#123;SSL_TRUSTED_IP&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;<span class=\"token operator\">!</span>ip<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n          <span class=\"token builtin class-name\">echo</span> IP.<span class=\"token variable\"><span class=\"token variable\">$((</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token variable\">))</span></span> <span class=\"token operator\">=</span> <span class=\"token variable\">$&#123;ip<span class=\"token punctuation\">[</span>$i<span class=\"token punctuation\">]</span>&#125;</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span>\n        <span class=\"token keyword\">done</span>\n    <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 4. 生成服务SSL KEY <span class=\"token variable\">$&#123;SSL_KEY&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\nopenssl genrsa <span class=\"token parameter variable\">-out</span> <span class=\"token variable\">$&#123;SSL_KEY&#125;</span> <span class=\"token variable\">$&#123;SSL_SIZE&#125;</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 5. 生成服务SSL CSR <span class=\"token variable\">$&#123;SSL_CSR&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\nopenssl req <span class=\"token parameter variable\">-sha256</span> <span class=\"token parameter variable\">-new</span> <span class=\"token parameter variable\">-key</span> <span class=\"token variable\">$&#123;SSL_KEY&#125;</span> <span class=\"token parameter variable\">-out</span> <span class=\"token variable\">$&#123;SSL_CSR&#125;</span> <span class=\"token parameter variable\">-subj</span> <span class=\"token string\">\"/C=<span class=\"token variable\">$&#123;CN&#125;</span>/CN=<span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span>\"</span> <span class=\"token parameter variable\">-config</span> <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 6. 生成服务SSL CERT <span class=\"token variable\">$&#123;SSL_CERT&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\nopenssl x509 <span class=\"token parameter variable\">-sha256</span> <span class=\"token parameter variable\">-req</span> <span class=\"token parameter variable\">-in</span> <span class=\"token variable\">$&#123;SSL_CSR&#125;</span> <span class=\"token parameter variable\">-CA</span> <span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-CAkey</span> <span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token parameter variable\">-CAcreateserial</span> <span class=\"token parameter variable\">-out</span> <span class=\"token variable\">$&#123;SSL_CERT&#125;</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-days</span> <span class=\"token variable\">$&#123;SSL_DATE&#125;</span> <span class=\"token parameter variable\">-extensions</span> v3_req <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-extfile</span> <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 7. 证书制作完成 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token builtin class-name\">echo</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 8. 以YAML格式输出结果 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"----------------------------------------------------------\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ca_key: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$CA_KEY</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ca_cert: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$CA_CERT</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ssl_key: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$SSL_KEY</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ssl_csr: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$SSL_CSR</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ssl_cert: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$SSL_CERT</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 9. 附加CA证书到Cert文件 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$&#123;SSL_CERT&#125;</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ssl_cert: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$SSL_CERT</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 10. 重命名服务证书 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"cp <span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span>.key tls.key\"</span>\n<span class=\"token function\">cp</span> <span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span>.key tls.key\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"cp <span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span>.crt tls.crt\"</span>\n<span class=\"token function\">cp</span> <span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span>.crt tls.crt\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"2-然后执行下面的命令\"><a href=\"#2-然后执行下面的命令\" class=\"headerlink\" title=\"2. 然后执行下面的命令\"></a>2. 然后执行下面的命令</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./create_self-signed-cert.sh --ssl-domain<span class=\"token operator\">=</span>admission-example.admission-example.svc.cluster.local  --ssl-trusted-domain<span class=\"token operator\">=</span>admission-example,admission-example.admission-example.svc -ssl-trusted-ip<span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"3-会在目录里生成一套证书和秘钥\"><a href=\"#3-会在目录里生成一套证书和秘钥\" class=\"headerlink\" title=\"3. 会在目录里生成一套证书和秘钥\"></a>3. 会在目录里生成一套证书和秘钥</h6><ul>\n<li>.key的为秘钥</li>\n<li>.crt为域名的证书</li>\n<li>csr文件为证书申请文件</li>\n<li>ca开头的为根证书和秘钥</li>\n</ul>\n<h5 id=\"编写yaml文件\"><a href=\"#编写yaml文件\" class=\"headerlink\" title=\"编写yaml文件\"></a>编写yaml文件</h5><blockquote>\n<p>编写MutatingWebhookConfiguration和ValidatingWebhookConfiguration</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> admissionregistration.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> MutatingWebhookConfiguration\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mutating<span class=\"token punctuation\">-</span>example\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n<span class=\"token key atrule\">webhooks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example.naturelr.cc\n    <span class=\"token key atrule\">clientConfig</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/mutate\"</span>\n        <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n      <span class=\"token comment\"># 证书进行base64编码</span>\n      <span class=\"token key atrule\">caBundle</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>CA<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">operations</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"CREATE\"</span> <span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"apps\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">apiVersions</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"deployments\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"services\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">admissionReviewVersions</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"v1beta1\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">sideEffects</span><span class=\"token punctuation\">:</span> None\n    <span class=\"token comment\"># 只有ns上拥有admission-webhook-example: enabled才生效</span>\n    <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">admission-webhook-example</span><span class=\"token punctuation\">:</span> enabled\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> admissionregistration.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ValidatingWebhookConfiguration\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> validation<span class=\"token punctuation\">-</span>example\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n<span class=\"token key atrule\">webhooks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example.naturelr.cc\n    <span class=\"token key atrule\">clientConfig</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/validate\"</span>\n        <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n      <span class=\"token key atrule\">caBundle</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>CA<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">operations</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"CREATE\"</span> <span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"apps\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">apiVersions</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"deployments\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"services\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">admissionReviewVersions</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"v1beta1\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">sideEffects</span><span class=\"token punctuation\">:</span> None\n    <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">admission-webhook-example</span><span class=\"token punctuation\">:</span> enabled<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"开发webhook\"><a href=\"#开发webhook\" class=\"headerlink\" title=\"开发webhook\"></a>开发webhook</h5><blockquote>\n<p>开发上面定义的两个接口validate，mutate</p>\n</blockquote>\n<p>监听的端口和上面配置的端口一直，且使用创建的证书</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token operator\">...</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/validate\"</span><span class=\"token punctuation\">,</span> validate<span class=\"token punctuation\">)</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/mutate\"</span><span class=\"token punctuation\">,</span> mutate<span class=\"token punctuation\">)</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/ping\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintln</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pong\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  svr <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">&#123;</span>\n    Addr<span class=\"token punctuation\">:</span>         <span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span>\n    ReadTimeout<span class=\"token punctuation\">:</span>  time<span class=\"token punctuation\">.</span>Minute<span class=\"token punctuation\">,</span>\n    WriteTimeout<span class=\"token punctuation\">:</span> time<span class=\"token punctuation\">.</span>Minute<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">*</span>key <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> <span class=\"token operator\">*</span>cert <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http服务启动成功\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> svr<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalln</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https服务启动成功\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> svr<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServeTLS</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>cert<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalln</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>实现mutate的部分，我们需要给满足条件的deployment和service添加一个名为<code>admission-example.naturelr.cc/status&quot;: &quot;test&quot;</code>的注解<br>这里和使用kubectl操作上很像只不过由代码返回给k8s</p>\n</blockquote>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">mutate</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 请求结构体</span>\n  qar <span class=\"token operator\">:=</span> admissionv1<span class=\"token punctuation\">.</span>AdmissionReview<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> serializer<span class=\"token punctuation\">.</span><span class=\"token function\">NewCodecFactory</span><span class=\"token punctuation\">(</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">NewScheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">UniversalDeserializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Decode</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>qar<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">checkErr</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>  \n  <span class=\"token keyword\">type</span> patchOperation <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n    Op    <span class=\"token builtin\">string</span>      <span class=\"token string\">`json:\"op\"`</span>\n    Path  <span class=\"token builtin\">string</span>      <span class=\"token string\">`json:\"path\"`</span>\n    Value <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token string\">`json:\"value,omitempty\"`</span>\n  <span class=\"token punctuation\">&#125;</span>  \n  p <span class=\"token operator\">:=</span> patchOperation<span class=\"token punctuation\">&#123;</span>\n    Op<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">,</span>\n    Path<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"/metadata/annotations\"</span><span class=\"token punctuation\">,</span>\n    Value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"admission-example.naturelr.cc/status\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n  patch<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Marshal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>patchOperation<span class=\"token punctuation\">&#123;</span>p<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">checkErr</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 返回给k8s的消息</span>\n  are <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>admissionv1<span class=\"token punctuation\">.</span>AdmissionReview<span class=\"token punctuation\">&#123;</span>\n    TypeMeta<span class=\"token punctuation\">:</span> apimetav1<span class=\"token punctuation\">.</span>TypeMeta<span class=\"token punctuation\">&#123;</span>\n      APIVersion<span class=\"token punctuation\">:</span> qar<span class=\"token punctuation\">.</span>APIVersion<span class=\"token punctuation\">,</span>\n      Kind<span class=\"token punctuation\">:</span>       qar<span class=\"token punctuation\">.</span>Kind<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    Response<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>admissionv1<span class=\"token punctuation\">.</span>AdmissionResponse<span class=\"token punctuation\">&#123;</span>\n      Allowed<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      Patch<span class=\"token punctuation\">:</span>   patch<span class=\"token punctuation\">,</span>\n      PatchType<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>admissionv1<span class=\"token punctuation\">.</span>PatchType <span class=\"token punctuation\">&#123;</span>\n        pt <span class=\"token operator\">:=</span> admissionv1<span class=\"token punctuation\">.</span>PatchTypeJSONPatch\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>pt\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      UID<span class=\"token punctuation\">:</span> qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>UID<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  resp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Marshal</span><span class=\"token punctuation\">(</span>are<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">checkErr</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"响应:\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  w<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n  w<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>validate中主要验证service和deployment中标签是否有admission字段如果就没有则拒绝访问</p>\n</blockquote>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 请求结构体</span>\n  qar <span class=\"token operator\">:=</span> admissionv1<span class=\"token punctuation\">.</span>AdmissionReview<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> serializer<span class=\"token punctuation\">.</span><span class=\"token function\">NewCodecFactory</span><span class=\"token punctuation\">(</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">NewScheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">UniversalDeserializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Decode</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>qar<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">checkErr</span><span class=\"token punctuation\">(</span>err\n  <span class=\"token comment\">// 处理逻辑 从请求的结构体判断是是否满足条件</span>\n  <span class=\"token keyword\">var</span>  availableLabels <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span>\n  \n  requiredLabels <span class=\"token operator\">:=</span> <span class=\"token string\">\"admission\"</span>\n  <span class=\"token keyword\">var</span> errMsg <span class=\"token builtin\">error</span>\n  <span class=\"token keyword\">switch</span> qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Kind<span class=\"token punctuation\">.</span>Kind <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token string\">\"Deployment\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">var</span> deploy appsv1<span class=\"token punctuation\">.</span>Deployment\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Unmarshal</span><span class=\"token punctuation\">(</span>qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">.</span>Raw<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>deploy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无法解析格式:\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n      errMsg <span class=\"token operator\">=</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    availableLabels <span class=\"token operator\">=</span> deploy<span class=\"token punctuation\">.</span>Labels\n  <span class=\"token keyword\">case</span> <span class=\"token string\">\"Service\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">var</span> service corev1<span class=\"token punctuation\">.</span>Service\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Unmarshal</span><span class=\"token punctuation\">(</span>qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">.</span>Raw<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无法解析格式:\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n      errMsg <span class=\"token operator\">=</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    availableLabels <span class=\"token operator\">=</span> service<span class=\"token punctuation\">.</span>Labels\n  <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n    msg <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"不能处理的类型：\"</span><span class=\"token punctuation\">,</span> qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Kind<span class=\"token punctuation\">.</span>Kind<span class=\"token punctuation\">)</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n    errMsg <span class=\"token operator\">=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">var</span> status <span class=\"token operator\">*</span>apimetav1<span class=\"token punctuation\">.</span>Status\n  <span class=\"token keyword\">var</span> allowed <span class=\"token builtin\">bool</span>\n  <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> availableLabels<span class=\"token punctuation\">[</span>requiredLabels<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">!</span>ok <span class=\"token operator\">||</span> errMsg <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    msg <span class=\"token operator\">:=</span> <span class=\"token string\">\"不符合条件\"</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        msg <span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintln</span><span class=\"token punctuation\">(</span>errMsg<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  status <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>apimetav1<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">&#123;</span>\n      Message<span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">,</span>\n      Reason<span class=\"token punctuation\">:</span>  apimetav1<span class=\"token punctuation\">.</span><span class=\"token function\">StatusReason</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      Code<span class=\"token punctuation\">:</span>    <span class=\"token number\">304</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    allowed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    Message<span class=\"token punctuation\">:</span> <span class=\"token string\">\"通过\"</span><span class=\"token punctuation\">,</span>\n    status <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>apimetav1<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">&#123;</span>\n     Reason<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"通过\"</span><span class=\"token punctuation\">,</span>\n     Code<span class=\"token punctuation\">:</span>    <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    allowed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 返回给k8s的消息</span>\n  are <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>admissionv1<span class=\"token punctuation\">.</span>AdmissionReview<span class=\"token punctuation\">&#123;</span>\n    TypeMeta<span class=\"token punctuation\">:</span> apimetav1<span class=\"token punctuation\">.</span>TypeMeta<span class=\"token punctuation\">&#123;</span>\n      APIVersion<span class=\"token punctuation\">:</span> qar<span class=\"token punctuation\">.</span>APIVersion<span class=\"token punctuation\">,</span>\n      Kind<span class=\"token punctuation\">:</span>       qar<span class=\"token punctuation\">.</span>Kind<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    Response<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>admissionv1<span class=\"token punctuation\">.</span>AdmissionResponse<span class=\"token punctuation\">&#123;</span>\n      Allowed<span class=\"token punctuation\">:</span> allowed<span class=\"token punctuation\">,</span>\n      Result<span class=\"token punctuation\">:</span>  status<span class=\"token punctuation\">,</span>\n      UID<span class=\"token punctuation\">:</span>     qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>UID<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  resp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Marshal</span><span class=\"token punctuation\">(</span>are<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">checkErr</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"响应:\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  w<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n  w<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>完整项目在<a href=\"https://github.com/NatureLR/admission-example\">https://github.com/NatureLR/admission-example</a></p>\n<h5 id=\"测试验证\"><a href=\"#测试验证\" class=\"headerlink\" title=\"测试验证\"></a>测试验证</h5><ul>\n<li>在打了<code>admission-webhook-example: enabled</code>标签下的ns中随便创建一个应用会发现被拒绝</li>\n<li>在给deployment打上了设定的标签之后就可以创建了，且deployment多了一个注解</li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://kubernetes.io/zh/docs/reference/access-authn-authz/admission-controllers/\">https://kubernetes.io/zh/docs/reference/access-authn-authz/admission-controllers/</a><br><a href=\"https://kubernetes.io/zh/docs/reference/access-authn-authz/extensible-admission-controllers/\">https://kubernetes.io/zh/docs/reference/access-authn-authz/extensible-admission-controllers/</a></p>\n","tags":["k8s"]},{"title":"knative-serving","url":"/2024/05/15/knative-serving/","content":"<p>knative是2018年开源的一个Serverless，和普通的k8s原生工作负载相比可以做到0pod，在收到请求时再拉起pod</p>\n<span id=\"more\"></span>\n\n<h4 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h4><ul>\n<li>serving主要负责提供服务，快速部署容器基于istio处理路由，只是缩容到0</li>\n</ul>\n<p><img src=\"/../images/knative-serving-1.png\" alt=\"alt text\"></p>\n<ul>\n<li>流量图</li>\n</ul>\n<p><img src=\"/../images/knative-serving-2.png\" alt=\"alt text\"></p>\n<h4 id=\"安装部署\"><a href=\"#安装部署\" class=\"headerlink\" title=\"安装部署\"></a>安装部署</h4><h4 id=\"安装istio\"><a href=\"#安装istio\" class=\"headerlink\" title=\"安装istio\"></a>安装istio</h4><ul>\n<li><p>从<a href=\"https://github.com/istio/istio/releases\">https://github.com/istio/istio/releases</a>下载istioctl</p>\n</li>\n<li><p>安装istio到集群</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">istioctl <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"安装serving\"><a href=\"#安装serving\" class=\"headerlink\" title=\"安装serving\"></a>安装serving</h4><blockquote>\n<p>需要注意是否兼容的k8s版本</p>\n</blockquote>\n<ul>\n<li>安装serving</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://github.com/knative/serving/releases/download/knative-v1.14.0/serving-crds.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> https://github.com/knative/serving/releases/download/knative-v1.14.0/serving-core.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>网络层</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://github.com/knative/net-istio/releases/download/knative-v1.14.0/net-istio.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>由于镜像在gcr上可能无法启动，可以实现拉取到国内的一些仓库上</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> knative-serving get po        \n<span class=\"token comment\"># NAME                                    READY   STATUS    RESTARTS   AGE</span>\n<span class=\"token comment\"># activator-58f4bb476b-l7sjw              1/1     Running   0          3m3s</span>\n<span class=\"token comment\"># autoscaler-84f556f484-xzwff             1/1     Running   0          3m3s</span>\n<span class=\"token comment\"># controller-858485bfbd-jtrpk             1/1     Running   0          3m3s</span>\n<span class=\"token comment\"># net-istio-controller-56d6d4f8ff-s7z5l   1/1     Running   0          2m</span>\n<span class=\"token comment\"># net-istio-webhook-bfd966868-mjcxh       1/1     Running   0          2m</span>\n<span class=\"token comment\"># webhook-6655bf6cbd-ktfv8                1/1     Running   0          3m3s</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h4><ul>\n<li>部署一个服务</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> serving.knative.dev/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> helloworld<span class=\"token punctuation\">-</span>go\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> helloworld<span class=\"token punctuation\">-</span>go\n      <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">autoscaling.knative.dev/target</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"10\"</span>\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> registry.cn<span class=\"token punctuation\">-</span>hangzhou.aliyuncs.com/knative<span class=\"token punctuation\">-</span>sample/helloworld<span class=\"token punctuation\">-</span>go<span class=\"token punctuation\">:</span>160e4dc8\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http1\n              <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n          <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> TARGET\n              <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"World\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看服务</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get ksvc \n<span class=\"token comment\"># NAME            URL                                              LATESTCREATED         LATESTREADY           READY   REASON</span>\n<span class=\"token comment\"># helloworld-go   http://helloworld-go.default.svc.cluster.local   helloworld-go-00001   helloworld-go-00001   True    </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在集群中任意一个pod中访问，出现hello world 则表示测试成功，仔细观察在没有请求之后则pod会被删除</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> http://helloworld-go.default.svc.cluster.local\n<span class=\"token comment\"># Hello World!</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"外部访问配置\"><a href=\"#外部访问配置\" class=\"headerlink\" title=\"外部访问配置\"></a>外部访问配置</h5><blockquote>\n<p>在配置域名之后默认就开启了外部访问</p>\n</blockquote>\n<ul>\n<li>集群外部访问需要配置外部域名,删除默认的<code>_example</code>,然后添加外部的域名,如下yaml示例</li>\n<li>生产中要将这个域名解析到isito的ingress gateway</li>\n<li>同时可以通过标签选择对那些服务生效</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">apiVersion: v1\ndata:\n  naturelr.cc: <span class=\"token string\">\"\"</span>\nkind: ConfigMap\nmetadata:\n  name: config-domain\n  namespace: knative-serving<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看knative服务可以发现url发生了变化</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k get ksvc                             \n<span class=\"token comment\"># NAME            URL                                        LATESTCREATED         LATESTREADY           READY   REASON</span>\n<span class=\"token comment\"># helloworld-go   http://helloworld-go.default.naturelr.cc   helloworld-go-00001   helloworld-go-00001   True    </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>访问测试,这里使用nodeport代替</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Host: helloworld-go.default.naturelr.cc\"</span> http://192.168.49.2:31733\n<span class=\"token comment\"># Hello World!</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"CR之间的关系链\"><a href=\"#CR之间的关系链\" class=\"headerlink\" title=\"CR之间的关系链\"></a>CR之间的关系链</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl tree ksvc helloworld-go\n<span class=\"token comment\"># NAMESPACE  NAME                                                               READY  REASON  AGE</span>\n<span class=\"token comment\"># default    Service/helloworld-go                                              True           30m</span>\n<span class=\"token comment\"># default    ├─Configuration/helloworld-go                                      True           30m</span>\n<span class=\"token comment\"># default    │ └─Revision/helloworld-go-00001                                   True           30m</span>\n<span class=\"token comment\"># default    │   ├─Deployment/helloworld-go-00001-deployment                    -              30m</span>\n<span class=\"token comment\"># default    │   │ └─ReplicaSet/helloworld-go-00001-deployment-7b8765df6b       -              30m</span>\n<span class=\"token comment\"># default    │   │   └─Pod/helloworld-go-00001-deployment-7b8765df6b-zqrt5      True           6s </span>\n<span class=\"token comment\"># default    │   ├─Image/helloworld-go-00001-cache-user-container               -              30m</span>\n<span class=\"token comment\"># default    │   └─PodAutoscaler/helloworld-go-00001                            True           30m</span>\n<span class=\"token comment\"># default    │     ├─Metric/helloworld-go-00001                                 True           30m</span>\n<span class=\"token comment\"># default    │     └─ServerlessService/helloworld-go-00001                      True           30m</span>\n<span class=\"token comment\"># default    │       ├─Endpoints/helloworld-go-00001                            -              30m</span>\n<span class=\"token comment\"># default    │       │ └─EndpointSlice/helloworld-go-00001-qbm6x                -              30m</span>\n<span class=\"token comment\"># default    │       ├─Service/helloworld-go-00001                              -              30m</span>\n<span class=\"token comment\"># default    │       └─Service/helloworld-go-00001-private                      -              30m</span>\n<span class=\"token comment\"># default    │         └─EndpointSlice/helloworld-go-00001-private-vhvfq        -              30m</span>\n<span class=\"token comment\"># default    └─Route/helloworld-go                                              True           30m</span>\n<span class=\"token comment\"># default      ├─Ingress/helloworld-go                                          True           30m</span>\n<span class=\"token comment\"># default      │ ├─VirtualService/helloworld-go-ingress                         -              30m</span>\n<span class=\"token comment\"># default      │ └─VirtualService/helloworld-go-mesh                            -              30m</span>\n<span class=\"token comment\"># default      └─Service/helloworld-go                                          -              30m</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"灰度\"><a href=\"#灰度\" class=\"headerlink\" title=\"灰度\"></a>灰度</h4><ul>\n<li>发布v1版本(上面创建的需要删除)</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">apiVersion: serving.knative.dev/v1\nkind: Service\nmetadata:\n  name: helloworld-go\nspec:\n  template:\n    metadata:\n      labels:\n        app: helloworld-go-v1\n      annotations:\n        autoscaling.knative.dev/target: <span class=\"token string\">\"10\"</span>\n      name: helloworld-go-v1\n    spec:\n      containers:\n        - image: registry.cn-hangzhou.aliyuncs.com/knative-sample/helloworld-go:160e4dc8\n          ports:\n            - name: http1\n              containerPort: <span class=\"token number\">8080</span>\n          env:\n            - name: TARGET\n              value: <span class=\"token string\">\"World v1\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>发布v2版本</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> serving.knative.dev/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> helloworld<span class=\"token punctuation\">-</span>go\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> helloworld<span class=\"token punctuation\">-</span>go<span class=\"token punctuation\">-</span>v2\n      <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">autoscaling.knative.dev/target</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"10\"</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> helloworld<span class=\"token punctuation\">-</span>go<span class=\"token punctuation\">-</span>v2 <span class=\"token comment\"># 必须要以—为版本分隔符</span>\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> registry.cn<span class=\"token punctuation\">-</span>hangzhou.aliyuncs.com/knative<span class=\"token punctuation\">-</span>sample/helloworld<span class=\"token punctuation\">-</span>go<span class=\"token punctuation\">:</span>160e4dc8\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http1\n              <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n          <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> TARGET\n              <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"World v2\"</span> <span class=\"token comment\"># 区分v1</span>\n  <span class=\"token key atrule\">traffic</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 灰度流量百分比</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">tag</span><span class=\"token punctuation\">:</span> v1\n      <span class=\"token key atrule\">revisionName</span><span class=\"token punctuation\">:</span> helloworld<span class=\"token punctuation\">-</span>go<span class=\"token punctuation\">-</span>v1\n      <span class=\"token key atrule\">percent</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">tag</span><span class=\"token punctuation\">:</span> v2\n      <span class=\"token key atrule\">revisionName</span><span class=\"token punctuation\">:</span> helloworld<span class=\"token punctuation\">-</span>go<span class=\"token punctuation\">-</span>v2\n      <span class=\"token key atrule\">percent</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">tag</span><span class=\"token punctuation\">:</span> latest\n      <span class=\"token key atrule\">latestRevision</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n      <span class=\"token key atrule\">percent</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>请求效果</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># root@d5ce4828c4d3:/# curl -H \"Host:  helloworld-go.default.naturelr.cc\" http://192.168.49.2:31733</span>\n<span class=\"token comment\"># Hello World v2!</span>\n<span class=\"token comment\"># root@d5ce4828c4d3:/# curl -H \"Host:  helloworld-go.default.naturelr.cc\" http://192.168.49.2:31733</span>\n<span class=\"token comment\"># Hello World v1!</span>\n<span class=\"token comment\"># root@d5ce4828c4d3:/# curl -H \"Host:  helloworld-go.default.naturelr.cc\" http://192.168.49.2:31733</span>\n<span class=\"token comment\"># Hello World v2!</span>\n<span class=\"token comment\"># root@d5ce4828c4d3:/# curl -H \"Host:  helloworld-go.default.naturelr.cc\" http://192.168.49.2:31733</span>\n<span class=\"token comment\"># Hello World v1!</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"伸缩配置\"><a href=\"#伸缩配置\" class=\"headerlink\" title=\"伸缩配置\"></a>伸缩配置</h4><ul>\n<li><p>流量模式分为恐慌模式和稳定模式</p>\n<ul>\n<li>稳定模式是以60s为一个周期统计平均并发数，且达到目标并发数的2倍则触发</li>\n<li>恐慌模式是以6s为一个周期统计平均并发数</li>\n</ul>\n</li>\n<li><p>全局配置在这里修改</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k <span class=\"token parameter variable\">-n</span> knative-serving  get cm config-autoscaler<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>最大伸缩和最小伸缩,以及目标</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">autoscaling.knative.dev/target</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"10\"</span>\n      <span class=\"token key atrule\">autoscaling.knative.dev/minScale</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2\"</span>\n      <span class=\"token key atrule\">autoscaling.knative.dev/maxScale</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"10\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://knative.dev/docs/\">https://knative.dev/docs/</a><br><a href=\"https://knative-sample.com/\">https://knative-sample.com/</a></p>\n","tags":["knative","serverless"]},{"title":"k8s节点管理","url":"/2020/01/17/k8s%E8%8A%82%E7%82%B9%E7%AE%A1%E7%90%86/","content":"<p>节点管理</p>\n<span id=\"more\"></span>\n\n<h6 id=\"查看节点\"><a href=\"#查看节点\" class=\"headerlink\" title=\"查看节点\"></a>查看节点</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查看节点基本信息</span>\nkubectl get nodes\n\n<span class=\"token comment\">#查看节点详细信息</span>\nkubectl get nodes <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span> <span class=\"token parameter variable\">-o</span> wide\nkubectl describe nodes <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"节点调度\"><a href=\"#节点调度\" class=\"headerlink\" title=\"节点调度\"></a>节点调度</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#停止向此节点调度</span>\nkubectl cordon <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#将此节点上的所有容器驱逐到其他节点</span>\nkubectl drain <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#恢复向此节点调度pod</span>\nkubectl uncordon <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#打标签</span>\nkubectl label nodes <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>标签key<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>标签val<span class=\"token operator\">></span>  \n\n<span class=\"token comment\">#删除节点标签</span>\nkubectl label nodes <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>标签key<span class=\"token operator\">></span>- <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"删除节点\"><a href=\"#删除节点\" class=\"headerlink\" title=\"删除节点\"></a>删除节点</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 驱逐节点上的pod</span>\nkubectl drain <span class=\"token operator\">&lt;</span>节点<span class=\"token operator\">></span> --delete-local-data <span class=\"token parameter variable\">--force</span> --ignore-daemonsets\n\n<span class=\"token comment\"># 删除节点</span>\nkubectl delete nodes <span class=\"token operator\">&lt;</span>节点<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","tags":["k8s"]},{"title":"kubeadm修改证书过期时间","url":"/2022/08/19/kubeadm%E4%BF%AE%E6%94%B9%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4/","content":"<p>kubeadm搭建的集群证书默认ca是时间，其他组件的证书是一年如果一年没有执行升级的操作就会过期</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>所以一劳永逸直接修改kubeadm证书时间</p>\n</blockquote>\n<h4 id=\"下载源码\"><a href=\"#下载源码\" class=\"headerlink\" title=\"下载源码\"></a>下载源码</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone <span class=\"token parameter variable\">-b</span> v1.27.3 https://github.com/kubernetes/kubernetes.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"修改证书时间\"><a href=\"#修改证书时间\" class=\"headerlink\" title=\"修改证书时间\"></a>修改证书时间</h4><ul>\n<li>ca 证书</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">code ./staging/src/k8s.io/client-go/util/cert/cert.go<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>NewSelfSignedCACert</code>这个函数的NotAfter字段</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// NewSelfSignedCACert creates a CA certificate</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">NewSelfSignedCACert</span><span class=\"token punctuation\">(</span>cfg Config<span class=\"token punctuation\">,</span> key crypto<span class=\"token punctuation\">.</span>Signer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>x509<span class=\"token punctuation\">.</span>Certificate<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  now <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  tmpl <span class=\"token operator\">:=</span> x509<span class=\"token punctuation\">.</span>Certificate<span class=\"token punctuation\">&#123;</span>\n    SerialNumber<span class=\"token punctuation\">:</span> <span class=\"token function\">new</span><span class=\"token punctuation\">(</span>big<span class=\"token punctuation\">.</span>Int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetInt64</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    Subject<span class=\"token punctuation\">:</span> pkix<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">&#123;</span>\n      CommonName<span class=\"token punctuation\">:</span>   cfg<span class=\"token punctuation\">.</span>CommonName<span class=\"token punctuation\">,</span>\n      Organization<span class=\"token punctuation\">:</span> cfg<span class=\"token punctuation\">.</span>Organization<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    DNSNames<span class=\"token punctuation\">:</span>              <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>cfg<span class=\"token punctuation\">.</span>CommonName<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    NotBefore<span class=\"token punctuation\">:</span>             now<span class=\"token punctuation\">.</span><span class=\"token function\">UTC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    NotAfter<span class=\"token punctuation\">:</span>              now<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>duration365d <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">UTC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 需要修改的地方</span>\n    KeyUsage<span class=\"token punctuation\">:</span>              x509<span class=\"token punctuation\">.</span>KeyUsageKeyEncipherment <span class=\"token operator\">|</span> x509<span class=\"token punctuation\">.</span>KeyUsageDigitalSignature <span class=\"token operator\">|</span> x509<span class=\"token punctuation\">.</span>KeyUsageCertSign<span class=\"token punctuation\">,</span>\n    BasicConstraintsValid<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    IsCA<span class=\"token punctuation\">:</span>                  <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  certDERBytes<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> x509<span class=\"token punctuation\">.</span><span class=\"token function\">CreateCertificate</span><span class=\"token punctuation\">(</span>cryptorand<span class=\"token punctuation\">.</span>Reader<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tmpl<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tmpl<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">Public</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> x509<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCertificate</span><span class=\"token punctuation\">(</span>certDERBytes<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>loopback证书</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">GenerateSelfSignedCertKeyWithFixtures</span><span class=\"token punctuation\">(</span>host <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> alternateIPs <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>net<span class=\"token punctuation\">.</span>IP<span class=\"token punctuation\">,</span> alternateDNS <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> fixtureDirectory <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  validFrom <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>time<span class=\"token punctuation\">.</span>Hour<span class=\"token punctuation\">)</span> <span class=\"token comment\">// valid an hour earlier to avoid flakes due to clock skew</span>\n  maxAge <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span>Minute <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token comment\">// one year self-signed certs 这里需要修改</span>\n\n  baseName <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s_%s_%s\"</span><span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span><span class=\"token function\">ipsToStrings</span><span class=\"token punctuation\">(</span>alternateIPs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>alternateDNS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  certFixturePath <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>fixtureDirectory<span class=\"token punctuation\">,</span> baseName<span class=\"token operator\">+</span><span class=\"token string\">\".crt\"</span><span class=\"token punctuation\">)</span>\n  keyFixturePath <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>fixtureDirectory<span class=\"token punctuation\">,</span> baseName<span class=\"token operator\">+</span><span class=\"token string\">\".key\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>组件证书</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">code ./cmd/kubeadm/app/constants/constants.go<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>CertificateValidity</code>这个变量</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// CertificateValidity defines the validity for all the signed certificates generated by kubeadm</span>\nCertificateValidity <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>Hour <span class=\"token operator\">*</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">365</span> <span class=\"token comment\">// 需要修改的地方</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"重新编译\"><a href=\"#重新编译\" class=\"headerlink\" title=\"重新编译\"></a>重新编译</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">make</span> all <span class=\"token assign-left variable\">WHAT</span><span class=\"token operator\">=</span>cmd/kubeadm <span class=\"token assign-left variable\">GOFLAGS</span><span class=\"token operator\">=</span>-v\n\n<span class=\"token function\">make</span> all <span class=\"token assign-left variable\">WHAT</span><span class=\"token operator\">=</span>cmd/kube-apiserver <span class=\"token assign-left variable\">GOFLAGS</span><span class=\"token operator\">=</span>-v<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>编译好的二进制文件中在<code>_output/bin/</code></p>\n<p>建议先使用yum等工具安装官方的kubeadm之后进行二进制替换</p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://blog.51cto.com/legehappy/4895615\">https://blog.51cto.com/legehappy/4895615</a></p>\n","tags":["k8s","kubeadm","证书"]},{"title":"karmada安装和基本使用","url":"/2024/04/01/karmada%E5%AE%89%E8%A3%85%E5%92%8C%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","content":"<p>karmada是k8s的一个多集群实现方案</p>\n<span id=\"more\"></span>\n\n<p><img src=\"/../images/karmada-1.png\" alt=\"alt text\"></p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li>下载二进制客户端文件<a href=\"https://github.com/karmada-io/karmada/releases\">https://github.com/karmada-io/karmada/releases</a></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/karmada-io/karmada/releases/download/v1.9.0/karmadactl-linux-amd64.tgz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>也可以安装 kubectl的插件</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl krew <span class=\"token function\">install</span> karmada<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>安装karmadactl到集群中</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">karmadactl init <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>安装完成之后默认会在目录<code>/etc/karmada/</code>添加这个虚拟集群的相关文件</li>\n</ul>\n<h4 id=\"多集群成员\"><a href=\"#多集群成员\" class=\"headerlink\" title=\"多集群成员\"></a>多集群成员</h4><h5 id=\"push模式添加成员\"><a href=\"#push模式添加成员\" class=\"headerlink\" title=\"push模式添加成员\"></a>push模式添加成员</h5><ul>\n<li>添加集群push模式，–kubeconfig决定要加入的集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">karmadactl <span class=\"token parameter variable\">--kubeconfig</span> /etc/karmada/karmada-apiserver.config <span class=\"token function\">join</span> cluster1  --cluster-kubeconfig<span class=\"token operator\">=</span><span class=\"token environment constant\">$HOME</span>/.kube/config<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"查看集群\"><a href=\"#查看集群\" class=\"headerlink\" title=\"查看集群\"></a>查看集群</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">--kubeconfig</span> /etc/karmada/karmada-apiserver.config get clusters<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"pull模式添加成员\"><a href=\"#pull模式添加成员\" class=\"headerlink\" title=\"pull模式添加成员\"></a>pull模式添加成员</h5><ul>\n<li>获取注册命令和凭据</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">karmadactl  token create --print-register-command <span class=\"token parameter variable\">--kubeconfig</span> /etc/karmada/karmada-apiserver.config\n<span class=\"token comment\"># karmadactl register 10.7.143.254:32443 --cluster-name cluster2 --token po8les.a05eqne2hqwy8gly --discovery-token-ca-cert-hash sha256:3bfb29c846092b61af5bb51a47a88bd52ed834d8468158a7fb341180d5a3bc74</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除集群\"><a href=\"#删除集群\" class=\"headerlink\" title=\"删除集群\"></a>删除集群</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">--kubeconfig</span> /etc/karmada/karmada-apiserver.config delete cluster cluster2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"应用分发\"><a href=\"#应用分发\" class=\"headerlink\" title=\"应用分发\"></a>应用分发</h4><ul>\n<li>首先查看下有那些集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">--kubeconfig</span> /etc/karmada/karmada-apiserver.config get clusters\n<span class=\"token comment\"># NAME         VERSION    MODE   READY   AGE</span>\n<span class=\"token comment\"># cluster1     v1.24.12   Push   True    10d</span>\n<span class=\"token comment\"># kubernetes   v1.24.12   Pull   True    9d</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>部署分发策略</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># propagationpolicy.yaml</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> policy.karmada.io/v1alpha1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PropagationPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">-</span>policy <span class=\"token comment\"># The default namespace is `default`.</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">resourceSelectors</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n      <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx <span class=\"token comment\"># If no namespace is specified, the namespace is inherited from the parent object scope.</span>\n  <span class=\"token key atrule\">placement</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">clusterAffinity</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">clusterNames</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> cluster1\n        <span class=\"token punctuation\">-</span> kubernetes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>部署上面的分发策略</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">--kubeconfig</span> /etc/karmada/karmada-apiserver.config apply <span class=\"token parameter variable\">-f</span> propagationpolicy.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>其中一个集群中部署一个测试的nginx</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl create deployment nginx <span class=\"token parameter variable\">--image</span> nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>在karmada中也创建一个测试的</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">--kubeconfig</span> /etc/karmada/karmada-apiserver.config create deployment nginx <span class=\"token parameter variable\">--image</span> nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>在第二个集群中可以看到同步过来了，此时同步完成</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">--kubeconfig</span><span class=\"token operator\">=</span>./2.yaml get po\n<span class=\"token comment\"># NAME                    READY   STATUS    RESTARTS   AGE</span>\n<span class=\"token comment\"># nginx-8f458dc5b-w526c   1/1     Running   0          5m43s</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>当我们删除karmada中的nginx</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">--kubeconfig</span> /etc/karmada/karmada-apiserver.config delete deploy\n<span class=\"token comment\"># deployment.apps \"nginx\" deleted</span>\n\n<span class=\"token comment\"># 集群1的资源还在</span>\nkubectl get po\n<span class=\"token comment\"># NAME                    READY   STATUS    RESTARTS   AGE</span>\n<span class=\"token comment\"># nginx-8f458dc5b-t6z4k   1/1     Running   0          7m35s</span>\n\n<span class=\"token comment\"># 集群2的资源不在了</span>\nkubectl <span class=\"token parameter variable\">--kubeconfig</span><span class=\"token operator\">=</span>./2.yaml get po\n<span class=\"token comment\"># No resources found in default namespace.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>将集群1的测试资源也删除</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete deploy nginx\n<span class=\"token comment\"># deployment.apps \"nginx\" deleted</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>我们只在karmada中部署nginx测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">--kubeconfig</span> /etc/karmada/karmada-apiserver.config create deployment nginx <span class=\"token parameter variable\">--image</span> nginx\n<span class=\"token comment\">#deployment.apps/nginx created</span>\n\n<span class=\"token comment\"># 可以看到 ready是2/1 因为2个集群都同步了</span>\nkubectl <span class=\"token parameter variable\">--kubeconfig</span> /etc/karmada/karmada-apiserver.config get deploy  \n<span class=\"token comment\"># NAME    READY   UP-TO-DATE   AVAILABLE   AGE</span>\n<span class=\"token comment\"># nginx   2/1     2            2           15s</span>\n\n<span class=\"token comment\"># 使用karmadactl查看</span>\nkarmadactl <span class=\"token parameter variable\">--kubeconfig</span><span class=\"token operator\">=</span>/etc/karmada/karmada-apiserver.config  get po\n<span class=\"token comment\"># NAME                     CLUSTER      READY   STATUS    RESTARTS   AGE</span>\n<span class=\"token comment\"># nginx-74f96fcc5c-zphtd   cluster1     1/1     Running   0          6m6s</span>\n<span class=\"token comment\"># nginx-8f458dc5b-mkpx9    kubernetes   1/1     Running   0          11m</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>从上面的现象可以看到同步的时候karmada集群中必须有需要同步资源,当成员集群已经有了该资源则在删除的时候不会删除</li>\n</ul>\n<h4 id=\"覆盖应用\"><a href=\"#覆盖应用\" class=\"headerlink\" title=\"覆盖应用\"></a>覆盖应用</h4><blockquote>\n<p>覆盖主要用于重写一些属性</p>\n</blockquote>\n<ul>\n<li>保存下面的覆盖策略为overridepolicy.yaml</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># overridepolicy.yaml</span>\napiVersion: policy.karmada.io/v1alpha1\nkind: OverridePolicy\nmetadata:\n  name: example\nspec:\n  resourceSelectors:\n    - apiVersion: apps/v1\n      kind: Deployment\n      name: nginx\n      labelSelector:\n        matchLabels:\n          app: nginx\n  overrideRules:\n    - targetCluster:\n        clusterNames:\n          - cluster1\n      overriders:\n        imageOverrider:\n          - component: Tag\n            operator: replace\n            value: <span class=\"token string\">'1.20'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>apply这个策略到karmada集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">--kubeconfig</span> /etc/karmada/karmada-apiserver.config apply <span class=\"token parameter variable\">-f</span> overridepolicy.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看集群1的nginx已经被改为1.20版本了</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl  get deploy <span class=\"token parameter variable\">-o</span> wide \n<span class=\"token comment\"># NAME    READY   UP-TO-DATE   AVAILABLE   AGE     CONTAINERS   IMAGES       SELECTOR</span>\n<span class=\"token comment\"># nginx   1/1     1            1           6m12s   nginx        nginx:1.20   app=nginx</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://karmada.io/zh/docs\">https://karmada.io/zh/docs</a></p>\n","tags":["k8s","多集群","karmada"]},{"title":"kibana总是创建index-pattern","url":"/2022/01/13/kibana%E6%80%BB%E6%98%AF%E5%88%9B%E5%BB%BAindex-pattern/","content":"<p>在kibana界面点击创建index pattern失败一直让创建index pattern</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>今天在做升级修复log4j时升级之后打开kibana界面创建index pattern总是创建不出来，将es删除重建也不行，看日志也没发现一些错误，于是就想是不是kibana的问题，于是重启kibana和删除es中一些kibana的索引解决了</p>\n</blockquote>\n<h4 id=\"1-删除es索引\"><a href=\"#1-删除es索引\" class=\"headerlink\" title=\"1.删除es索引\"></a>1.删除es索引</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 先查看所有索引</span>\n<span class=\"token function\">curl</span> <span class=\"token number\">127.0</span>.0.1:9200/_cat/indices?v<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>可能还有其他类似.kibana_1之类的我也删除了</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#删除kibana的索引</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XDELETE</span> <span class=\"token number\">127.0</span>.0.1:9200/.kibana?pretty<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-重启kibana容器\"><a href=\"#2-重启kibana容器\" class=\"headerlink\" title=\"2.重启kibana容器\"></a>2.重启kibana容器</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl rollout restart deployment kibana<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","tags":["kibana"]},{"title":"kubeadm搭建高可用集群","url":"/2021/09/04/kubeadm%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/","content":"<p>kubeadm是官方的一个用来管理k8s集群的工具</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>kubeadm，虽然是官方的是使用起来也不是很方便，他需要在每个节点上进行安装，在大规模的时候需要借助其他工具</p>\n</blockquote>\n<h4 id=\"环境信息说明\"><a href=\"#环境信息说明\" class=\"headerlink\" title=\"环境信息说明\"></a>环境信息说明</h4><ul>\n<li>4台2c2g虚拟机,官方要求最少2c4g但是我的机器没这么高配置，如果仅仅是学习的话够用了</li>\n<li>系统为centos7</li>\n<li>lb方案为了方便使用hosts文件，生产环境请使用lvs,haproxy,nginx等方案</li>\n<li>默认为最新版本</li>\n</ul>\n<h4 id=\"节点初始化\"><a href=\"#节点初始化\" class=\"headerlink\" title=\"节点初始化\"></a>节点初始化</h4><blockquote>\n<p>所有节点无论master和node</p>\n</blockquote>\n<h5 id=\"设置主机名字和PS1为主机IP\"><a href=\"#设置主机名字和PS1为主机IP\" class=\"headerlink\" title=\"设置主机名字和PS1为主机IP\"></a>设置主机名字和PS1为主机IP</h5><blockquote>\n<p>为了方便统一设置主机名为ip地址</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'export PS1=\"[\\u@\\H \\W]\\$ \"'</span> <span class=\"token operator\">>></span> .bashrc\n\n<span class=\"token assign-left variable\">IP</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ip</span> addr show <span class=\"token punctuation\">$(</span>ip route <span class=\"token operator\">|</span><span class=\"token function\">grep</span> default <span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print$5&#125;'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-w</span> inet <span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">'[ /]+'</span> <span class=\"token string\">'&#123;print $3&#125;'</span><span class=\"token variable\">)</span></span>\nhostnamectl set-hostname <span class=\"token variable\">$IP</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"关闭swap交换分区\"><a href=\"#关闭swap交换分区\" class=\"headerlink\" title=\"关闭swap交换分区\"></a>关闭swap交换分区</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 临时关闭</span>\nswapoff <span class=\"token parameter variable\">-a</span>\n\n<span class=\"token comment\"># 永久关闭</span>\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-ri</span> <span class=\"token string\">'s/.*swap.*/#&amp;/'</span> /etc/fstab<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"关闭selinux\"><a href=\"#关闭selinux\" class=\"headerlink\" title=\"关闭selinux\"></a>关闭selinux</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">setenforce <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/^SELINUX=.*/SELINUX=disable/g'</span> /etc/selinux/config<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"关闭防火墙\"><a href=\"#关闭防火墙\" class=\"headerlink\" title=\"关闭防火墙\"></a>关闭防火墙</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl stop firewalld <span class=\"token operator\">&amp;&amp;</span> systemctl disable firewalld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"同步时间\"><a href=\"#同步时间\" class=\"headerlink\" title=\"同步时间\"></a>同步时间</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ntpdate cn.pool.ntp.org<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"yum源\"><a href=\"#yum源\" class=\"headerlink\" title=\"yum源\"></a>yum源</h5><p>默认源很慢，改为阿里云的</p>\n<h6 id=\"修改centos7源为阿里云\"><a href=\"#修改centos7源为阿里云\" class=\"headerlink\" title=\"修改centos7源为阿里云\"></a>修改centos7源为阿里云</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-o</span> /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"修改centos7-epel源为阿里云\"><a href=\"#修改centos7-epel源为阿里云\" class=\"headerlink\" title=\"修改centos7 epel源为阿里云\"></a>修改centos7 epel源为阿里云</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-o</span> /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"安装k8s源\"><a href=\"#安装k8s源\" class=\"headerlink\" title=\"安装k8s源\"></a>安装k8s源</h6><p>官方的国内不可用，使用阿里云的</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> /etc/yum.repos.d/kubernetes.repo</span>\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"安装CRI\"><a href=\"#安装CRI\" class=\"headerlink\" title=\"安装CRI\"></a>安装CRI</h5><h6 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h6><div class=\"note warning\"><p>k8s 1.24之后无法直接支持docker,需要安装<a href=\"https://github.com/Mirantis/cri-dockerd\">cri-dockerd</a></p>\n</div>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 添加配置文件</span>\n\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> /etc/docker/daemon.json </span>\n&#123;\n    \"oom-score-adjust\": -1000,\n    \"log-driver\": \"json-file\",\n    \"log-opts\": &#123;\n        \"max-size\": \"100m\",\n        \"max-file\": \"3\"\n    &#125;,\n    \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n    \"live-restore\": true,\n    \"max-concurrent-downloads\": 10,\n    \"max-concurrent-uploads\": 10,\n    \"registry-mirrors\": [\"http://hub-mirror.c.163.com\",\"https://registry.docker-cn.com\",\"https://docker.mirrors.ustc.edu.cn\"],\n    \"storage-driver\": \"overlay2\",\n    \"storage-opts\": [\n        \"overlay2.override_kernel_check=true\"\n    ]\n&#125;\nEOF</span>\n\n<span class=\"token comment\"># 安装docker</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://get.docker.com <span class=\"token operator\">|</span> <span class=\"token function\">bash</span> <span class=\"token parameter variable\">-s</span> <span class=\"token function\">docker</span> <span class=\"token parameter variable\">--mirror</span> Aliyun\n\n<span class=\"token comment\"># 重启docker</span>\nsystemctl restart <span class=\"token function\">docker</span> <span class=\"token operator\">&amp;&amp;</span> systemctl <span class=\"token builtin class-name\">enable</span> <span class=\"token function\">docker</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"安装containerd\"><a href=\"#安装containerd\" class=\"headerlink\" title=\"安装containerd\"></a>安装containerd</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 加载内核模块</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> /etc/modules-load.d/containerd.conf</span>\noverlay\nbr_netfilter\nEOF</span>\n\nmodprobe overlay\nmodprobe br_netfilter<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 使用阿里的源</span>\n<span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/yum.repos.d/docker-ce.repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\nyum <span class=\"token function\">install</span> containerd.io-1.6.6-3.1.el7.x86_64.rpm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"安装k8s组件\"><a href=\"#安装k8s组件\" class=\"headerlink\" title=\"安装k8s组件\"></a>安装k8s组件</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> kubelet kubeadm kubectl\nsystemctl <span class=\"token builtin class-name\">enable</span> kubelet <span class=\"token operator\">&amp;&amp;</span> systemctl start kubelet\n\n<span class=\"token comment\"># ipvs模式推荐安装</span>\nyum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> ipvsadm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"安装master\"><a href=\"#安装master\" class=\"headerlink\" title=\"安装master\"></a>安装master</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 执行master节点初始化</span>\nkubeadm init <span class=\"token punctuation\">\\</span>\n    --control-plane-endpoint <span class=\"token string\">\"k8s-api:6443\"</span> <span class=\"token punctuation\">\\</span>\n    --upload-certs <span class=\"token punctuation\">\\</span>\n    --image-repository registry.aliyuncs.com/google_containers <span class=\"token punctuation\">\\</span>\n    --pod-network-cidr<span class=\"token operator\">=</span><span class=\"token number\">172.16</span>.1.0/16 <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">--v</span><span class=\"token operator\">=</span><span class=\"token number\">6</span>\n\n<span class=\"token comment\"># 初始化完成之后会打印出加入集群的命令</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>加入集群的命令可以使用kubeadm重新获取,参考后面kubeadm</p>\n<h5 id=\"其他两个master节点\"><a href=\"#其他两个master节点\" class=\"headerlink\" title=\"其他两个master节点\"></a>其他两个master节点</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubeadm <span class=\"token function\">join</span> k8s-api:6443 <span class=\"token parameter variable\">--token</span> iq5o5t.8mtwj9117qhed25p <span class=\"token punctuation\">\\</span>\n       --discovery-token-ca-cert-hash sha256:95fda448e3cb56303efc3bccbc785e000c3124a9a045ff2ed33c854cb9ee3108 <span class=\"token punctuation\">\\</span>\n       --control-plane --certificate-key f075fe20e799440297bf9bd48942134da1c95f1c00ef94d7d208a2a66ce87bda<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"安装工作节点\"><a href=\"#安装工作节点\" class=\"headerlink\" title=\"安装工作节点\"></a>安装工作节点</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubeadm <span class=\"token function\">join</span> k8s-api:6443 <span class=\"token parameter variable\">--token</span> iq5o5t.8mtwj9117qhed25p <span class=\"token punctuation\">\\</span>\n        --discovery-token-ca-cert-hash sha256:95fda448e3cb56303efc3bccbc785e000c3124a9a045ff2ed33c854cb9ee3108<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"cni\"><a href=\"#cni\" class=\"headerlink\" title=\"cni\"></a>cni</h4><blockquote>\n<p>k8s支持很多cni，这里使用了最简单的flannel</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"清理master上的污点\"><a href=\"#清理master上的污点\" class=\"headerlink\" title=\"清理master上的污点\"></a>清理master上的污点</h4><blockquote>\n<p>默认安装完成之后master是有污点的</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl taint nodes <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span> node-role.kubernetes.io/master:NoSchedule-<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>新版本叫<code>control-plane</code></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl taint nodes <span class=\"token parameter variable\">--all</span> node-role.kubernetes.io/control-plane-<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"metrics-server\"><a href=\"#metrics-server\" class=\"headerlink\" title=\"metrics-server\"></a>metrics-server</h4><blockquote>\n<p>metrics-server提供了最基础的metrics手机，使用<code>kubectl top</code>和hpa时需要他，当然也可以使用kube-prometheus代理</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"ingress\"><a href=\"#ingress\" class=\"headerlink\" title=\"ingress\"></a>ingress</h4><blockquote>\n<p>ingress官方只是定义了crd，具体实现由第三方实现，这里使用了常见的nginx-ingreses</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml\n\n<span class=\"token comment\"># 使用helm</span>\nhelm repo <span class=\"token function\">add</span> ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\nhelm <span class=\"token function\">install</span> ingress-nginx ingress-nginx/ingress-nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"dashboard\"><a href=\"#dashboard\" class=\"headerlink\" title=\"dashboard\"></a>dashboard</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/kubernetes/dashboard/v2.3.1/aio/deploy/recommended.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"删除清理\"><a href=\"#删除清理\" class=\"headerlink\" title=\"删除清理\"></a>删除清理</h5><blockquote>\n<p>master要保持奇数！</p>\n</blockquote>\n<ul>\n<li>驱逐节点上的pod</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl drain <span class=\"token operator\">&lt;</span>节点<span class=\"token operator\">></span> --delete-local-data <span class=\"token parameter variable\">--force</span> --ignore-daemonsets<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>删除节点</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete <span class=\"token operator\">&lt;</span>节点<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>在要删除的节点上执行</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubeadm reset<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>清理iptables规则</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iptables <span class=\"token parameter variable\">-F</span> <span class=\"token operator\">&amp;&amp;</span> iptables <span class=\"token parameter variable\">-t</span> nat <span class=\"token parameter variable\">-F</span> <span class=\"token operator\">&amp;&amp;</span> iptables <span class=\"token parameter variable\">-t</span> mangle <span class=\"token parameter variable\">-F</span> <span class=\"token operator\">&amp;&amp;</span> iptables <span class=\"token parameter variable\">-X</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>如果使用了ipvs模式</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ipvsadm <span class=\"token parameter variable\">-C</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>清理安装目录和文件</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> ~/.kube\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /opt/cni\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /etc/cni\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /etc/kubernetes\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /var/etcd <span class=\"token comment\"># master节点才有</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>卸载组件</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum remove kube*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>重启</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"升级版本\"><a href=\"#升级版本\" class=\"headerlink\" title=\"升级版本\"></a>升级版本</h5><blockquote>\n<p>k8s升级版本最大不能跨越两个次版本，其版本通过二进制的版本来确定要通过kubeadm去每个节点上执行</p>\n</blockquote>\n<h6 id=\"master节点\"><a href=\"#master节点\" class=\"headerlink\" title=\"master节点\"></a>master节点</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token parameter variable\">-y</span> update kubeadm kubelet kubectl\n\n<span class=\"token comment\"># 验证版本</span>\nkubeadm version\n\n<span class=\"token comment\"># 查看升级计划</span>\nkubeadm upgrade plan\n\n<span class=\"token comment\"># 执行升级</span>\n<span class=\"token function\">sudo</span> kubeadm upgrade apply v1.y.x\n\n<span class=\"token comment\"># 其他的master</span>\n<span class=\"token function\">sudo</span> kubeadm upgrade <span class=\"token function\">node</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"工作节点\"><a href=\"#工作节点\" class=\"headerlink\" title=\"工作节点\"></a>工作节点</h6><ul>\n<li>驱逐节点上pod</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl drain <span class=\"token operator\">&lt;</span>节点<span class=\"token operator\">></span> --delete-local-data <span class=\"token parameter variable\">--force</span> --ignore-daemonsets<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>升级节点</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum update <span class=\"token parameter variable\">-y</span> kubelet\n\nsystemctl restart kubelet<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>恢复节点</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl uncordon <span class=\"token operator\">&lt;</span>节点<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h6><ul>\n<li>查看cni是不是需要根据版本升级</li>\n<li>dashboard等k8s应用升级</li>\n</ul>\n<h4 id=\"kubeadm常用命令\"><a href=\"#kubeadm常用命令\" class=\"headerlink\" title=\"kubeadm常用命令\"></a>kubeadm常用命令</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 打印默认的初始化配置</span>\nkubeadm config print init-defaults <span class=\"token operator\">></span> kubeadm-config.yaml\n\n<span class=\"token comment\"># 打印默认的初始化配置,巴罗了kubeetl组件</span>\nkubeadm config print init-defaults --component-configs KubeletConfiguration\n\n<span class=\"token comment\"># 使用配置文件来初始化集群</span>\nkubeadm init <span class=\"token parameter variable\">--config</span> kubeadm-config.yaml\n\n<span class=\"token comment\"># 查看所需要的镜像列表</span>\nkubeadm config images list\n\n<span class=\"token comment\"># 下载默认配置的镜像</span>\nkubeadm config images pull\n\n<span class=\"token comment\"># 由于国内无法访问gcr.io，可以指定仓库，这里使用了阿里的镜像</span>\nkubeadm config images pull --image-repository registry.aliyuncs.com/google_containers --kubernetes-version latest\n\n<span class=\"token comment\"># 获取key</span>\nkubeadm init phase upload-certs --upload-certs\n\n<span class=\"token comment\"># 获取加入节点的命令</span>\nkubeadm token create --print-join-command <span class=\"token parameter variable\">--ttl</span> <span class=\"token number\">0</span>\n\n<span class=\"token comment\"># 将获取的key组合成添加master的命令</span>\nkubeadm <span class=\"token function\">join</span> k8s-api:6443 \n<span class=\"token parameter variable\">--token</span> <span class=\"token operator\">&lt;</span>token<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span>\n--discovery-token-ca-cert-hash <span class=\"token operator\">&lt;</span>cert<span class=\"token operator\">></span><span class=\"token punctuation\">\\</span>\n--control-plane <span class=\"token punctuation\">\\</span>\n--certificate-key <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span>\n<span class=\"token parameter variable\">--v</span><span class=\"token operator\">=</span><span class=\"token number\">6</span>\n\n<span class=\"token comment\"># 加入master的简便命令</span>\nkubeadm token create --print-join-command --certificate-key <span class=\"token variable\"><span class=\"token variable\">$(</span>kubeadm init phase upload-certs --upload-certs<span class=\"token operator\">|</span><span class=\"token function\">tail</span> <span class=\"token parameter variable\">-1</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># kubeadm init 和 kubeadm join 如果cpu配置太低可以使用下面的参数忽略</span>\n--ignore-preflight-errors<span class=\"token operator\">=</span>Mem,NumCPU\n\n<span class=\"token comment\"># 查看证书时间</span>\nkubeadm certs check-expiration\n\n<span class=\"token comment\"># 证书续期</span>\nkubeadm certs renew all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/\">https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/</a><br><a href=\"https://kubernetes.io/zh/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/\">https://kubernetes.io/zh/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/</a><br><a href=\"https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker\">https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker</a></p>\n","tags":["k8s","kubeadm"]},{"title":"kubebuilder扩展k8s","url":"/2021/11/02/kubebuilder%E6%89%A9%E5%B1%95k8s/","content":"<p>kubebuilder是个专门用于开发k8s的框架</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>k8s有很多资源如deployment,cronjob等资源，这些资源的行为则由位于controller-manager中的各个资源控制器来实现逻辑,</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>在<a href=\"https://github.com/kubernetes-sigs/kubebuilder/releases\">https://github.com/kubernetes-sigs/kubebuilder/releases</a>下载合适的二进制文件并放入path中</p>\n<h4 id=\"术语\"><a href=\"#术语\" class=\"headerlink\" title=\"术语\"></a>术语</h4><ul>\n<li>GV: Api Group和Version<ul>\n<li>API Group 是相关API功能的集合，</li>\n<li>每个 Group 拥有一或多个Versions</li>\n</ul>\n</li>\n<li>GVK: Group Version Kind<ul>\n<li>每个GV都包含很多个api 类型，称之为Kinds,不同Version同一个Kinds可能不同</li>\n</ul>\n</li>\n<li>GVR: Group Version Rsource<ul>\n<li>Resource 是 Kind 的对象标识，一般来Kind和Resource 是1:1 的,但是有时候存在 1:n 的关系，不过对于Operator来说都是 1:1 的关系</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1 <span class=\"token comment\"># 这个是 GV，G 是 apps，V 是 v1</span>\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment    <span class=\"token comment\"># 这个就是 Kind</span>\n<span class=\"token key atrule\">sepc</span><span class=\"token punctuation\">:</span>               <span class=\"token comment\"># 加上下放的 spec 就是 Resource了</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>根据GVK K8s就能找到你到底要创建什么类型的资源，根据你定义的Spec创建好资源之后就成为了Resource，也就是GVR。GVK&#x2F;GVR就是K8s资源的坐标，是我们创建&#x2F;删除&#x2F;修改&#x2F;读取资源的基础</p>\n<p>类似这样的关系&#x2F;group&#x2F;version&#x2F;kind</p>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><h5 id=\"项目初始化\"><a href=\"#项目初始化\" class=\"headerlink\" title=\"项目初始化\"></a>项目初始化</h5><p>完整代码:<a href=\"https://github.com/NatureLR/code-example/tree/master/operator\">https://github.com/NatureLR/code-example/tree/master/operator</a></p>\n<h5 id=\"需求背景\"><a href=\"#需求背景\" class=\"headerlink\" title=\"需求背景\"></a>需求背景</h5><blockquote>\n<p>我们在部署服务的时候经常需要同时部署deployment和svc这样很复杂，于是自定义一个资源叫appx，让appx来创建svc和deployment</p>\n</blockquote>\n<h5 id=\"初始化文件夹\"><a href=\"#初始化文件夹\" class=\"headerlink\" title=\"初始化文件夹\"></a>初始化文件夹</h5><p>在项目文件夹下执行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubebuilder init <span class=\"token parameter variable\">--repo</span> github.com/naturelr/code-example/operator <span class=\"token parameter variable\">--domain</span> naturelr.cc --skip-go-version-check<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这个时候目录下会产生一些文件</p>\n<pre class=\"line-numbers language-text.\" data-language=\"text.\"><code class=\"language-text.\">├── Dockerfile # 编译docker镜像\n├── Makefile # 编译部署相关的脚本，常用功能都在里面\n├── PROJECT # 项目说明\n├── config # 这个目录都是一些需要安装到集群的文件\n│   ├── default # 默认配置\n│   ├── manager # crd文件\n│   ├── prometheus # 监控相关的如ServiceMonitor\n│   └── rbac # rbac文件\n├── go.mod\n├── go.sum\n├── hack\n│   └── boilerplate.go.txt\n└── main.go\n\n6 directories, 24 files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"创建api模板\"><a href=\"#创建api模板\" class=\"headerlink\" title=\"创建api模板\"></a>创建api模板</h5><p>执行下面的命令，创建api，期间会问你是不是需要创建Resource和Controller，这里我们都选y</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubebuilder create api <span class=\"token parameter variable\">--group</span> appx <span class=\"token parameter variable\">--version</span> v1 <span class=\"token parameter variable\">--kind</span> Appx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>完成之后多了一些目录</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">.\n├── Dockerfile\n├── Makefile\n├── PROJECT\n├── api\n│   └── v1 # 我们自定义的api\n├── bin\n│   └── controller-gen # 生成文件的程序\n├── config\n├── controllers\n│   ├── appx_controller.go # 控制逻辑写在这\n│   └── suite_test.go # 测试用例\n├── go.mod\n├── go.sum\n├── hack\n│   └── boilerplate.go.txt\n└── main.go\n\n12 directories, 10 files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h5><h5 id=\"定义字段\"><a href=\"#定义字段\" class=\"headerlink\" title=\"定义字段\"></a>定义字段</h5><p>在<code>api/v1/application_types.go</code>中的AppxSpec写上需要的字段</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> AppxSpec <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token comment\">// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster</span>\n <span class=\"token comment\">// Important: Run \"make\" to regenerate code after modifying this file</span>\n\n <span class=\"token comment\">// Foo is an example field of Appx. Edit appx_types.go to remove/update</span>\n Image <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"image,omitempty\"`</span>\n Port  <span class=\"token builtin\">int</span>    <span class=\"token string\">`json:\"port,omitempty\"`</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后执行<code>make manifests generate</code>命令生成crd文件</p>\n<p>生成的crd文件在<code>config/crd/bases/</code>中</p>\n<h5 id=\"实现控制器\"><a href=\"#实现控制器\" class=\"headerlink\" title=\"实现控制器\"></a>实现控制器</h5><blockquote>\n<p>有crd只能在k8s中定义cr但是k8s并不知道如何处理这些cr，所以我们要实现控制器来处理这些逻辑</p>\n</blockquote>\n<p>我们需要实现的控制器逻辑在<code>controllers/application_controller.go</code>中的<code>Reconcile</code>函数中</p>\n<p>逻辑改完之后就需要上测试了，执行<code>make install</code>安装crd到集群，注意他会安装到<code>~/.kube/config</code>这个配置文件中的集群</p>\n<p>然后执行<code>make run</code>运行控制器，他会打印很多日志</p>\n<ul>\n<li>获取cd，拿到cr中定义的镜像和端口号</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">appx <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>appxv1<span class=\"token punctuation\">.</span>Appx<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>NamespacedName<span class=\"token punctuation\">,</span> appx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token keyword\">return</span> ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>拿到信息之后需要创建对应的deployment对象和service对象，需要特别注意的是要管理创建的资源，不然删除的不会删除创建的子资源</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">svc <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>apiv1<span class=\"token punctuation\">.</span>Service<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>NamespacedName<span class=\"token punctuation\">,</span> svc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">IgnoreNotFound</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span> \n    <span class=\"token keyword\">return</span> ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err<span class=\"token comment\">// 如果有错误且不是没找到的话就直接返回错误</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 没找到就创建资源</span>\n  <span class=\"token keyword\">if</span> svc<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n    l<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"创建service:\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"名字\"</span><span class=\"token punctuation\">,</span> appx<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n    svc <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>apiv1<span class=\"token punctuation\">.</span>Service<span class=\"token punctuation\">&#123;</span>\n      ObjectMeta<span class=\"token punctuation\">:</span> metav1<span class=\"token punctuation\">.</span>ObjectMeta<span class=\"token punctuation\">&#123;</span>\n        Name<span class=\"token punctuation\">:</span>      req<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span>\n        Namespace<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>Namespace<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        Spec<span class=\"token punctuation\">:</span> apiv1<span class=\"token punctuation\">.</span>ServiceSpec<span class=\"token punctuation\">&#123;</span>\n        Selector<span class=\"token punctuation\">:</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        Ports<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>apiv1<span class=\"token punctuation\">.</span>ServicePort<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>\n          Port<span class=\"token punctuation\">:</span>       <span class=\"token function\">int32</span><span class=\"token punctuation\">(</span>appx<span class=\"token punctuation\">.</span>Spec<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          TargetPort<span class=\"token punctuation\">:</span> intstr<span class=\"token punctuation\">.</span><span class=\"token function\">FromInt</span><span class=\"token punctuation\">(</span>appx<span class=\"token punctuation\">.</span>Spec<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 关联 appx和deployment</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> controllerutil<span class=\"token punctuation\">.</span><span class=\"token function\">SetOwnerReference</span><span class=\"token punctuation\">(</span>appx<span class=\"token punctuation\">,</span> svc<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>Scheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">return</span> ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> svc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">return</span> ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    l<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"创建service成功\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>如果已经有此资源,那么可能就需要更新资源了</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// svc</span>\nsvc<span class=\"token punctuation\">.</span>Spec<span class=\"token punctuation\">.</span>Ports <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>apiv1<span class=\"token punctuation\">.</span>ServicePort<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>Port<span class=\"token punctuation\">:</span> <span class=\"token function\">int32</span><span class=\"token punctuation\">(</span>appx<span class=\"token punctuation\">.</span>Spec<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\nl<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"更新service\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">,</span> appx<span class=\"token punctuation\">.</span>Spec<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> svc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">return</span> ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> err\n<span class=\"token punctuation\">&#125;</span>\nl<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"service更新完成\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>到此一个简单的crd的控制逻辑就完成了</p>\n<h5 id=\"status\"><a href=\"#status\" class=\"headerlink\" title=\"status\"></a>status</h5><blockquote>\n<p>上面创建的cr当查看的时候并不会显示status</p>\n</blockquote>\n<ul>\n<li>在<code>api/v1/appx_types.go</code>中找到<code>AppxStatus</code>,添加上合适的字段</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// AppxStatus defines the observed state of Appx</span>\n<span class=\"token keyword\">type</span> AppxStatus <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// INSERT ADDITIONAL STATUS FIELD - define observed state of cluster</span>\n  <span class=\"token comment\">// Important: Run \"make\" to regenerate code after modifying this file</span>\n  <span class=\"token comment\">// 必须要有json tag</span>\n  Workload <span class=\"token builtin\">int32</span>  <span class=\"token string\">`json:\"workload\"`</span>\n  Svc      <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"svc\"`</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在<code>controllers/application_controller.go</code>中更新status字段</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">appx<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">.</span>Workload <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>deploy<span class=\"token punctuation\">.</span>Spec<span class=\"token punctuation\">.</span>Replicas\nappx<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">.</span>Svc <span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> svc<span class=\"token punctuation\">.</span>Spec<span class=\"token punctuation\">.</span>Ports<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">.</span><span class=\"token function\">Status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> appx<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>上面自会显示在get xx -o yaml当中,当我们想显示在 get xxx -o wide中时需要在<code>api/v1/appx_types.go</code>中添加注释，具体参考<a href=\"https://book.kubebuilder.io/reference/generating-crd.html\">https://book.kubebuilder.io/reference/generating-crd.html</a></li>\n</ul>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">// 注意type要对应上字段！！！\n//+kubebuilder:printcolumn:JSONPath=\".status.workload\",name=Workload,type=integer\n//+kubebuilder:printcolumn:JSONPath=\".status.svc\",name=Svc,type=string<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>同样需要重新生成crd并且要安装</li>\n</ul>\n<h5 id=\"event事件\"><a href=\"#event事件\" class=\"headerlink\" title=\"event事件\"></a>event事件</h5><blockquote>\n<p>evnet事件，有的时候告诉我们一些重要的信息</p>\n</blockquote>\n<ul>\n<li>在<code>controllers/application_controller.go</code>中增加字段</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// AppxReconciler reconciles a Appx object</span>\n<span class=\"token keyword\">type</span> AppxReconciler <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n  client<span class=\"token punctuation\">.</span>Client\n  Scheme   <span class=\"token operator\">*</span>runtime<span class=\"token punctuation\">.</span>Scheme\n  Recorder record<span class=\"token punctuation\">.</span>EventRecorder<span class=\"token comment\">//增加事件结构体</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>调用</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">r<span class=\"token punctuation\">.</span>Recorder<span class=\"token punctuation\">.</span><span class=\"token function\">Event</span><span class=\"token punctuation\">(</span>appx<span class=\"token punctuation\">,</span> apiv1<span class=\"token punctuation\">.</span>EventTypeNormal<span class=\"token punctuation\">,</span> <span class=\"token string\">\"找到cr\"</span><span class=\"token punctuation\">,</span> appx<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>在<code>main.go</code>中加上Recorder的初始化逻辑</li>\n</ul>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> err <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>controllers<span class=\"token punctuation\">.</span>AppxReconciler<span class=\"token punctuation\">&#123;</span>\n  Client<span class=\"token punctuation\">:</span>   mgr<span class=\"token punctuation\">.</span><span class=\"token function\">GetClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  Scheme<span class=\"token punctuation\">:</span>   mgr<span class=\"token punctuation\">.</span><span class=\"token function\">GetScheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  Recorder<span class=\"token punctuation\">:</span> mgr<span class=\"token punctuation\">.</span><span class=\"token function\">GetEventRecorderFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Appx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//+</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetupWithManager</span><span class=\"token punctuation\">(</span>mgr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n  setupLog<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"unable to create controller\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"controller\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Appx\"</span><span class=\"token punctuation\">)</span>\n  os<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ kubectl get event\nLAST SEEN   TYPE     REASON   OBJECT     MESSAGE\n2m55s       Normal   找到cr     appx       \n4s          Normal   找到cr     appx/foo   foo  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 初始化</span>\nkubebuilder init <span class=\"token parameter variable\">--repo</span> github.com/naturelr/code-example/operator <span class=\"token parameter variable\">--domain</span> naturelr.cc --skip-go-version-check\n\n<span class=\"token comment\"># 创建 api</span>\nkubebuilder create api <span class=\"token parameter variable\">--group</span> appx <span class=\"token parameter variable\">--version</span> v1 <span class=\"token parameter variable\">--kind</span> Appx\n\n<span class=\"token comment\"># 创建webhook</span>\nkubebuilder create webhook <span class=\"token parameter variable\">--group</span> nodes <span class=\"token parameter variable\">--version</span> v1 <span class=\"token parameter variable\">--kind</span> Appx <span class=\"token parameter variable\">--defaulting</span> --programmatic-validation\n\n<span class=\"token comment\"># 生成文件</span>\n<span class=\"token function\">make</span> manifests generate\n\n<span class=\"token comment\"># 安装crd等文件</span>\n<span class=\"token function\">make</span> <span class=\"token function\">install</span>\n\n<span class=\"token comment\"># 本地调试运行</span>\n<span class=\"token function\">make</span> run<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://book.kubebuilder.io/introduction.html\">https://book.kubebuilder.io/introduction.html</a><br><a href=\"https://lailin.xyz/post/operator-03-kubebuilder-tutorial.html\">https://lailin.xyz/post/operator-03-kubebuilder-tutorial.html</a></p>\n","tags":["k8s","go"]},{"title":"kubectl插件管理工具krew","url":"/2021/04/18/kubectl%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7krew/","content":"<p>krew是一个kubectl的插件管理系统</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>\n  <span class=\"token builtin class-name\">set</span> -x<span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>mktemp <span class=\"token parameter variable\">-d</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token assign-left variable\">OS</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> <span class=\"token string\">'[:upper:]'</span> <span class=\"token string\">'[:lower:]'</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token assign-left variable\">ARCH</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-m</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'s/x86_64/amd64/'</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'s/\\(arm\\)\\(64\\)\\?.*/\\1\\2/'</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'s/aarch64$/arm64/'</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSLO</span> <span class=\"token string\">\"https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz\"</span> <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token function\">tar</span> zxvf krew.tar.gz <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token assign-left variable\">KREW</span><span class=\"token operator\">=</span>./krew-<span class=\"token string\">\"<span class=\"token variable\">$&#123;OS&#125;</span>_<span class=\"token variable\">$&#123;ARCH&#125;</span>\"</span> <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token string\">\"<span class=\"token variable\">$KREW</span>\"</span> <span class=\"token function\">install</span> krew\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>添加环境变量</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$&#123;KREW_ROOT<span class=\"token operator\">:-</span>$HOME<span class=\"token operator\">/</span>.krew&#125;</span>/bin:<span class=\"token environment constant\">$PATH</span>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h5><ul>\n<li><p>kubectl krew install xxx 安装插件</p>\n</li>\n<li><p>kubectl krew uninstall xxx 卸载插件</p>\n</li>\n<li><p>kubectl krew list xxx 查看插件</p>\n</li>\n<li><p>kubectl krew update xxx 升级插件</p>\n</li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://krew.sigs.k8s.io/\">https://krew.sigs.k8s.io</a></p>\n","tags":["k8s"]},{"title":"kubectl多集群管理","url":"/2020/09/14/kubectl%E5%A4%9A%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86/","content":"<p>大部分情况我们不只一个k8s集群，这个时候我们需要快速的在各个集群之间进行切换。且省去每次都要申明namespace</p>\n<span id=\"more\"></span>\n<h4 id=\"使用kubectx\"><a href=\"#使用kubectx\" class=\"headerlink\" title=\"使用kubectx\"></a>使用kubectx</h4><p>kubectx是个可以快速的切换集群且能设置namespace的官方<a href=\"https://github.com/ahmetb/kubectx\">地址</a></p>\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> kubectx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>为了能够使用模糊推查找荐安装<a href=\"https://github.com/junegunn/fzf\">fzf</a></p>\n<h5 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h5><ul>\n<li>kubectx 可以看到所有环境，通过模糊查找可快速选择集群</li>\n<li>kubens 可以看到当前环境所有的namespace，可以快速选择NS，选择NS之后执行的命令就是在当前NS中执行了，比如执行kubectl get pods 显示的就是当前NS所有的pod，不需要加上-n xxxx</li>\n</ul>\n<h4 id=\"多集群的管理\"><a href=\"#多集群的管理\" class=\"headerlink\" title=\"多集群的管理\"></a>多集群的管理</h4><p>kubectx 所有解决了多个环境和命名空间的问题，但是没能解决快速添加集群<br>利用kubectl的环境变量拿到所有的环境然后通过<code>kubectl config view --raw</code>合并成为一个config文件，脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#! /bin/bash</span>\n<span class=\"token comment\"># 合并$HOME/.kube/configs目录下的文件到$HOME/.kube/config</span>\n<span class=\"token comment\"># 配合kubectx工具进行环境切换</span>\n\n<span class=\"token assign-left variable\">CONFIGPATH</span><span class=\"token operator\">=</span><span class=\"token environment constant\">$HOME</span>/.kube/configs\n\n<span class=\"token assign-left variable\">FILEPATH</span><span class=\"token operator\">=</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">C</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ls</span> $CONFIGPATH/*yaml<span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span><span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"找到配置文件:\"</span><span class=\"token variable\">$C</span>\n    <span class=\"token assign-left variable\">FILEPATH</span><span class=\"token operator\">=</span><span class=\"token variable\">$FILEPATH</span><span class=\"token variable\">$C</span><span class=\"token builtin class-name\">:</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">KUBECONFIG</span><span class=\"token operator\">=</span><span class=\"token variable\">$FILEPATH</span>\n\nkubectl config view <span class=\"token parameter variable\">--raw</span> <span class=\"token operator\">></span> <span class=\"token environment constant\">$HOME</span>/.kube/config\n\n<span class=\"token builtin class-name\">unset</span> KUBECONFIG<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>添加集群就只需要把集群的config文件保存到<code>$HOME/.kube/configs</code>下，名字为xxx.yaml，然后执行脚本，删除同理只需要将该集群的yaml文件从<code>$HOME/.kube/configs</code>中移除在执行脚本</p>\n</li>\n<li><p>该方案有个问题就是如果集群中所有的名字一样就无法区分,随意随后开发了一个脚本使用链接kubeconfig到~&#x2F;config来切换，参考<a href=\"https://github.com/NatureLR/kubectl-cc\">https://github.com/NatureLR/kubectl-cc</a></p>\n</li>\n</ul>\n","tags":["k8s"]},{"title":"kubectl格式化输出","url":"/2020/07/21/kubectl%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/","content":"<p>有时候需要输出一些k8s的资源信息为一个表格比如统计资源你的数量</p>\n<span id=\"more\"></span>\n<p>将下面你的模板保存为template.txt</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">>></span> template.txt</span>\n命名空间              名字           保留内存              保留cpu        最大内存  最大cpu\nmetadata.namespace   metadata.name spec.containers[*].resources.requests.memory  spec.containers[*].resources.requests.cpu   spec.containers[*].resources.limits.memory  spec.containers[*].resources.limits.cpu\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后执行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get deployment  <span class=\"token parameter variable\">-o</span> custom-columns-file<span class=\"token operator\">=</span>template.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>除了用模板文件还可以用</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get deployment  <span class=\"token parameter variable\">-o</span> custom-columns<span class=\"token operator\">=</span>名字:.metadata.name,数量:.spec.replicas<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","tags":["k8s"]},{"title":"kustomize","url":"/2021/07/21/kustomize/","content":"<p>kustomize是k8s-sig开发的一个用来渲染一些k8s资源文件的工具</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>主要场景就是多集群环境，一个服务在每个集群的配置不一样很容易造成混乱</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>macos</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> kustomize<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>二进制手动安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token string\">\"https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh\"</span>  <span class=\"token operator\">|</span> <span class=\"token function\">bash</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>kubectl</p>\n<blockquote>\n<p>kubectl 已经集成了kustomize</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl kustomize\nkubectl apply <span class=\"token parameter variable\">-k</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"动手尝试\"><a href=\"#动手尝试\" class=\"headerlink\" title=\"动手尝试\"></a>动手尝试</h4><h5 id=\"1-创建kustomize描述文件\"><a href=\"#1-创建kustomize描述文件\" class=\"headerlink\" title=\"1.创建kustomize描述文件\"></a>1.创建kustomize描述文件</h5><p>创建一个名为<code>base</code>的文件夹并在文件夹里一个文件名为<code>kustomization.yaml</code>且写入如下内容</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 设置ns</span>\n<span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> test\n<span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> deployment.yaml\n<span class=\"token comment\"># 生成config</span>\n<span class=\"token key atrule\">configMapGenerator</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">-</span>configmap<span class=\"token punctuation\">-</span><span class=\"token number\">1</span>\n  <span class=\"token key atrule\">envs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> env.conf\n  <span class=\"token key atrule\">literals</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> FOO=Bar\n<span class=\"token comment\"># 生成secrets</span>\n<span class=\"token key atrule\">secretGenerator</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">-</span>secret<span class=\"token punctuation\">-</span><span class=\"token number\">2</span>\n  <span class=\"token key atrule\">literals</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> username=admin\n  <span class=\"token comment\"># 通过文件生成secret</span>\n  <span class=\"token key atrule\">files</span><span class=\"token punctuation\">:</span> \n  <span class=\"token punctuation\">-</span> passwd.conf\n<span class=\"token key atrule\">generatorOptions</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 只对生成的资源有效</span>\n  <span class=\"token key atrule\">disableNameSuffixHash</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 关闭生成的资源文件的hash值</span>\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 所有生产的资源都会有下面的标签</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> generated\n  <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 所有生产的资源都会有下面的注解</span>\n    <span class=\"token key atrule\">note</span><span class=\"token punctuation\">:</span> generated\n<span class=\"token comment\"># 镜像替换</span>\n<span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">newName</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">newTag</span><span class=\"token punctuation\">:</span> alpine<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"2-创建依引用资源文件\"><a href=\"#2-创建依引用资源文件\" class=\"headerlink\" title=\"2.创建依引用资源文件\"></a>2.创建依引用资源文件</h5><p>创建kustomization.yaml中引用的文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 创建deployment.yaml 此文件为为模板文件</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span>base/deployment.yaml</span>\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: test\nspec:\n  selector:\n    matchLabels:\n      app: test\n  template:\n    metadata:\n      labels:\n        app: test\n    spec:\n      containers:\n      - name: test\n        image: nginx\n        resources:\n          limits:\n            memory: \"128Mi\"\n            cpu: \"500m\"\n        ports:\n        - containerPort: 80\n        volumeMount:\n        - name: config\n          mountPath: /config\n      volumes:\n      - name: config\n        configMap:\n          name: example-configmap-1\nEOF</span>\n\n<span class=\"token comment\"># 创建配置文件</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span>base/env.conf</span>\nkey=abcdef\ndebug=true\nEOF</span>\n\n<span class=\"token comment\"># 创建secrets文件</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span>base/passwd.conf</span>\nuser=root\npasswd=123456\nEOF</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>最终文件结构如下：<br>base<br>├── deployment.yaml<br>├── env.conf<br>├── kustomization.yaml<br>└── passwd.conf</p>\n<h5 id=\"3-编译\"><a href=\"#3-编译\" class=\"headerlink\" title=\"3.编译\"></a>3.编译</h5><p>执行<code>kubectl kustomize base</code>或者<code>kustomize build base</code></p>\n<p>这时候我们发现生成的内容当中\b自动从.conf文件自动转换为k8s资源文件，且镜像被替换了生成的文件都有我们指定的标签</p>\n<h4 id=\"基准覆盖\"><a href=\"#基准覆盖\" class=\"headerlink\" title=\"基准覆盖\"></a>基准覆盖</h4><p>上面我们创建的只是一个基本k8s资源文件，在实际中一个服务在各个环境会有细微的区别那么我们可以通过kustomize在基本上进行一些修改</p>\n<p>假如上面的服务我们要部署到测试环境中，在测试环境中ns需要加上一些dev等字段，且还有一些节点亲和等操作</p>\n<h5 id=\"1-创建测试环境的kustomize文件\"><a href=\"#1-创建测试环境的kustomize文件\" class=\"headerlink\" title=\"1.创建测试环境的kustomize文件\"></a>1.创建测试环境的kustomize文件</h5><ul>\n<li>在base同级目录中创建一个叫<code>overlays</code>的目录,且在里面在创建个目录叫dev</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> overlays/dev<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>写入<code>kustomization.yaml</code></li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 引用基准资源</span>\n<span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> ../../base\n<span class=\"token comment\"># 设置ns名字前缀</span>\n<span class=\"token key atrule\">namePrefix</span><span class=\"token punctuation\">:</span> dev<span class=\"token punctuation\">-</span>\n<span class=\"token comment\"># 设置ns名字后缀</span>\n<span class=\"token key atrule\">nameSuffix</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"-a\"</span>\n<span class=\"token comment\"># 设置公共标签</span>\n<span class=\"token key atrule\">commonLabels</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span> dev\n<span class=\"token comment\"># 设置公共注解</span>\n<span class=\"token key atrule\">commonAnnotations</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">owner</span><span class=\"token punctuation\">:</span> foo\n<span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">newName</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">newTag</span><span class=\"token punctuation\">:</span> alpine\n<span class=\"token comment\"># 合并补丁</span>\n<span class=\"token key atrule\">patchesStrategicMerge</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> nodeAffinity.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"2-创建测试环境的引用文件\"><a href=\"#2-创建测试环境的引用文件\" class=\"headerlink\" title=\"2.创建测试环境的引用文件\"></a>2.创建测试环境的引用文件</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span>overlays/dev/nodeAffinity.yaml</span>\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: test\n  spec:\n    template:\n      spec:\n        affinity:\n          nodeAffinity:\n            requiredDuringSchedulingIgnoredDuringExecution:\n              nodeSelectorTerms:\n              - matchExpressions:\n                - key: kubernetes.io/os\n                  operator: Exists\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>此时文件结构如下<br>.<br>├── base<br>│   ├── deployment.yaml<br>│   ├── env.conf<br>│   ├── kustomization.yaml<br>│   └── passwd.conf<br>└── overlays<br>    └── dev<br>        ├── kustomization.yaml<br>        ├── nodeAffinity.yaml</p>\n<h5 id=\"3-编译测试环境\"><a href=\"#3-编译测试环境\" class=\"headerlink\" title=\"3.编译测试环境\"></a>3.编译测试环境</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kustomize build overlays/dev<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>其他环境如法炮制，这样就可以优雅的管理服务在各个资源的描述，在结合argcd的情况下会更加的舒服！</p>\n<h4 id=\"kubectl使用\"><a href=\"#kubectl使用\" class=\"headerlink\" title=\"kubectl使用\"></a>kubectl使用</h4><blockquote>\n<p>kubectl中只需要在后面加上-k即可对应命令如下</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-k</span>\nkubectl apply <span class=\"token parameter variable\">--kustomize</span>\n\nkubectl get <span class=\"token parameter variable\">-k</span>\nkubectl <span class=\"token function\">diff</span> <span class=\"token parameter variable\">-k</span>\nkubectl describe <span class=\"token parameter variable\">-k</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><ul>\n<li><p><a href=\"https://kubernetes.io/zh/docs/tasks/manage-kubernetes-objects/kustomization\">https://kubernetes.io/zh/docs/tasks/manage-kubernetes-objects/kustomization</a></p>\n</li>\n<li><p><a href=\"https://kustomize.io/\">https://kustomize.io</a></p>\n</li>\n</ul>\n","tags":["k8s"]},{"title":"kvm","url":"/2021/05/22/kvm%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","content":"<p>kvm基于linux内核的虚拟化</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>kvm是基于硬件的完全虚拟化，集成在内核中，qemu主要外部设备的虚拟化两者各发挥所长</p>\n</blockquote>\n<h4 id=\"检查硬件是否支持\"><a href=\"#检查硬件是否支持\" class=\"headerlink\" title=\"检查硬件是否支持\"></a>检查硬件是否支持</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> cpu-checker\n\nkvm-ok\nINFO: /dev/kvm exists\nKVM acceleration can be used<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>虚拟机中需要打开虚拟化嵌套支持</p>\n</blockquote>\n<p><img src=\"/../images/pasted-12.png\" alt=\"upload successful\"></p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virtinst virt-manager<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>qemu-kvm -为KVM管理程序提供硬件仿真的软件。</li>\n<li>libvirt-daemon-system -用于将libvirt守护程序作为系统服务运行的配置文件。</li>\n<li>libvirt-clients -用于管理虚拟化平台的软件。</li>\n<li>bridge-utils -一组用于配置以太网桥的命令行工具。</li>\n<li>virtinst -一组用于创建虚拟机的命令行工具。</li>\n<li>virt-manager -易于使用的GUI界面和支持命令行工具，用于通过libvirt管理虚拟机。</li>\n</ul>\n<p>查看运行状态</p>\n<pre class=\"line-numbers language-sehll\" data-language=\"sehll\"><code class=\"language-sehll\">sudo systemctl status libvirtd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"图形化安装操作系统\"><a href=\"#图形化安装操作系统\" class=\"headerlink\" title=\"图形化安装操作系统\"></a>图形化安装操作系统</h4><blockquote>\n<p>找到虚拟系统管理器</p>\n</blockquote>\n<p><img src=\"/../images/pasted-13.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>点击新建，剩下的和vmware很像</p>\n</blockquote>\n<p><img src=\"/../images/pasted-14.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>选择安装类型</p>\n</blockquote>\n<p><img src=\"/../images/pasted-15.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>指定安装的iso镜像文件</p>\n</blockquote>\n<p><img src=\"/../images/pasted-16.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>自动选择系统类型有问题，无法识别，这里改为通用默认类型</p>\n</blockquote>\n<p><img src=\"/../images/pasted-17.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>启动成功进入了安装界面剩下的不做过多介绍</p>\n</blockquote>\n<p><img src=\"/../images/pasted-18.png\" alt=\"upload successful\"></p>\n<h5 id=\"其他界面说明\"><a href=\"#其他界面说明\" class=\"headerlink\" title=\"其他界面说明\"></a>其他界面说明</h5><blockquote>\n<p>系统启动引导界面</p>\n</blockquote>\n<p><img src=\"/../images/pasted-19.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>这里可以看到磁盘的信息</p>\n</blockquote>\n<p><img src=\"/../images/pasted-20.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>这里选择可图形服务器</p>\n</blockquote>\n<p><img src=\"/../images/pasted-21.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>网卡配置界面</p>\n</blockquote>\n<p><img src=\"/../images/pasted-22.png\" alt=\"upload successful\"></p>\n<h4 id=\"命令行创建\"><a href=\"#命令行创建\" class=\"headerlink\" title=\"命令行创建\"></a>命令行创建</h4><blockquote>\n<p>创建一个磁盘容量为15g，类型为qcow2，名字叫centos7.qcow2的虚拟磁盘</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">qemu-img create <span class=\"token parameter variable\">-f</span> qcow2 centos7.qcow2 15G<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>创建虚拟机</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> virt-install <span class=\"token punctuation\">\\</span>\n <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>centos7 <span class=\"token punctuation\">\\</span>\n <span class=\"token parameter variable\">--disk</span> <span class=\"token assign-left variable\">path</span><span class=\"token operator\">=</span>/home/centos7.qcow2 <span class=\"token punctuation\">\\</span>\n <span class=\"token parameter variable\">--vcpus</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">--ram</span><span class=\"token operator\">=</span><span class=\"token number\">1024</span> <span class=\"token punctuation\">\\</span>\n <span class=\"token parameter variable\">--cdrom</span><span class=\"token operator\">=</span>/home/CentOS-7-x86_64-Minimal-2003.iso <span class=\"token punctuation\">\\</span>\n <span class=\"token parameter variable\">--network</span> <span class=\"token assign-left variable\">bridge</span><span class=\"token operator\">=</span>virbr0 <span class=\"token punctuation\">\\</span>\n <span class=\"token parameter variable\">--graphics</span> vnc,listen<span class=\"token operator\">=</span><span class=\"token number\">0.0</span>.0.0 <span class=\"token punctuation\">\\</span>\n --os-type<span class=\"token operator\">=</span>linux <span class=\"token punctuation\">\\</span>\n --os-variant<span class=\"token operator\">=</span><span class=\"token string\">\"centos7.0\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>此时可以通过vnc连接开始安装系统，也可以像图形化界面一样用虚拟机管理器安装</p>\n</blockquote>\n<p><img src=\"/../images/pasted-23.png\" alt=\"upload successful\"></p>\n<h5 id=\"选项说明\"><a href=\"#选项说明\" class=\"headerlink\" title=\"选项说明\"></a>选项说明</h5><blockquote>\n<p>virt-install 中–os-variant可选值</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ubuntu</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> libosinfo-bin\n\n<span class=\"token comment\"># cengtos</span>\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> libosinfo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"virsh常用命令\"><a href=\"#virsh常用命令\" class=\"headerlink\" title=\"virsh常用命令\"></a>virsh常用命令</h5><table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>virsh start xxx</td>\n<td>启动名字为x的非活动虚拟机</td>\n</tr>\n<tr>\n<td>virsh list  –all</td>\n<td>列出虚拟机</td>\n</tr>\n<tr>\n<td>virsh create xxx.xml</td>\n<td>创建虚拟机，没有持久化</td>\n</tr>\n<tr>\n<td>virsh suspend xxx</td>\n<td>暂停虚拟机</td>\n</tr>\n<tr>\n<td>virsh resume xxxx</td>\n<td>启动暂停的虚拟机</td>\n</tr>\n<tr>\n<td>virsh shutdown xxxx</td>\n<td>正常关闭虚拟机</td>\n</tr>\n<tr>\n<td>virsh destroy xxxx</td>\n<td>强制关闭虚拟机</td>\n</tr>\n<tr>\n<td>virsh undefine xxx</td>\n<td>删除虚拟机，只是从列表中删除，且不会删除活动的虚拟机</td>\n</tr>\n<tr>\n<td>virsh dominfo xxx</td>\n<td>显示虚拟机的基本信息</td>\n</tr>\n<tr>\n<td>virsh domname 2</td>\n<td>显示id号为2的虚拟机名</td>\n</tr>\n<tr>\n<td>virsh domid xxx</td>\n<td>显示虚拟机id号</td>\n</tr>\n<tr>\n<td>virsh domuuid xxx</td>\n<td>显示虚拟机的uuid</td>\n</tr>\n<tr>\n<td>virsh domstate xxx</td>\n<td>显示虚拟机的当前状态</td>\n</tr>\n<tr>\n<td>virsh dumpxml xxx</td>\n<td>显示虚拟机的当前配置文件（可能和定义虚拟机时的配置不同，因为当虚拟机启动时，需要给虚拟机 分配id号、uuid、vnc端口号等等）</td>\n</tr>\n<tr>\n<td>virsh setmem x 512000</td>\n<td>给不活动虚拟机设置内存大小</td>\n</tr>\n<tr>\n<td>virsh edit xxx</td>\n<td>编辑配置文件（一般是在刚定义完虚拟机之后）</td>\n</tr>\n</tbody></table>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.iplayio.cn/post/92661051\">https://www.iplayio.cn/post/92661051</a><br><a href=\"https://www.cnblogs.com/saryli/p/11827903.html\">https://www.cnblogs.com/saryli/p/11827903.html</a></p>\n","tags":["kvm","虚拟化"]},{"title":"linux中swap管理","url":"/2024/03/15/linux%E4%B8%ADswap%E7%AE%A1%E7%90%86/","content":"<p>swap交换空叫或者叫虚拟内存，是linux中的一直机制，它允许使用磁盘来作为内存使用，用于内存不是很高的机器中</p>\n<span id=\"more\"></span>\n\n<p>由于是用磁盘来当做内存使用会导致磁盘的读写变多</p>\n<h4 id=\"查看swap\"><a href=\"#查看swap\" class=\"headerlink\" title=\"查看swap\"></a>查看swap</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># swap中不为0则表示开启了</span>\n<span class=\"token function\">free</span> <span class=\"token parameter variable\">-h</span>\n\n<span class=\"token function\">swapon</span> <span class=\"token parameter variable\">-s</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"添加swap\"><a href=\"#添加swap\" class=\"headerlink\" title=\"添加swap\"></a>添加swap</h4><ul>\n<li>创建swap文件，例子是1G大小</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">fallocate <span class=\"token parameter variable\">-l</span> 1G /swapfile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dev/zero <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>/swapfile <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span><span class=\"token number\">1024</span> <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">2097152</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>设置权限</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">600</span> /swapfile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>格式化文件</li>\n</ul>\n<p>mkswap &#x2F;swapfile</p>\n<ul>\n<li>添加</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">swapon</span> /swapfile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>持久化</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"/swapfile swap swap defaults 0 0\"</span> <span class=\"token operator\">>></span> /etc/fstab<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>验证</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">free</span> <span class=\"token parameter variable\">-h</span>\n<span class=\"token comment\">#                total        used        free      shared  buff/cache   available</span>\n<span class=\"token comment\"># Mem:           3.8Gi       3.4Gi       180Mi        95Mi       628Mi       476Mi</span>\n<span class=\"token comment\"># Swap:          1.0Gi       604Mi       419Mi</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"关闭swap\"><a href=\"#关闭swap\" class=\"headerlink\" title=\"关闭swap\"></a>关闭swap</h4><ul>\n<li>停止swap</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">swapoff <span class=\"token parameter variable\">-v</span> /swapfile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p>删除或注释 <code>/etc/fstab</code>中类似<code>/swapfile swap swap defaults 0 0</code></p>\n</li>\n<li><p>删除文件</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> /swapfile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>或者直接关闭所有</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">swapoff <span class=\"token parameter variable\">-a</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"调整交换频率Swappiness\"><a href=\"#调整交换频率Swappiness\" class=\"headerlink\" title=\"调整交换频率Swappiness\"></a>调整交换频率Swappiness</h4><p>内核中有个参数<code>Swappiness</code>可以调整内存到虚拟内存的频率</p>\n<ul>\n<li>临时修改</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">sysctl</span> <span class=\"token parameter variable\">-w</span> <span class=\"token assign-left variable\">vm.swappiness</span><span class=\"token operator\">=</span><span class=\"token number\">10</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>持久化</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"vm.swappiness=10\"</span> <span class=\"token operator\">>></span> /etc/sysctl.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>生效</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sysctl</span> <span class=\"token parameter variable\">-p</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>&#96;</p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://u.sb/debian-swap/\">https://u.sb/debian-swap/</a></p>\n","tags":["swap","memory"]},{"title":"kubectl自带的debug命令","url":"/2022/09/16/kubectl%E8%87%AA%E5%B8%A6%E7%9A%84debug%E5%91%BD%E4%BB%A4/","content":"<p>在使用k8s的时候需要调试的时候我们一般都是exec -it 命令登录上去执行一些调试命令，但是很多镜像为了体积和安全都不内置这些命令，导致我们需要手动安装调试麻烦</p>\n<span id=\"more\"></span>\n\n<p>kubectl在1.18之后新加了一个debug子命令将我们的调试容器放到需要调试的pod中方便调试</p>\n<h4 id=\"支持情况\"><a href=\"#支持情况\" class=\"headerlink\" title=\"支持情况\"></a>支持情况</h4><p>k8s 1.18以后,需要开启特性</p>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><h5 id=\"调试pod\"><a href=\"#调试pod\" class=\"headerlink\" title=\"调试pod\"></a>调试pod</h5><ul>\n<li>将centos添加到pod进行调试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl debug cdebug-64cd86798b-sjxrl <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--image</span><span class=\"token operator\">=</span>centos -- <span class=\"token function\">sh</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>将centos添加到pod进行调试的同时复制一个pod叫cdebug-debug且共享进程，–share-processes&#x3D;true只有在<code>copy</code>是才生效</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl debug cdebug-64cd86798b-sjxrl <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--image</span><span class=\"token operator\">=</span>centos --share-processes --copy-to<span class=\"token operator\">=</span>cdebug-debug -- <span class=\"token function\">sh</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"调试node\"><a href=\"#调试node\" class=\"headerlink\" title=\"调试node\"></a>调试node</h5><ul>\n<li>需要注意的node会挂载在&#x2F;host下</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl debug node/10.69.202.146 <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--image</span><span class=\"token operator\">=</span>centos -- <span class=\"token function\">sh</span>\n<span class=\"token function\">chroot</span> /host<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>此功能也可以通过<a href=\"https://github.com/kvaps/kubectl-node-shell\">node_shell</a>这个kubect插件来实现</p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-running-pod\">https://kubernetes.io/docs/tasks/debug/debug-application/debug-running-pod</a></p>\n","tags":["k8s"]},{"title":"linux删除文件之后磁盘没释放","url":"/2020/08/04/linux-%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E4%B9%8B%E5%90%8E%E6%B2%A1%E9%87%8A%E6%94%BE/","content":"<p>记一下Linux删除文件之后磁盘没释放</p>\n<span id=\"more\"></span>\n\n<h4 id=\"linux-删除文件之后磁盘没释放\"><a href=\"#linux-删除文件之后磁盘没释放\" class=\"headerlink\" title=\"linux 删除文件之后磁盘没释放\"></a>linux 删除文件之后磁盘没释放</h4><blockquote>\n<p>原因则执行删除的时候是解除链接，如果文件是被打开的，进程会继续读取那个文件</p>\n</blockquote>\n<p>正确是置空文件，命令如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> /dev/null<span class=\"token operator\">></span>xxx.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>可以用下面的命令查找一下类似的文件然后重启对应的程序即可</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">lsof</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> deleted<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","tags":["linux"]},{"title":"linux内核升级","url":"/2022/05/02/linux%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7/","content":"<p>centos内核升级</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>升级centos内核</p>\n</blockquote>\n<h4 id=\"包管理安装\"><a href=\"#包管理安装\" class=\"headerlink\" title=\"包管理安装\"></a>包管理安装</h4><h5 id=\"添加epel仓库\"><a href=\"#添加epel仓库\" class=\"headerlink\" title=\"添加epel仓库\"></a>添加epel仓库</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rpm</span> <span class=\"token parameter variable\">--import</span> https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-Uvh</span> http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\n\nyum <span class=\"token parameter variable\">--enablerepo</span><span class=\"token operator\">=</span><span class=\"token string\">\"elrepo-kernel\"</span> list <span class=\"token parameter variable\">--showduplicates</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-r</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> kernel-ml.x86_64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"替换清华源\"><a href=\"#替换清华源\" class=\"headerlink\" title=\"替换清华源\"></a>替换清华源</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 备份</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> /etc/yum.repos.d/elrepo.repo /etc/yum.repos.d/elrepo.repo.bak\n\n<span class=\"token comment\"># 然后编辑 /etc/yum.repos.d/elrepo.repo 文件，在 mirrorlist= 开头的行前面加 # 注释掉；</span>\n<span class=\"token function\">sed</span>  <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/mirrorlist/#mirrorlist/g'</span> /etc/yum.repos.d/elrepo.repo\n\n<span class=\"token comment\"># 并将 elrepo.org/linux 替换为 mirrors.tuna.tsinghua.edu.cn/elrepo</span>\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/elrepo.org\\/linux/mirrors.tuna.tsinghua.edu.cn\\/elrepo/g'</span> /etc/yum.repos.d/elrepo.repo\n\n<span class=\"token comment\"># 注释掉其他仓库</span>\n<span class=\"token function\">sed</span>  <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/http:\\/\\/mirrors.coreix/d'</span> /etc/yum.repos.d/elrepo.repo\n<span class=\"token function\">sed</span>  <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/http:\\/\\/mirror.rackspace.com/d'</span> /etc/yum.repos.d/elrepo.repo\n<span class=\"token function\">sed</span>  <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'/http:\\/\\/repos.lax-noc.com/d'</span> /etc/yum.repos.d/elrepo.repo\n\n<span class=\"token comment\"># 更新软件包缓存</span>\n<span class=\"token function\">sudo</span> yum makecache<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"安装内核\"><a href=\"#安装内核\" class=\"headerlink\" title=\"安装内核\"></a>安装内核</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 稳定版本</span>\nyum <span class=\"token parameter variable\">--enablerepo</span><span class=\"token operator\">=</span>elrepo-kernel <span class=\"token function\">install</span>  kernel-ml-devel kernel-ml <span class=\"token parameter variable\">-y</span>\n\n<span class=\"token comment\"># 安装长期支持版本</span>\nyum <span class=\"token parameter variable\">--enablerepo</span><span class=\"token operator\">=</span>elrepo-kernel <span class=\"token function\">install</span> kernel-lt-devel kernel-lt <span class=\"token parameter variable\">-y</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"设置启动\"><a href=\"#设置启动\" class=\"headerlink\" title=\"设置启动\"></a>设置启动</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看安装的内核</span>\n<span class=\"token function\">awk</span> -F<span class=\"token punctuation\">\\</span>' <span class=\"token string\">'$1==\"menuentry \" &#123;print $2&#125;'</span> /etc/grub2.cfg\n\n<span class=\"token comment\"># 设置启动顺序</span>\ngrub2-set-default <span class=\"token number\">0</span>\n\n<span class=\"token comment\"># 重启生效</span>\n<span class=\"token function\">reboot</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"源码安装\"><a href=\"#源码安装\" class=\"headerlink\" title=\"源码安装\"></a>源码安装</h4><h5 id=\"下载源码\"><a href=\"#下载源码\" class=\"headerlink\" title=\"下载源码\"></a>下载源码</h5><div class=\"note info\"><p>mainline 最新稳定版<br>stable 稳定版本<br>longterm 长时间支持版本</p>\n</div>\n\n<p><a href=\"https://kernel.org/\">官方</a>国内<a href=\"https://mirror.tuna.tsinghua.edu.cn/kernel/v4.x/?C=M&O=D\">清华</a>镜像源</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.17.5.tar.xz\n\n<span class=\"token function\">tar</span> xvf linux-5.17.5.tar.xz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"安装编译工具\"><a href=\"#安装编译工具\" class=\"headerlink\" title=\"安装编译工具\"></a>安装编译工具</h5><div class=\"note info\"><p>centos7默认4.8.5目前最新的5.17内核需要5.1.0以上</p>\n</div>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token comment\"># 编译工具</span>\nyum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> ncurses-devel <span class=\"token function\">make</span> gcc <span class=\"token function\">bc</span> bison flex elfutils-libelf-devel openssl-devel\n\n<span class=\"token comment\"># 升级gcc版本</span>\nyum <span class=\"token function\">install</span>  <span class=\"token parameter variable\">-y</span> centos-release-scl\nyum <span class=\"token function\">install</span>  <span class=\"token parameter variable\">-y</span> devtoolset-7-gcc*\nscl <span class=\"token builtin class-name\">enable</span> devtoolset-7 <span class=\"token function\">bash</span>\ngcc <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"配置内核参数\"><a href=\"#配置内核参数\" class=\"headerlink\" title=\"配置内核参数\"></a>配置内核参数</h5><div class=\"note info\"><p>参数有两种配置方式：手动配置或者复制当前内核配置，最终在源码目录生成.config文件</p>\n</div>\n\n<h6 id=\"直接复制当前内核的参数\"><a href=\"#直接复制当前内核的参数\" class=\"headerlink\" title=\"直接复制当前内核的参数\"></a>直接复制当前内核的参数</h6><pre class=\"line-numbers language-sehll\" data-language=\"sehll\"><code class=\"language-sehll\">cp -v &#x2F;boot&#x2F;config-$(uname -r) .config<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"手动配置\"><a href=\"#手动配置\" class=\"headerlink\" title=\"手动配置\"></a>手动配置</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">make</span> menuconfig<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>新的配置界面</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">make</span> nconfig<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"编译安装内核\"><a href=\"#编译安装内核\" class=\"headerlink\" title=\"编译安装内核\"></a>编译安装内核</h5><h6 id=\"编译源码\"><a href=\"#编译源码\" class=\"headerlink\" title=\"编译源码\"></a>编译源码</h6><div class=\"note info\"><p>-j 参数根据cpu数量来设置以加快编译速度，通常是cpu数量的2倍</p>\n</div>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">make</span> <span class=\"token parameter variable\">-j</span> <span class=\"token number\">8</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">make</span> modules_install <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"设置开机启动\"><a href=\"#设置开机启动\" class=\"headerlink\" title=\"设置开机启动\"></a>设置开机启动</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看启动顺序</span>\n<span class=\"token function\">awk</span> -F<span class=\"token punctuation\">\\</span>' <span class=\"token string\">'$1==\"menuentry \" &#123;print $2&#125;'</span> /etc/grub2.cfg\n\n<span class=\"token comment\"># 设置启动顺序(编号是上面命令看的的顺序)</span>\ngrub2-set-default <span class=\"token number\">0</span>\n\n<span class=\"token comment\"># 重启生效</span>\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"编译rpm包\"><a href=\"#编译rpm包\" class=\"headerlink\" title=\"编译rpm包\"></a>编译rpm包</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token comment\"># 安装rpm构建工具</span>\nyum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> rpm-build rpmlint yum-utils rpmdevtools\n\n<span class=\"token comment\"># 构建rpm包</span>\n<span class=\"token function\">make</span> rpm-pkg\n\n<span class=\"token comment\"># 安装</span>\nyum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> xx.rpm\n\n<span class=\"token comment\"># 重新生成grub.cfg</span>\ngrub2-mkconfig <span class=\"token parameter variable\">-o</span> /boot/grub2/grub.cfg\n\n<span class=\"token comment\"># 设置启动顺序(编号是上面命令看的的顺序)</span>\ngrub2-set-default <span class=\"token number\">0</span>\n\n<span class=\"token comment\"># 重启生效</span>\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://ahelpme.com/linux/centos7/how-to-install-new-gcc-and-development-tools-under-centos-7/\">https://ahelpme.com/linux/centos7/how-to-install-new-gcc-and-development-tools-under-centos-7/</a><br><a href=\"https://nestealin.com/8bab8c2c/\">https://nestealin.com/8bab8c2c/</a><br><a href=\"https://github.com/torvalds/linux\">https://github.com/torvalds/linux</a><br><a href=\"https://www.kernel.org/doc/html/latest\">https://www.kernel.org/doc/html/latest</a></p>\n","tags":["内核"]},{"title":"linux魔法键","url":"/2020/09/29/linux%E9%AD%94%E6%B3%95%E9%94%AE/","content":"<p>利用<code>/proc/sys/kernel/sysrq</code>处理Linux系统不能正常响应用户请求，比如不能重启这时可以使用<br>强制重启<code>echo b &gt;/proc/sys/kernel/sysrq</code></p>\n<span id=\"more\"></span>\n<p>SysRq也称为魔法键，可以使用键盘快捷键的，但还是使用命令明确一些</p>\n<h6 id=\"检查当前状态\"><a href=\"#检查当前状态\" class=\"headerlink\" title=\"检查当前状态\"></a>检查当前状态</h6><p>  cat &#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;sysrq</p>\n<p>各个数字对应的含义</p>\n<ul>\n<li>0 完全关闭</li>\n<li>1 开启sysrq所有功能</li>\n<li>&gt;1 允许的sysrq函数的位掩码 具体请看官方<a href=\"https://www.kernel.org/doc/html/v4.11/admin-guide/sysrq.html\">文档</a></li>\n</ul>\n<h6 id=\"更改SysRq\"><a href=\"#更改SysRq\" class=\"headerlink\" title=\"更改SysRq\"></a>更改SysRq</h6><p>可以使用下面你的命令设置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span> <span class=\"token operator\">></span>/proc/sys/kernel/sysrq<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或者使用sysctl</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sysctl</span> <span class=\"token parameter variable\">-w</span> <span class=\"token assign-left variable\">kernel.sysrq</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span>\n``<span class=\"token variable\"><span class=\"token variable\">`</span>  \n\n<span class=\"token comment\">###### 使用SysRq</span>\n\n<span class=\"token variable\">`</span></span>``shell\n<span class=\"token builtin class-name\">echo</span> <span class=\"token operator\">&lt;</span>command<span class=\"token operator\">></span> <span class=\"token operator\">></span> /proc/sysrq-trigger<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>常用的command如下</p>\n<ul>\n<li>b 立即重启,但是不同步磁盘</li>\n<li>s 尝试同步磁盘</li>\n<li>其他的可以参考<a href=\"https://www.kernel.org/doc/html/v4.11/admin-guide/sysrq.html\">文档</a></li>\n</ul>\n","tags":["linux"]},{"title":"logrotate","url":"/2020/12/14/logrotate/","content":"<p>Linux系统随着时间日志越来越大，我们需要日志转储和处理以免导致磁盘爆满</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>logrotate是一个日志转储工具，centos默认安装并且根据策略每天执行一次</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><blockquote>\n<p>一般cnetos都是默认安装如果没有安装执行：</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> <span class=\"token function\">logrotate</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"常用参数\"><a href=\"#常用参数\" class=\"headerlink\" title=\"常用参数\"></a>常用参数</h4><ul>\n<li>-d 调试 logrotate -d &#x2F;etc&#x2F;logrotate.conf</li>\n<li>-f 强制运行 logrotate -f &#x2F;etc&#x2F;logrotate.conf</li>\n<li>-s 启动备用备用状态文件默认文件在<code>/var/lib/logrotate/logrotate.status</code></li>\n<li>-v 详细模式</li>\n<li>指定logrotate的状态文件 logrotate -vf –s &#x2F;var&#x2F;log&#x2F;logrotate-status &#x2F;etc&#x2F;logrotate.conf 日志文件</li>\n</ul>\n<h4 id=\"默认运行机制\"><a href=\"#默认运行机制\" class=\"headerlink\" title=\"默认运行机制\"></a>默认运行机制</h4><blockquote>\n<p>crontab执行<code>/etc/cron.daily</code>下的<code>logrotate</code>脚本,由脚本调用logrotate执行配置目录和配置文件下的任务</p>\n</blockquote>\n<h4 id=\"配置解释\"><a href=\"#配置解释\" class=\"headerlink\" title=\"配置解释\"></a>配置解释</h4><blockquote>\n<p>配置文件在<code>/etc/logrotate.conf</code>配置目录在<code>/etc/logrotate.d/</code><br>logrotate.d目录防止其他程序的配置文件比如syslog</p>\n</blockquote>\n<h5 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h5><pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\"># see &quot;man logrotate&quot; for details                                      # 详细情况执行&#96;man logrotate\n# rotate log files weekly                                              # 日志文件每周转储一次（全局配置）\nweekly\n\n# keep 4 weeks worth of backlogs                                       # 保存4个转储周期\nrotate 4\n\n# create new (empty) log files after rotating old ones                 # 转储模式为create\ncreate\n\n# use date as a suffix of the rotated file                             # 转储的文件以日期最为后缀\ndateext\n\n# uncomment this if you want your log files compressed                 # 是否压缩\ncompress\n\n# RPM packages drop log rotation information into this directory       # 导入配置目录\ninclude &#x2F;etc&#x2F;logrotate.d\n\n# system-specific logs may be also be configured here.\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"配置目录\"><a href=\"#配置目录\" class=\"headerlink\" title=\"配置目录\"></a>配置目录</h5><blockquote>\n<p>配置目录<code>syslog</code>为例：</p>\n</blockquote>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">&#x2F;var&#x2F;log&#x2F;cron\n&#x2F;var&#x2F;log&#x2F;maillog\n&#x2F;var&#x2F;log&#x2F;messages\n&#x2F;var&#x2F;log&#x2F;secure\n&#x2F;var&#x2F;log&#x2F;spooler\n&#x2F;var&#x2F;log&#x2F;kern.log   # 目标日志文件\n&#123;\n    daily           # 执行周期还可以填写weekly,monthly，yearly\n    missingok       # 转储时忽略日志错误\n    sharedscripts   # 运行postrotate脚本，作用是在所有日志都轮转后统一执行一次脚本。如果没有配置这个，那么每个日志轮转后都会执行一次脚本\n    postrotate      # 脚本开始\n        &#x2F;usr&#x2F;bin&#x2F;systemctl kill -s HUP rsyslog.service &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1 || true\n    endscript       # 脚本结束<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"其他重要参数说明\"><a href=\"#其他重要参数说明\" class=\"headerlink\" title=\"其他重要参数说明\"></a>其他重要参数说明</h6><ul>\n<li>compress                   通过gzip压缩日志</li>\n<li>nocompress                 不做gzip压缩处理</li>\n<li>copytruncate               用于还在打开中的日志文件，把当前日志备份并截断；是先拷贝再清空的方式，拷贝和清空之间有一个时间差，可能会丢失部分日志数据。</li>\n<li>nocopytruncate             备份日志文件不过不截断</li>\n<li>create mode owner group    轮转时指定创建新文件的属性，如create 0777 nobody nobody</li>\n<li>nocreate                   不建立新的日志文件</li>\n<li>delaycompress              和compress 一起使用时，转储的日志文件到下一次转储时才压缩</li>\n<li>nodelaycompress            覆盖 delaycompress 选项，转储同时压缩。</li>\n<li>missingok                  如果日志丢失，不报错继续滚动下一个日志</li>\n<li>errors address             专储时的错误信息发送到指定的Email 地址</li>\n<li>ifempty                    即使日志文件为空文件也做轮转，这个是logrotate的缺省选项。</li>\n<li>notifempty                 当日志文件为空时，不进行轮转</li>\n<li>mail address               把转储的日志文件发送到指定的E-mail 地址</li>\n<li>nomail                     转储时不发送日志文件</li>\n<li>olddir directory           转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统</li>\n<li>noolddir                   转储后的日志文件和当前日志文件放在同一个目录下</li>\n<li>sharedscripts              运行postrotate脚本，作用是在所有日志都轮转后统一执行一次脚本。如果没有配置这个，那么每个日志轮转后都会执行一次脚本</li>\n<li>prerotate                  在logrotate转储之前需要执行的指令，例如修改文件的属性等动作；必须独立成行</li>\n<li>postrotate                 在logrotate转储之后需要执行的指令，例如重新启动 (kill -HUP) 某个服务！必须独立成行</li>\n<li>daily                      指定转储周期为每天</li>\n<li>weekly                     指定转储周期为每周</li>\n<li>monthly                    指定转储周期为每月</li>\n<li>rotate count               指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5 个备份</li>\n<li>dateext                    使用当期日期作为命名格式</li>\n<li>dateformat .%s             配合dateext使用，紧跟在下一行出现，定义文件转储后的文件名，配合dateext使用，只支持 %Y %m %d %s 这四个参数</li>\n<li>size(或minsize) log-size   日志文件超过多少之后就转储，可以是 100 100K  100M 100G这都是有效的</li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://wsgzao.github.io/post/logrotate\">https://wsgzao.github.io/post/logrotate</a><br><a href=\"https://www.cnblogs.com/kevingrace/p/6307298.html\">https://www.cnblogs.com/kevingrace/p/6307298.html</a><br><code>man logrotate</code></p>\n","tags":["log"]},{"title":"longhorn部署安装","url":"/2024/06/18/longhorn%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85/","content":"<p>Longhorn是Kubernetes的一个轻量级、可靠且易于使用的分布式块存储系统</p>\n<span id=\"more\"></span>\n\n<h4 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h4><p><img src=\"/../images/longhorn%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85-1.svg\" alt=\"alt text\"></p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><h5 id=\"前置依赖\"><a href=\"#前置依赖\" class=\"headerlink\" title=\"前置依赖\"></a>前置依赖</h5><ul>\n<li>部署iscsi</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 使用k8s安装iscsi</span>\nkubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/longhorn/longhorn/v1.6.2/deploy/prerequisite/longhorn-iscsi-installation.yaml\n\n<span class=\"token comment\"># 手动安装</span>\nyum <span class=\"token parameter variable\">--setopt</span><span class=\"token operator\">=</span>tsflags<span class=\"token operator\">=</span>noscripts <span class=\"token function\">install</span> iscsi-initiator-utils\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"InitiatorName=<span class=\"token variable\"><span class=\"token variable\">$(</span>/sbin/iscsi-iname<span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">></span> /etc/iscsi/initiatorname.iscsi\nsystemctl <span class=\"token builtin class-name\">enable</span> iscsid\nsystemctl start iscsid\nmodprobe iscsi_tcp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>节点需要nfs服务支持没有则安装</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 使用k8s安装nfs</span>\nkubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/longhorn/longhorn/v1.6.2/deploy/prerequisite/longhorn-nfs-installation.yaml\n\n<span class=\"token comment\"># 手动安装</span>\n<span class=\"token function\">cat</span> /boot/config-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-r</span><span class=\"token variable\">`</span></span><span class=\"token operator\">|</span> <span class=\"token function\">grep</span> CONFIG_NFS_V4_1\n<span class=\"token function\">cat</span> /boot/config-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-r</span><span class=\"token variable\">`</span></span><span class=\"token operator\">|</span> <span class=\"token function\">grep</span> CONFIG_NFS_V4_2\nyum <span class=\"token function\">install</span> nfs-utils<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"部署longhorn\"><a href=\"#部署longhorn\" class=\"headerlink\" title=\"部署longhorn\"></a>部署longhorn</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/longhorn/longhorn/v1.6.2/deploy/longhorn.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>helm安装Longhorn</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm repo <span class=\"token function\">add</span> longhorn https://charts.longhorn.io\nhelm repo update\nhelm <span class=\"token function\">install</span> longhorn longhorn/longhorn <span class=\"token parameter variable\">--namespace</span> longhorn-system --create-namespace<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>部署测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl create <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/longhorn/longhorn/v1.6.2/examples/pod_with_pvc.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"访问longhorn\"><a href=\"#访问longhorn\" class=\"headerlink\" title=\"访问longhorn\"></a>访问longhorn</h5><ul>\n<li>转发dashboard,访问<code>localhost:8080</code></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> longhorn-system port-forward svc/longhorn-frontend <span class=\"token number\">8080</span>:80<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/../images/longhorn%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85-2.png\" alt=\"alt text\"></p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://longhorn.io/docs\">https://longhorn.io/docs</a></p>\n","tags":["存储"]},{"title":"linux登录欢迎页","url":"/2020/08/03/linux%E7%99%BB%E5%BD%95%E6%AC%A2%E8%BF%8E%E9%A1%B5/","content":"<p>ssh每次登录的时候显示一些信息</p>\n<span id=\"more\"></span>\n<p>编辑<code>/etc/motd</code>中的内容，即可在登录的时候打印出来</p>\n<p><img src=\"/../images/pasted-0.png\" alt=\"upload successful\"></p>\n<p>例如将下面的复制进去</p>\n<pre class=\"line-numbers language-string\" data-language=\"string\"><code class=\"language-string\">......................阿弥陀佛......................\n                      _oo0oo_\n                     o8888888o\n                     88&quot; . &quot;88\n                     (| -_- |)\n                     0\\  &#x3D;  &#x2F;0\n                   ___&#x2F;‘---’\\___\n                  .&#39; \\|       |&#x2F; &#39;.\n                 &#x2F; \\\\|||  :  |||&#x2F;&#x2F; \\\n                &#x2F; _||||| -卍-|||||_ \\\n               |   | \\\\\\  -  &#x2F;&#x2F;&#x2F; |   |\n               | \\_|  &#39;&#39;\\---&#x2F;&#39;&#39;  |_&#x2F; |\n               \\  .-\\__  &#39;-&#39;  ___&#x2F;-. &#x2F;\n             ___&#39;. .&#39;  &#x2F;--.--\\  &#39;. .&#39;___\n         .&quot;&quot; ‘&lt;  ‘.___\\_&lt;|&gt;_&#x2F;___.’&gt;’ &quot;&quot;.\n       | | :  ‘- \\‘.;‘\\ _ &#x2F;’;.’&#x2F; - ’ : | |\n         \\  \\ ‘_.   \\_ __\\ &#x2F;__ _&#x2F;   .-’ &#x2F;  &#x2F;\n    &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;‘-.____‘.___ \\_____&#x2F;___.-’___.-’&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n                      ‘&#x3D;---&#x3D;’\n\n....................佛祖保佑 ,永无BUG...................<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","tags":["linux"]},{"title":"minikube安装使用","url":"/2020/09/14/minikube%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/","content":"<p>在做k8s开发的时候受限于本地的性能以及复杂度不能搭建一个完整的k8s集群，这个时候需要minikube来搭建k8s开发环境</p>\n<span id=\"more\"></span>\n\n<h4 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h4><ul>\n<li>阿里云版本<a href=\"https://github.com/AliyunContainerService/minikube\">地址</a>,官方版本<a href=\"https://github.com/kubernetes/minikube\">地址</a>,推荐阿里云版本</li>\n</ul>\n<h5 id=\"下载阿里云版本二进制文件\"><a href=\"#下载阿里云版本二进制文件\" class=\"headerlink\" title=\"下载阿里云版本二进制文件\"></a>下载阿里云版本二进制文件</h5><h6 id=\"Macos\"><a href=\"#Macos\" class=\"headerlink\" title=\"Macos\"></a>Macos</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-Lo</span> minikube https://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/releases/v1.13.0/minikube-darwin-amd64 <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">chmod</span> +x minikube <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> minikube /usr/local/bin/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-Lo</span> minikube https://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/releases/v1.14.2/minikube-linux-amd64 <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">chmod</span> +x minikube <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> minikube /usr/local/bin/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"验证安装\"><a href=\"#验证安装\" class=\"headerlink\" title=\"验证安装\"></a>验证安装</h5><p>执行<code>minikube version</code>验证安装</p>\n<h4 id=\"启动Minikube\"><a href=\"#启动Minikube\" class=\"headerlink\" title=\"启动Minikube\"></a>启动Minikube</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">minikube start <span class=\"token parameter variable\">--driver</span><span class=\"token operator\">=</span>docker --image-mirror-country cn<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这样就启动一个使用docker作为驱动的minikube，稍等一会就会启动成功，并且将<code>kubectl</code>设置为minikube<br>再次启动是只需要执行<code>minikube start</code>即可</p>\n<h4 id=\"多节点\"><a href=\"#多节点\" class=\"headerlink\" title=\"多节点\"></a>多节点</h4><ul>\n<li>添加</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">minikube <span class=\"token function\">node</span> <span class=\"token function\">add</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">minikube <span class=\"token function\">node</span> list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>删除</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">minikube delete <span class=\"token operator\">&lt;</span>名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><ul>\n<li><p>minikube start 启动集群</p>\n</li>\n<li><p>minikube stop 停止集群</p>\n</li>\n<li><p>minikube delete 删除集群</p>\n</li>\n<li><p>minikube dashboard 打开k8s报表</p>\n</li>\n<li><p>minikube status 查看minikube状态</p>\n</li>\n<li><p>minikube ssh 登录到minikube节点上</p>\n</li>\n</ul>\n","tags":["k8s","minikube"]},{"title":"lvm使用","url":"/2024/07/01/lvm%E4%BD%BF%E7%94%A8/","content":"<p>lvm(Logical Volume Manager)是linux的逻辑卷，他在物理卷基础上抽象成一个逻辑的卷，这样就可以使用单个或者多个磁盘合并成一个逻辑磁盘</p>\n<span id=\"more\"></span>\n\n<h4 id=\"术语\"><a href=\"#术语\" class=\"headerlink\" title=\"术语\"></a>术语</h4><ul>\n<li>PV：物理卷,可以任务就是普通的磁盘</li>\n<li>VG：卷组,蒋垛个PV合并成一个组</li>\n<li>LV：逻辑卷，从VG中分割出的一块空间创建磁盘，可以伸缩容</li>\n<li>PE：物理区域,PV中划分的一些块</li>\n</ul>\n<p><img src=\"/../images/lvm%E4%BD%BF%E7%94%A8.png\" alt=\"alt text\"></p>\n<h4 id=\"创建一个lvm\"><a href=\"#创建一个lvm\" class=\"headerlink\" title=\"创建一个lvm\"></a>创建一个lvm</h4><ul>\n<li>磁盘分区，需要注意最后w保存到磁盘</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fdisk</span> /dev/vdb\n<span class=\"token comment\"># 欢迎使用 fdisk (util-linux 2.23.2)。</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 更改将停留在内存中，直到您决定将更改写入磁盘。</span>\n<span class=\"token comment\"># 使用写入命令前请三思。</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># Device does not contain a recognized partition table</span>\n<span class=\"token comment\"># 使用磁盘标识符 0x4ffd3010 创建新的 DOS 磁盘标签。</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 命令(输入 m 获取帮助)：n</span>\n<span class=\"token comment\"># Partition type:</span>\n<span class=\"token comment\">#    p   primary (0 primary, 0 extended, 4 free)</span>\n<span class=\"token comment\">#    e   extended</span>\n<span class=\"token comment\"># Select (default p): p</span>\n<span class=\"token comment\"># 分区号 (1-4，默认 1)：</span>\n<span class=\"token comment\"># 起始 扇区 (2048-41943039，默认为 2048)：</span>\n<span class=\"token comment\"># 将使用默认值 2048</span>\n<span class=\"token comment\"># Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-41943039，默认为 41943039)：+1G</span>\n<span class=\"token comment\"># 分区 1 已设置为 Linux 类型，大小设为 1 GiB</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 命令(输入 m 获取帮助)：t</span>\n<span class=\"token comment\"># 已选择分区 1</span>\n<span class=\"token comment\"># Hex 代码(输入 L 列出所有代码)：8e</span>\n<span class=\"token comment\"># 已将分区“Linux”的类型更改为“Linux LVM”</span>\n<span class=\"token comment\"># </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看分区的磁盘</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fdisk</span> <span class=\"token parameter variable\">-l</span>\n\n<span class=\"token comment\"># 磁盘 /dev/vda：21.5 GB, 21474836480 字节，41943040 个扇区</span>\n<span class=\"token comment\"># Units = 扇区 of 1 * 512 = 512 bytes</span>\n<span class=\"token comment\"># 扇区大小(逻辑/物理)：512 字节 / 512 字节</span>\n<span class=\"token comment\"># I/O 大小(最小/最佳)：512 字节 / 512 字节</span>\n<span class=\"token comment\"># 磁盘标签类型：dos</span>\n<span class=\"token comment\"># 磁盘标识符：0x000be0d0</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\">#    设备 Boot      Start         End      Blocks   Id  System</span>\n<span class=\"token comment\"># /dev/vda1   *        2048    41943039    20970496   83  Linux</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 磁盘 /dev/vdb：21.5 GB, 21474836480 字节，41943040 个扇区</span>\n<span class=\"token comment\"># Units = 扇区 of 1 * 512 = 512 bytes</span>\n<span class=\"token comment\"># 扇区大小(逻辑/物理)：512 字节 / 512 字节</span>\n<span class=\"token comment\"># I/O 大小(最小/最佳)：512 字节 / 512 字节</span>\n<span class=\"token comment\"># 磁盘标签类型：dos</span>\n<span class=\"token comment\"># 磁盘标识符：0x4ffd3010</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\">#    设备 Boot      Start         End      Blocks   Id  System</span>\n<span class=\"token comment\"># /dev/vdb1            2048     2099199     1048576   8e  Linux LVM</span>\n<span class=\"token comment\"># /dev/vdb2         2099200     4196351     1048576   8e  Linux LVM</span>\n<span class=\"token comment\"># /dev/vdb3         4196352     6293503     1048576   8e  Linux LVM</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>创建物理卷</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pvcreate /dev/vdb1 /dev/vdb2 /dev/vdb3\n<span class=\"token comment\">#  Physical volume \"/dev/vdb1\" successfully created.</span>\n<span class=\"token comment\">#  Physical volume \"/dev/vdb2\" successfully created.</span>\n<span class=\"token comment\">#  Physical volume \"/dev/vdb3\" successfully created.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看物理卷</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"> pvdisplay\n<span class=\"token comment\">#  \"/dev/vdb3\" is a new physical volume of \"1.00 GiB\"</span>\n<span class=\"token comment\">#  --- NEW Physical volume ---</span>\n<span class=\"token comment\">#  PV Name               /dev/vdb3</span>\n<span class=\"token comment\">#  VG Name</span>\n<span class=\"token comment\">#  PV Size               1.00 GiB</span>\n<span class=\"token comment\">#  Allocatable           NO</span>\n<span class=\"token comment\">#  PE Size               0</span>\n<span class=\"token comment\">#  Total PE              0</span>\n<span class=\"token comment\">#  Free PE               0</span>\n<span class=\"token comment\">#  Allocated PE          0</span>\n<span class=\"token comment\">#  PV UUID               9fri0N-wmH0-I2nr-Vd2y-vr7b-RWxO-3zg7Zt</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\">#  \"/dev/vdb1\" is a new physical volume of \"1.00 GiB\"</span>\n<span class=\"token comment\">#  --- NEW Physical volume ---</span>\n<span class=\"token comment\">#  PV Name               /dev/vdb1</span>\n<span class=\"token comment\">#  VG Name</span>\n<span class=\"token comment\">#  PV Size               1.00 GiB</span>\n<span class=\"token comment\">#  Allocatable           NO</span>\n<span class=\"token comment\">#  PE Size               0</span>\n<span class=\"token comment\">#  Total PE              0</span>\n<span class=\"token comment\">#  Free PE               0</span>\n<span class=\"token comment\">#  Allocated PE          0</span>\n<span class=\"token comment\">#  PV UUID               3pKwuU-7U1d-Rhwz-7wMS-83nV-f2lq-FABsic</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\">#  \"/dev/vdb2\" is a new physical volume of \"1.00 GiB\"</span>\n<span class=\"token comment\">#  --- NEW Physical volume ---</span>\n<span class=\"token comment\">#  PV Name               /dev/vdb2</span>\n<span class=\"token comment\">#  VG Name</span>\n<span class=\"token comment\">#  PV Size               1.00 GiB</span>\n<span class=\"token comment\">#  Allocatable           NO</span>\n<span class=\"token comment\">#  PE Size               0</span>\n<span class=\"token comment\">#  Total PE              0</span>\n<span class=\"token comment\">#  Free PE               0</span>\n<span class=\"token comment\">#  Allocated PE          0</span>\n<span class=\"token comment\">#  PV UUID               GkAeEq-wWcW-B1q8-ujUW-qsTm-PQAJ-SZXH1B</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>创建逻辑卷组</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vgcreate volume-test /dev/vdb1 /dev/vdb2 /dev/vdb3\n<span class=\"token comment\">#  Volume group \"volume-test\" successfully created</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看创建的逻辑卷组</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vgdisplay\n<span class=\"token comment\">#  --- Volume group ---</span>\n<span class=\"token comment\">#  VG Name               volume-test</span>\n<span class=\"token comment\">#  System ID</span>\n<span class=\"token comment\">#  Format                lvm2</span>\n<span class=\"token comment\">#  Metadata Areas        3</span>\n<span class=\"token comment\">#  Metadata Sequence No  1</span>\n<span class=\"token comment\">#  VG Access             read/write</span>\n<span class=\"token comment\">#  VG Status             resizable</span>\n<span class=\"token comment\">#  MAX LV                0</span>\n<span class=\"token comment\">#  Cur LV                0</span>\n<span class=\"token comment\">#  Open LV               0</span>\n<span class=\"token comment\">#  Max PV                0</span>\n<span class=\"token comment\">#  Cur PV                3</span>\n<span class=\"token comment\">#  Act PV                3</span>\n<span class=\"token comment\">#  VG Size               &lt;2.99 GiB</span>\n<span class=\"token comment\">#  PE Size               4.00 MiB</span>\n<span class=\"token comment\">#  Total PE              765</span>\n<span class=\"token comment\">#  Alloc PE / Size       0 / 0</span>\n<span class=\"token comment\">#  Free  PE / Size       765 / &lt;2.99 GiB</span>\n<span class=\"token comment\">#  VG UUID               N0Edem-cvO5-tn1e-qjTD-9Ivk-mLSw-yBEVHp</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>创建逻辑卷</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvcreate <span class=\"token parameter variable\">-L</span> 200M <span class=\"token parameter variable\">-n</span> lv1 volume-test\n<span class=\"token comment\">#  Logical volume \"lv1\" created.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看逻辑卷</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvdisplay\n<span class=\"token comment\">#  --- Logical volume ---</span>\n<span class=\"token comment\">#  LV Path                /dev/volume-test/lv1</span>\n<span class=\"token comment\">#  LV Name                lv1</span>\n<span class=\"token comment\">#  VG Name                volume-test</span>\n<span class=\"token comment\">#  LV UUID                w7DEiD-0Q2r-4zDz-0art-fb6S-P2X4-wLyKOk</span>\n<span class=\"token comment\">#  LV Write Access        read/write</span>\n<span class=\"token comment\">#  LV Creation host, time 10-60-116-80, 2024-07-02 14:56:09 +0800</span>\n<span class=\"token comment\">#  LV Status              available</span>\n<span class=\"token comment\">#  # open                 0</span>\n<span class=\"token comment\">#  LV Size                200.00 MiB</span>\n<span class=\"token comment\">#  Current LE             50</span>\n<span class=\"token comment\">#  Segments               1</span>\n<span class=\"token comment\">#  Allocation             inherit</span>\n<span class=\"token comment\">#  Read ahead sectors     auto</span>\n<span class=\"token comment\">#  - currently set to     8192</span>\n<span class=\"token comment\">#  Block device           252:0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>格式化</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkfs.ext4 /dev/volume-test/lv1\n<span class=\"token comment\"># mke2fs 1.42.9 (28-Dec-2013)</span>\n<span class=\"token comment\"># 文件系统标签=</span>\n<span class=\"token comment\"># OS type: Linux</span>\n<span class=\"token comment\"># 块大小=1024 (log=0)</span>\n<span class=\"token comment\"># 分块大小=1024 (log=0)</span>\n<span class=\"token comment\"># Stride=0 blocks, Stripe width=0 blocks</span>\n<span class=\"token comment\"># 51200 inodes, 204800 blocks</span>\n<span class=\"token comment\"># 10240 blocks (5.00%) reserved for the super user</span>\n<span class=\"token comment\"># 第一个数据块=1</span>\n<span class=\"token comment\"># Maximum filesystem blocks=33816576</span>\n<span class=\"token comment\"># 25 block groups</span>\n<span class=\"token comment\"># 8192 blocks per group, 8192 fragments per group</span>\n<span class=\"token comment\"># 2048 inodes per group</span>\n<span class=\"token comment\"># Superblock backups stored on blocks:</span>\n<span class=\"token comment\">#         8193, 24577, 40961, 57345, 73729</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># Allocating group tables: 完成</span>\n<span class=\"token comment\"># 正在写入inode表: 完成</span>\n<span class=\"token comment\"># Creating journal (4096 blocks): 完成</span>\n<span class=\"token comment\"># Writing superblocks and filesystem accounting information: 完成</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>挂载到文件系统</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> /dev/volume-test/lv1 /mnt/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看挂载效果</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">df</span> <span class=\"token parameter variable\">-h</span>\n<span class=\"token comment\"># 文件系统                      容量  已用  可用 已用% 挂载点</span>\n<span class=\"token comment\"># devtmpfs                      411M     0  411M    0% /dev</span>\n<span class=\"token comment\"># tmpfs                         423M     0  423M    0% /dev/shm</span>\n<span class=\"token comment\"># tmpfs                         423M   12M  412M    3% /run</span>\n<span class=\"token comment\"># tmpfs                         423M     0  423M    0% /sys/fs/cgroup</span>\n<span class=\"token comment\"># /dev/vda1                      20G  1.8G   19G    9% /</span>\n<span class=\"token comment\"># tmpfs                          85M     0   85M    0% /run/user/0</span>\n<span class=\"token comment\"># /dev/mapper/volume--test-lv1  190M  1.6M  175M    1% /mnt</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"lvm伸缩容\"><a href=\"#lvm伸缩容\" class=\"headerlink\" title=\"lvm伸缩容\"></a>lvm伸缩容</h4><h5 id=\"扩容\"><a href=\"#扩容\" class=\"headerlink\" title=\"扩容\"></a>扩容</h5><ul>\n<li>umount挂载点</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">umount</span> /mnt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>从200m扩容到300m</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvresize <span class=\"token parameter variable\">-L</span> 300M /dev/volume-test/lv1\n<span class=\"token comment\">#  Size of logical volume volume-test/lv1 changed from 200.00 MiB (50 extents) to 300.00 MiB (75 extents).</span>\n<span class=\"token comment\">#  Logical volume volume-test/lv1 successfully resized.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>检查磁盘错误</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">e2fsck <span class=\"token parameter variable\">-f</span> /dev/volume-test/lv1\n<span class=\"token comment\"># e2fsck 1.42.9 (28-Dec-2013)</span>\n<span class=\"token comment\"># 第一步: 检查inode,块,和大小</span>\n<span class=\"token comment\"># 第二步: 检查目录结构</span>\n<span class=\"token comment\"># 第3步: 检查目录连接性</span>\n<span class=\"token comment\"># Pass 4: Checking reference counts</span>\n<span class=\"token comment\"># 第5步: 检查簇概要信息</span>\n<span class=\"token comment\"># /dev/volume-test/lv1: 11/51200 files (0.0% non-contiguous), 12115/204800 blocks</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>扩容文件系统</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">resize2fs /dev/volume-test/lv1\n<span class=\"token comment\"># resize2fs 1.42.9 (28-Dec-2013)</span>\n<span class=\"token comment\"># Resizing the filesystem on /dev/volume-test/lv1 to 307200 (1k) blocks.</span>\n<span class=\"token comment\"># The filesystem on /dev/volume-test/lv1 is now 307200 blocks long.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看扩容效果</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvdisplay\n<span class=\"token comment\">#  --- Logical volume ---</span>\n<span class=\"token comment\">#  LV Path                /dev/volume-test/lv1</span>\n<span class=\"token comment\">#  LV Name                lv1</span>\n<span class=\"token comment\">#  VG Name                volume-test</span>\n<span class=\"token comment\">#  LV UUID                w7DEiD-0Q2r-4zDz-0art-fb6S-P2X4-wLyKOk</span>\n<span class=\"token comment\">#  LV Write Access        read/write</span>\n<span class=\"token comment\">#  LV Creation host, time 10-60-116-80, 2024-07-02 14:56:09 +0800</span>\n<span class=\"token comment\">#  LV Status              available</span>\n<span class=\"token comment\">#  # open                 0</span>\n<span class=\"token comment\">#  LV Size                300.00 MiB</span>\n<span class=\"token comment\">#  Current LE             75</span>\n<span class=\"token comment\">#  Segments               1</span>\n<span class=\"token comment\">#  Allocation             inherit</span>\n<span class=\"token comment\">#  Read ahead sectors     auto</span>\n<span class=\"token comment\">#  - currently set to     8192</span>\n<span class=\"token comment\">#  Block device           252:0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>挂载，可以看到容量变大了</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> /dev/volume-test/lv1 /mnt/\n<span class=\"token function\">df</span> <span class=\"token parameter variable\">-h</span>\n<span class=\"token comment\"># 文件系统                      容量  已用  可用 已用% 挂载点</span>\n<span class=\"token comment\"># devtmpfs                      411M     0  411M    0% /dev</span>\n<span class=\"token comment\"># tmpfs                         423M     0  423M    0% /dev/shm</span>\n<span class=\"token comment\"># tmpfs                         423M   12M  412M    3% /run</span>\n<span class=\"token comment\"># tmpfs                         423M     0  423M    0% /sys/fs/cgroup</span>\n<span class=\"token comment\"># /dev/vda1                      20G  1.8G   19G    9% /</span>\n<span class=\"token comment\"># tmpfs                          85M     0   85M    0% /run/user/0</span>\n<span class=\"token comment\"># /dev/mapper/volume--test-lv1  287M  2.1M  266M    1% /mnt</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"缩容\"><a href=\"#缩容\" class=\"headerlink\" title=\"缩容\"></a>缩容</h5><ul>\n<li>卸载挂载点</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">umount</span> /dev/volume-test/lv1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>和扩容一样检查磁盘错误</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">e2fsck <span class=\"token parameter variable\">-f</span> /dev/volume-test/lv1\n<span class=\"token comment\"># e2fsck 1.42.9 (28-Dec-2013)</span>\n<span class=\"token comment\"># 第一步: 检查inode,块,和大小</span>\n<span class=\"token comment\"># 第二步: 检查目录结构</span>\n<span class=\"token comment\"># 第3步: 检查目录连接性</span>\n<span class=\"token comment\"># Pass 4: Checking reference counts</span>\n<span class=\"token comment\"># 第5步: 检查簇概要信息</span>\n<span class=\"token comment\"># /dev/volume-test/lv1: 11/77824 files (0.0% non-contiguous), 15987/307200 blocks</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>减少文件系统容量</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">resize2fs /dev/volume-test/lv1 200M\n<span class=\"token comment\"># resize2fs 1.42.9 (28-Dec-2013)</span>\n<span class=\"token comment\"># Resizing the filesystem on /dev/volume-test/lv1 to 204800 (1k) blocks.</span>\n<span class=\"token comment\"># The filesystem on /dev/volume-test/lv1 is now 204800 blocks long.</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>减小逻辑卷，需要一次确认</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvresize <span class=\"token parameter variable\">-L</span> 200M /dev/volume-test/lv1\n<span class=\"token comment\">#   WARNING: Reducing active logical volume to 200.00 MiB.</span>\n<span class=\"token comment\">#   THIS MAY DESTROY YOUR DATA (filesystem etc.)</span>\n<span class=\"token comment\"># Do you really want to reduce volume-test/lv1? [y/n]: y</span>\n<span class=\"token comment\">#   Size of logical volume volume-test/lv1 changed from 300.00 MiB (75 extents) to 200.00 MiB (50 extents).</span>\n<span class=\"token comment\">#   Logical volume volume-test/lv1 successfully resized.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>确认大小</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvdisplay\n<span class=\"token comment\">#  --- Logical volume ---</span>\n<span class=\"token comment\">#  LV Path                /dev/volume-test/lv1</span>\n<span class=\"token comment\">#  LV Name                lv1</span>\n<span class=\"token comment\">#  VG Name                volume-test</span>\n<span class=\"token comment\">#  LV UUID                w7DEiD-0Q2r-4zDz-0art-fb6S-P2X4-wLyKOk</span>\n<span class=\"token comment\">#  LV Write Access        read/write</span>\n<span class=\"token comment\">#  LV Creation host, time 10-60-116-80, 2024-07-02 14:56:09 +0800</span>\n<span class=\"token comment\">#  LV Status              available</span>\n<span class=\"token comment\">#  # open                 0</span>\n<span class=\"token comment\">#  LV Size                200.00 MiB</span>\n<span class=\"token comment\">#  Current LE             50</span>\n<span class=\"token comment\">#  Segments               1</span>\n<span class=\"token comment\">#  Allocation             inherit</span>\n<span class=\"token comment\">#  Read ahead sectors     auto</span>\n<span class=\"token comment\">#  - currently set to     8192</span>\n<span class=\"token comment\">#  Block device           252:0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>挂载文件系统</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> /dev/volume-test/lv1 /mnt/\n<span class=\"token function\">df</span> <span class=\"token parameter variable\">-h</span>\n<span class=\"token comment\"># 文件系统                      容量  已用  可用 已用% 挂载点</span>\n<span class=\"token comment\"># devtmpfs                      411M     0  411M    0% /dev</span>\n<span class=\"token comment\"># tmpfs                         423M     0  423M    0% /dev/shm</span>\n<span class=\"token comment\"># tmpfs                         423M   12M  412M    3% /run</span>\n<span class=\"token comment\"># tmpfs                         423M     0  423M    0% /sys/fs/cgroup</span>\n<span class=\"token comment\"># /dev/vda1                      20G  1.8G   19G    9% /</span>\n<span class=\"token comment\"># tmpfs                          85M     0   85M    0% /run/user/0</span>\n<span class=\"token comment\"># /dev/mapper/volume--test-lv1  190M  1.6M  175M    1% /mnt</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"扩容逻辑卷组\"><a href=\"#扩容逻辑卷组\" class=\"headerlink\" title=\"扩容逻辑卷组\"></a>扩容逻辑卷组</h4><ul>\n<li>查看当前逻辑卷组状态</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gdisplay volume-test\n<span class=\"token comment\">#  --- Volume group ---</span>\n<span class=\"token comment\">#  VG Name               volume-test</span>\n<span class=\"token comment\">#  System ID</span>\n<span class=\"token comment\">#  Format                lvm2</span>\n<span class=\"token comment\">#  Metadata Areas        3</span>\n<span class=\"token comment\">#  Metadata Sequence No  4</span>\n<span class=\"token comment\">#  VG Access             read/write</span>\n<span class=\"token comment\">#  VG Status             resizable</span>\n<span class=\"token comment\">#  MAX LV                0</span>\n<span class=\"token comment\">#  Cur LV                1</span>\n<span class=\"token comment\">#  Open LV               1</span>\n<span class=\"token comment\">#  Max PV                0</span>\n<span class=\"token comment\">#  Cur PV                3</span>\n<span class=\"token comment\">#  Act PV                3</span>\n<span class=\"token comment\">#  VG Size               &lt;2.99 GiB</span>\n<span class=\"token comment\">#  PE Size               4.00 MiB</span>\n<span class=\"token comment\">#  Total PE              765</span>\n<span class=\"token comment\">#  Alloc PE / Size       50 / 200.00 MiB</span>\n<span class=\"token comment\">#  Free  PE / Size       715 / 2.79 GiB</span>\n<span class=\"token comment\">#  VG UUID               N0Edem-cvO5-tn1e-qjTD-9Ivk-mLSw-yBEVHp</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fdisk</span> /dev/vdc\n<span class=\"token comment\"># 欢迎使用 fdisk (util-linux 2.23.2)。</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 更改将停留在内存中，直到您决定将更改写入磁盘。</span>\n<span class=\"token comment\"># 使用写入命令前请三思。</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># Device does not contain a recognized partition table</span>\n<span class=\"token comment\"># 使用磁盘标识符 0xfae484d7 创建新的 DOS 磁盘标签。</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 命令(输入 m 获取帮助)：n</span>\n<span class=\"token comment\"># Partition type:</span>\n<span class=\"token comment\">#    p   primary (0 primary, 0 extended, 4 free)</span>\n<span class=\"token comment\">#    e   extended</span>\n<span class=\"token comment\"># Select (default p): p</span>\n<span class=\"token comment\"># 分区号 (1-4，默认 1)：</span>\n<span class=\"token comment\"># 起始 扇区 (2048-41943039，默认为 2048)：</span>\n<span class=\"token comment\"># 将使用默认值 2048</span>\n<span class=\"token comment\"># Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-41943039，默认为 41943039)：+2G</span>\n<span class=\"token comment\"># 分区 1 已设置为 Linux 类型，大小设为 2 GiB</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 命令(输入 m 获取帮助)：t</span>\n<span class=\"token comment\"># 已选择分区 1</span>\n<span class=\"token comment\"># Hex 代码(输入 L 列出所有代码)：</span>\n<span class=\"token comment\"># Hex 代码(输入 L 列出所有代码)：8e</span>\n<span class=\"token comment\"># 已将分区“Linux”的类型更改为“Linux LVM”</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 命令(输入 m 获取帮助)：w</span>\n<span class=\"token comment\"># The partition table has been altered!</span>\n\n<span class=\"token comment\">#Calling ioctl() to re-read partition table.</span>\n<span class=\"token comment\">#正在同步磁盘。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看创建的新分区</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lsblk <span class=\"token parameter variable\">-l</span>\n<span class=\"token comment\"># NAME             MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span>\n<span class=\"token comment\"># vdb              253:16   0   20G  0 disk</span>\n<span class=\"token comment\"># vdb2             253:18   0    1G  0 part</span>\n<span class=\"token comment\"># vdb3             253:19   0    1G  0 part</span>\n<span class=\"token comment\"># vdb1             253:17   0    1G  0 part</span>\n<span class=\"token comment\"># volume--test-lv1 252:0    0  200M  0 lvm  /mnt</span>\n<span class=\"token comment\"># vdc              253:32   0   20G  0 disk</span>\n<span class=\"token comment\"># vdc1             253:33   0    2G  0 part</span>\n<span class=\"token comment\"># vda              253:0    0   20G  0 disk</span>\n<span class=\"token comment\"># vda1             253:1    0   20G  0 part /</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>创建物理卷</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pvcreate /dev/vdc1\n<span class=\"token comment\">#  Physical volume \"/dev/vdc1\" successfully created.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>扩容逻辑卷组</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vgextend volume-test /dev/vdc1\n<span class=\"token comment\">#  Volume group \"volume-test\" successfully extended</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vgdisplay\n<span class=\"token comment\">#  --- Volume group ---</span>\n<span class=\"token comment\">#  VG Name               volume-test</span>\n<span class=\"token comment\">#  System ID</span>\n<span class=\"token comment\">#  Format                lvm2</span>\n<span class=\"token comment\">#  Metadata Areas        4</span>\n<span class=\"token comment\">#  Metadata Sequence No  5</span>\n<span class=\"token comment\">#  VG Access             read/write</span>\n<span class=\"token comment\">#  VG Status             resizable</span>\n<span class=\"token comment\">#  MAX LV                0</span>\n<span class=\"token comment\">#  Cur LV                1</span>\n<span class=\"token comment\">#  Open LV               1</span>\n<span class=\"token comment\">#  Max PV                0</span>\n<span class=\"token comment\">#  Cur PV                4</span>\n<span class=\"token comment\">#  Act PV                4</span>\n<span class=\"token comment\">#  VG Size               4.98 GiB</span>\n<span class=\"token comment\">#  PE Size               4.00 MiB</span>\n<span class=\"token comment\">#  Total PE              1276</span>\n<span class=\"token comment\">#  Alloc PE / Size       50 / 200.00 MiB</span>\n<span class=\"token comment\">#  Free  PE / Size       1226 / &lt;4.79 GiB</span>\n<span class=\"token comment\">#  VG UUID               N0Edem-cvO5-tn1e-qjTD-9Ivk-mLSw-yBEVHp</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"快照\"><a href=\"#快照\" class=\"headerlink\" title=\"快照\"></a>快照</h4><ul>\n<li>查看lv信息</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvdisplay\n<span class=\"token comment\">#  --- Logical volume ---</span>\n<span class=\"token comment\">#  LV Path                /dev/volume-test/lv1</span>\n<span class=\"token comment\">#  LV Name                lv1</span>\n<span class=\"token comment\">#  VG Name                volume-test</span>\n<span class=\"token comment\">#  LV UUID                w7DEiD-0Q2r-4zDz-0art-fb6S-P2X4-wLyKOk</span>\n<span class=\"token comment\">#  LV Write Access        read/write</span>\n<span class=\"token comment\">#  LV Creation host, time 10-60-116-80, 2024-07-02 14:56:09 +0800</span>\n<span class=\"token comment\">#  LV Status              available</span>\n<span class=\"token comment\">#  # open                 1</span>\n<span class=\"token comment\">#  LV Size                200.00 MiB</span>\n<span class=\"token comment\">#  Current LE             50</span>\n<span class=\"token comment\">#  Segments               1</span>\n<span class=\"token comment\">#  Allocation             inherit</span>\n<span class=\"token comment\">#  Read ahead sectors     auto</span>\n<span class=\"token comment\">#  - currently set to     8192</span>\n<span class=\"token comment\">#  Block device           252:2</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>写入测试数据</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">date</span> <span class=\"token operator\">></span> /mnt/data\n<span class=\"token function\">cat</span> /mnt/data\n<span class=\"token comment\"># 2024年 07月 02日 星期二 16:29:17 CST</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>创建快照</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvcreate <span class=\"token parameter variable\">--size</span> 200M <span class=\"token parameter variable\">--snapshot</span> <span class=\"token parameter variable\">--name</span> snap /dev/volume-test/lv1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>删除数据</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /mnt/data<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>卸载挂载点</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">umount</span> /mnt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>取消逻辑卷激活，确保没写入</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvchange <span class=\"token parameter variable\">-an</span> /dev/volume-test/lv1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>恢复快照(合并)</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvconvert <span class=\"token parameter variable\">--merge</span> /dev/volume-test/snap\n<span class=\"token comment\">#  Merging of snapshot volume-test/snap will occur on next activation of volume-test/lv1.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>激活逻辑卷,合并将在这个步骤执行</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvchange <span class=\"token parameter variable\">-ay</span> /dev/volume-test/lv1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvdisplay /dev/volume-test/lv1\n<span class=\"token comment\">#  --- Logical volume ---</span>\n<span class=\"token comment\">#  LV Path                /dev/volume-test/lv1</span>\n<span class=\"token comment\">#  LV Name                lv1</span>\n<span class=\"token comment\">#  VG Name                volume-test</span>\n<span class=\"token comment\">#  LV UUID                w7DEiD-0Q2r-4zDz-0art-fb6S-P2X4-wLyKOk</span>\n<span class=\"token comment\">#  LV Write Access        read/write</span>\n<span class=\"token comment\">#  LV Creation host, time 10-60-116-80, 2024-07-02 14:56:09 +0800</span>\n<span class=\"token comment\">#  LV Status              available</span>\n<span class=\"token comment\">#  # open                 0</span>\n<span class=\"token comment\">#  LV Size                200.00 MiB</span>\n<span class=\"token comment\">#  Current LE             50</span>\n<span class=\"token comment\">#  Segments               1</span>\n<span class=\"token comment\">#  Allocation             inherit</span>\n<span class=\"token comment\">#  Read ahead sectors     auto</span>\n<span class=\"token comment\">#  - currently set to     8192</span>\n<span class=\"token comment\">#  Block device           252:2</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>挂载磁盘并验证，之前删除的数据恢复了</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> /dev/volume-test/lv1 /mnt/\n<span class=\"token function\">cat</span> /mnt/data\n<span class=\"token number\">2024</span>年 07月 02日 星期二 <span class=\"token number\">16</span>:29:17 CST<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"使用缓存加速\"><a href=\"#使用缓存加速\" class=\"headerlink\" title=\"使用缓存加速\"></a>使用缓存加速</h4><ul>\n<li>创建一个使用ssd的pv</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvcreate <span class=\"token parameter variable\">--size</span> 100M <span class=\"token parameter variable\">--name</span> cachevol volume-test /dev/vdc1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>将加速盘附加到逻辑卷</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvconvert <span class=\"token parameter variable\">--type</span> cache <span class=\"token parameter variable\">--cachepool</span> cachevol volume-test/lv1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>验证</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvs <span class=\"token parameter variable\">--all</span> <span class=\"token parameter variable\">--options</span> +devices volume-test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://linux.cn/article-3218-1.html\">https://linux.cn/article-3218-1.html</a><br><a href=\"https://docs.redhat.com/zh_hans/documentation/red_hat_enterprise_linux/8/html/configuring_and_managing_logical_volumes/enabling-dm-cache-caching-for-a-logical-volume_enabling-caching-to-improve-logical-volume-performance\">https://docs.redhat.com/zh_hans/documentation/red_hat_enterprise_linux/8/html/configuring_and_managing_logical_volumes/enabling-dm-cache-caching-for-a-logical-volume_enabling-caching-to-improve-logical-volume-performance</a></p>\n","tags":["存储"]},{"title":"nodeJS基本使用","url":"/2020/09/22/nodejs%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","content":"<p>nodejS和相关组件常见的命令记录</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>中文官方：<a href=\"https://nodejs.org/zh-cn\">https://nodejs.org/zh-cn</a></p>\n</blockquote>\n<h5 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h5><ul>\n<li>CentOS<ul>\n<li>sudo yum install epel-release #安装epel源</li>\n<li>sudo yum install nodejs 安装nodeJs</li>\n</ul>\n</li>\n<li>MacOS<ul>\n<li>brew install node</li>\n<li>官网下载安装包</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"检查是否安装成功\"><a href=\"#检查是否安装成功\" class=\"headerlink\" title=\"检查是否安装成功\"></a>检查是否安装成功</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">node</span> <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"安装NVM管理Nodejs版本\"><a href=\"#安装NVM管理Nodejs版本\" class=\"headerlink\" title=\"安装NVM管理Nodejs版本\"></a>安装NVM管理Nodejs版本</h5><p>有些node代码有版本要求，nvm可以在各个版本时间切换</p>\n<p>执行下面的命令安装：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>安装确认：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvm version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"配置淘宝源\"><a href=\"#配置淘宝源\" class=\"headerlink\" title=\"配置淘宝源\"></a>配置淘宝源</h5><p>查看源</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> get registry<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看修改为淘宝</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry http://registry.npm.taobao.org/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"使用nrm管理源\"><a href=\"#使用nrm管理源\" class=\"headerlink\" title=\"使用nrm管理源\"></a>使用nrm管理源</h6><p>安装nrm</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> nrm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看源</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nrm <span class=\"token function\">ls</span>\n\n  <span class=\"token function\">npm</span> -------- https://registry.npmjs.org/\n  <span class=\"token function\">yarn</span> ------- https://registry.yarnpkg.com/\n  cnpm ------- http://r.cnpmjs.org/\n* taobao ----- https://registry.npm.taobao.org/\n  nj --------- https://registry.nodejitsu.com/\n  npmMirror -- https://skimdb.npmjs.com/registry/\n  edunpm ----- http://registry.enpmjs.org/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>切换源</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 切换到淘宝</span>\nnrm use taobao<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>删除源</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nrm del taobao<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>增加源</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nrm <span class=\"token function\">add</span> <span class=\"token operator\">&lt;</span>仓库名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>仓库地址<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"安装NCU检查模块更新\"><a href=\"#安装NCU检查模块更新\" class=\"headerlink\" title=\"安装NCU检查模块更新\"></a>安装NCU检查模块更新</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> npm-check-updates<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h5><ul>\n<li>npm 命令<ul>\n<li>npm install xxx 安装到当前目录</li>\n<li>npm install -g xxx 安装全局模块</li>\n<li>npm uninstall xxx 卸载模块</li>\n<li>npm uninstall -g  xxx 卸载全局模块</li>\n<li>npm list –depth&#x3D;0 查看所有高级的模块</li>\n<li>npm list –depth&#x3D;0 -global 查看所有全局安装的模块</li>\n</ul>\n</li>\n<li>nvm<ul>\n<li>nvm install xxx 安装指定版本的node</li>\n<li>nvm ls 查看现在node版本情况</li>\n<li>nvm use xxx 使用某个版本的node</li>\n<li>nvm use system 使用系统安装的node</li>\n<li>nvm uninstall xxx 卸载某个模块</li>\n</ul>\n</li>\n<li>ncu<ul>\n<li>ncu 插件模块是否有更新</li>\n<li>ncu -g 检查全局模块是否有更新</li>\n<li>ncu -u 更新到package.json</li>\n</ul>\n</li>\n</ul>\n","tags":["node","web"]},{"title":"nsenter命令使用","url":"/2021/04/26/nsenter%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/","content":"<p>nsenter在不同的命名空间中执行命令</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>namespace是linux中用于个隔离资源的特性，大名鼎鼎的docker就是基于此，而nsenter就是可以在不用<code>docker exec</code>的情况下进入别的namespace<br>常用的使用场景是很多容器都很精简，一些命令没有对于调试网络来说很麻烦，这个时候可以只进入改容器的网络命名空间，调试更加方便</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>一般linux发行版自带,位于util-linux包中</p>\n<h5 id=\"选项说明\"><a href=\"#选项说明\" class=\"headerlink\" title=\"选项说明\"></a>选项说明</h5><p>-t, –target pid：指定被进入命名空间的目标进程的pid<br>-m, –mount[&#x3D;file]：进入mount命令空间。如果指定了file，则进入file的命令空间<br>-u, –uts[&#x3D;file]：进入uts命令空间。如果指定了file，则进入file的命令空间<br>-i, –ipc[&#x3D;file]：进入ipc命令空间。如果指定了file，则进入file的命令空间<br>-n, –net[&#x3D;file]：进入net命令空间。如果指定了file，则进入file的命令空间<br>-p, –pid[&#x3D;file]：进入pid命令空间。如果指定了file，则进入file的命令空间<br>-U, –user[&#x3D;file]：进入user命令空间。如果指定了file，则进入file的命令空间<br>-G, –setgid gid：设置运行程序的gid<br>-S, –setuid uid：设置运行程序的uid<br>-r, –root[&#x3D;directory]：设置根目录<br>-w, –wd[&#x3D;directory]：设置工作目录</p>\n<h5 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 获取容器的pid</span>\n<span class=\"token function\">docker</span> inspect alpine <span class=\"token parameter variable\">-f</span> <span class=\"token string\">'&#123;&#123;.State.Pid&#125;&#125;'</span>\n\n<span class=\"token comment\"># 进入pid对应的namespace的ns命名空间，这时可以执行节点的ip addr命令查看对应pid的网络情况</span>\n<span class=\"token function\">sudo</span> nsenter <span class=\"token parameter variable\">--target</span> <span class=\"token variable\">$PID</span> <span class=\"token parameter variable\">--net</span>\n\n<span class=\"token comment\"># 等同于 docker exec</span>\nnsenter <span class=\"token parameter variable\">--target</span> <span class=\"token variable\">$PID</span> <span class=\"token parameter variable\">--mount</span> <span class=\"token parameter variable\">--uts</span> <span class=\"token parameter variable\">--ipc</span> <span class=\"token parameter variable\">--net</span> <span class=\"token parameter variable\">--pid</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://man7.org/linux/man-pages/man1/nsenter.1.html\">https://man7.org/linux/man-pages/man1/nsenter.1.html</a><br><a href=\"https://staight.github.io/2019/09/23/nsenter%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/\">https://staight.github.io/2019/09/23/nsenter%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/</a></p>\n"},{"title":"osquery","url":"/2021/05/22/osquery/","content":"<p>osquery是一个由FaceBook开源用于对系统进行查询、监控以及分析的一款软件，其最意思的地方是使用sql来查询系统的一些信息</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><h5 id=\"macos\"><a href=\"#macos\" class=\"headerlink\" title=\"macos\"></a>macos</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> <span class=\"token parameter variable\">--cask</span> osquery<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"ubuntu\"><a href=\"#ubuntu\" class=\"headerlink\" title=\"ubuntu\"></a>ubuntu</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">OSQUERY_KEY</span><span class=\"token operator\">=</span>1484120AC4E9F8A1A577AEEE97A80C63C9D8B80B\n<span class=\"token function\">sudo</span> apt-key adv <span class=\"token parameter variable\">--keyserver</span> hkp://keyserver.ubuntu.com:80 --recv-keys <span class=\"token variable\">$OSQUERY_KEY</span>\n<span class=\"token function\">sudo</span> add-apt-repository <span class=\"token string\">'deb [arch=amd64] https://pkg.osquery.io/deb deb main'</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> osquery<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"centos\"><a href=\"#centos\" class=\"headerlink\" title=\"centos\"></a>centos</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> https://pkg.osquery.io/rpm/GPG <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/pki/rpm-gpg/RPM-GPG-KEY-osquery\n<span class=\"token function\">sudo</span> yum-config-manager --add-repo https://pkg.osquery.io/rpm/osquery-s3-rpm.repo\n<span class=\"token function\">sudo</span> yum-config-manager <span class=\"token parameter variable\">--enable</span> osquery-s3-rpm-repo\n<span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> osquer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><blockquote>\n<p>osquery存在两种运行模式，分别是osqueryi(交互式模式类似sqllite)、osqueryd(后台进程模式)。</p>\n</blockquote>\n<h5 id=\"osqueryi\"><a href=\"#osqueryi\" class=\"headerlink\" title=\"osqueryi\"></a>osqueryi</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 进入交互模式</span>\nosqueryi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>查看所有的表</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">.</span><span class=\"token keyword\">table</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>查看dns这个图表的所有内容</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">.</span><span class=\"token keyword\">all</span> dns_resolvers\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> dns_resolvers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>查看dns这个图表的所有内容</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">dns_resolvers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>查看表结构</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">.</span><span class=\"token keyword\">schema</span> dns_resolvers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>设置显示模式</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">.</span>mod csv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>查看帮助</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">.</span>help<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"常用sql\"><a href=\"#常用sql\" class=\"headerlink\" title=\"常用sql\"></a>常用sql</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 负载</span>\n<span class=\"token keyword\">select</span> period<span class=\"token punctuation\">,</span>average <span class=\"token keyword\">from</span> load_average<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 内存</span>\n<span class=\"token keyword\">select</span> memory_total<span class=\"token punctuation\">,</span>memory_free<span class=\"token punctuation\">,</span>swap_cached<span class=\"token punctuation\">,</span>active <span class=\"token keyword\">from</span> memory_info<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 磁盘</span>\n<span class=\"token keyword\">select</span> path<span class=\"token punctuation\">,</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">,</span>blocks<span class=\"token punctuation\">,</span>blocks_free <span class=\"token keyword\">from</span> mounts <span class=\"token keyword\">where</span> blocks<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 查询监听0.0.0.0的进程的名字，端口和pid</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> processes<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> listening_ports<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">,</span> processes<span class=\"token punctuation\">.</span>pid\n  <span class=\"token keyword\">FROM</span> listening_ports <span class=\"token keyword\">JOIN</span> processes <span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>pid<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">WHERE</span> listening_ports<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> <span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://osquery.io/\">https://osquery.io/</a></p>\n<p><a href=\"http://blog.spoock.com/2018/11/26/osquery-intro/\">Spoock’s Blog | osquery初识</a></p>\n","tags":["工具"]},{"title":"openvswitch","url":"/2021/08/24/openvswitch/","content":"<p>ovs是一个开源的虚拟交换机，具有强大的功能</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>ovs通过flow能实现很多策略和功能</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>apt</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> openvswitch-switch <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>yum</p>\n<p>官方未提供yum源需要编译安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token comment\"># 安装编译依赖</span>\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> \nepel-release <span class=\"token punctuation\">\\</span>\nrpm-build <span class=\"token punctuation\">\\</span>\nrpmlint <span class=\"token punctuation\">\\</span>\nyum-utils <span class=\"token punctuation\">\\</span>\nrpmdevtools <span class=\"token punctuation\">\\</span>\ngcc  <span class=\"token punctuation\">\\</span>\ngcc-c++ <span class=\"token punctuation\">\\</span>\nautoconf  <span class=\"token punctuation\">\\</span>\nautomake  <span class=\"token punctuation\">\\</span>\nlibtool <span class=\"token punctuation\">\\</span>\nsystemd-units  <span class=\"token punctuation\">\\</span>\nopenssl <span class=\"token punctuation\">\\</span>\nopenssl-devel <span class=\"token punctuation\">\\</span>\npython3-devel <span class=\"token punctuation\">\\</span>\ndesktop-file-utils <span class=\"token punctuation\">\\</span>\ngroff  <span class=\"token punctuation\">\\</span>\ngraphviz <span class=\"token punctuation\">\\</span>\ncheckpolicy <span class=\"token punctuation\">\\</span>\nselinux-policy-devel <span class=\"token punctuation\">\\</span>\npython3-sphinx <span class=\"token punctuation\">\\</span> <span class=\"token comment\"># 需要epel源</span>\nprocps-ng <span class=\"token punctuation\">\\</span>\nlibcap-ng <span class=\"token punctuation\">\\</span>\nlibcap-ng-devel <span class=\"token punctuation\">\\</span>\nlibpcap-devel  <span class=\"token punctuation\">\\</span>\nnumactl-devel <span class=\"token punctuation\">\\</span>\ndpdk-devel <span class=\"token punctuation\">\\</span>\nlibbpf-devel <span class=\"token punctuation\">\\</span>\nnumactl-devel <span class=\"token punctuation\">\\</span>\nunbound  <span class=\"token punctuation\">\\</span>\nunbound-devel\n\n<span class=\"token comment\"># 创建并切换到ovs用户</span>\n<span class=\"token function\">useradd</span> ovs <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">su</span> - ovs \n\n<span class=\"token comment\"># 创建编译的文件夹</span>\nrpmdev-setuptree\n<span class=\"token function\">wget</span> https://www.openvswitch.org/releases/openvswitch-2.16.0.tar.gz\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-C</span> ~/rpmbuild/SOURCES/ <span class=\"token parameter variable\">-xzf</span>  openvswitch-2.16.0.tar.gz\n\n<span class=\"token comment\"># 编译为rpm</span>\nrpmbuild <span class=\"token parameter variable\">-bb</span> <span class=\"token parameter variable\">--nocheck</span> ~/rpmbuild/SOURCES/openvswitch-2.16.0/rhel/openvswitch-fedora.spec\n\n<span class=\"token comment\"># 安装</span>\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> ~/rpmbuild/SOURCES/openvswitch-2.16.0-1.el7.x86_64.rpm\n\n<span class=\"token comment\"># 启动服务</span>\nsystemctl start openvswitch\nsystemctl <span class=\"token builtin class-name\">enable</span> openvswitch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"bridge\"><a href=\"#bridge\" class=\"headerlink\" title=\"bridge\"></a>bridge</h4><p>查看</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-vsctl list-br<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>增加</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 增加一个网桥叫vbr0</span>\novs-vsctl add-br vbr0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>删除</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-vsctl del-br ovs-switch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"port\"><a href=\"#port\" class=\"headerlink\" title=\"port\"></a>port</h4><p>查看所有ports</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-vsctl list-ports BRIDGE<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看端口id</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-vsctl list interface veth <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"ofport\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>增加</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-vsctl  add-port BRIDGE PORT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>删除</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-vsctl del-port BRIDGE PORT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"flow\"><a href=\"#flow\" class=\"headerlink\" title=\"flow\"></a>flow</h4><blockquote>\n<p>flow翻译为流表，其表示一些规则，能够控制数据包的转发</p>\n</blockquote>\n<p>显示 vbr0的 flow</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-ofctl dump-flows vbr0\n\n<span class=\"token assign-left variable\">cookie</span><span class=\"token operator\">=</span>0x0, <span class=\"token assign-left variable\">duration</span><span class=\"token operator\">=</span><span class=\"token number\">17</span>.496s, <span class=\"token assign-left variable\">table</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>, <span class=\"token assign-left variable\">n_packets</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>, <span class=\"token assign-left variable\">n_bytes</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>, <span class=\"token assign-left variable\">priority</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token assign-left variable\">actions</span><span class=\"token operator\">=</span>NORMAL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>清除vbr0所有flows</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-ofctl del-flows vbr0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>显示vbr0的groups表</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-ofctl dump-groups vbr0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>增加流表</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-ofctl add-flow vbr0 <span class=\"token string\">\"table=0, priority=0 actions=NORMAL\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"flow语法\"><a href=\"#flow语法\" class=\"headerlink\" title=\"flow语法\"></a>flow语法</h4><p>一般语法为: <code>基本 匹配规则 actions</code> 组成</p>\n<p>如：<code>&quot;table=0, priority=0 actions=NORMAL&quot;</code></p>\n<p>基本:</p>\n<ul>\n<li>duration_sec – 生效时间</li>\n<li>table_id – 所属表项，id越小匹配靠前</li>\n<li>priority – 优先级,数越大优先级越高</li>\n<li>n_packets – 处理数据包数量</li>\n<li>idle_timeout – 空闲超时时间（秒），超时则自动删除该表规则，0 表示该流规则永不过期。</li>\n</ul>\n<p>idle_timeout 不包含在 ovs-ofctl dump-flows br_name 的输出。</p>\n<p>匹配字段:</p>\n<p>in_port – vSwitch 的 INPUT Port 号<br>dl_src (Data Link layer) – 源 MAC 地址<br>dl_dst – 目的 MAC 地址<br>nw_src (Network layer) – 源 IP 地址<br>nw_dst – 目的 IP 地址<br>tp_src – TCP&#x2F;UDP 源端口号<br>tp_dst – TCP&#x2F;UDP 目的端口号<br>dl_type – 以太网协议类型，又称数据包（Packet）类型<br>ARP Packet – dl_type&#x3D;0x0806<br>IP Packet – dl_type&#x3D;0x0800<br>RARP Packet – dl_type&#x3D;0x8035<br>nw_proto – 网络层协议类型，与 dl_type 一起使用<br>ICMP Packet – dl_type&#x3D;0x0800,nw_proto&#x3D;1<br>TCP Packet – dl_type&#x3D;0x0800,nw_proto&#x3D;6<br>UDP Packet – dl_type&#x3D;0x0800,nw_proto&#x3D;17</p>\n<p>actions:</p>\n<ul>\n<li>NORMAL 和普通交换机一样正常转发</li>\n<li>OUTPUT 转发到某个端口</li>\n<li>GROUP 指定某个grup在处理</li>\n<li>DROP 丢弃</li>\n</ul>\n<p>例子：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 增加一条flows匹配端口id是1的端口，将他的数据转发到端口是2的接口上</span>\novs-ofctl add-flow vbr0 <span class=\"token string\">\"table=1,priority=1,in_port=1,actions=output:2\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"group\"><a href=\"#group\" class=\"headerlink\" title=\"group\"></a>group</h5><p>查看</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-ofctl dump-groups vbr0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>全部删除</p>\n<pre class=\"line-numbers language-shll\" data-language=\"shll\"><code class=\"language-shll\">ovs-ofctl del-groups vbr0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>增加group表</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ovs-ofctl add-group vbr0 <span class=\"token operator\">&lt;</span>group<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"group语法\"><a href=\"#group语法\" class=\"headerlink\" title=\"group语法\"></a>group语法</h5><p>组表需要在流表上跳转，一个group有很多bucket，很具类型选择执行</p>\n<p>group有很多类型(type)</p>\n<ul>\n<li><p>select 随机执行一个Bucket，一般用于负载均衡</p>\n</li>\n<li><p>all 所有的Bucket 都执行</p>\n</li>\n</ul>\n<p>group表有很多可以参考后面的地址</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 将目标地址是192.168.1.66的流量跳转到group:1去</span>\novs-ofctl add-flow vbr0 <span class=\"token string\">\"table=0,priority=888,in_port=5,dl_type=0x0800,nw_dst:192.168.1.66/32,actions=group:1\"</span>\n\n<span class=\"token comment\"># 修改ip地址为172.16.1.1或172.16.1.1者然后从vbr0发出</span>\novs-ofctl add-group vbr0 <span class=\"token assign-left variable\">group_id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>,type<span class=\"token operator\">=</span>select,bucket<span class=\"token operator\">=</span>actions<span class=\"token operator\">=</span>mod_nw_dst:172.16.1.1,output:vbr0,bucket<span class=\"token operator\">=</span>actions<span class=\"token operator\">=</span>mod_nw_dst:172.16.1<span class=\"token punctuation\">..</span><span class=\"token number\">2</span>,output:vbr0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"ovs-docker\"><a href=\"#ovs-docker\" class=\"headerlink\" title=\"ovs-docker\"></a>ovs-docker</h4><blockquote>\n<p>docker默认未集成ovs驱动，我们可以通过创建个无网络的容器通过<code>ovs-docker</code>这个工具配置网络</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 启动一个无网络的容器</span>\n<span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--net</span><span class=\"token operator\">=</span>none <span class=\"token parameter variable\">--privileged</span><span class=\"token operator\">=</span>true <span class=\"token parameter variable\">-it</span> ubuntu:14.04 <span class=\"token function\">bash</span>\n<span class=\"token comment\"># 在容器id为04c864c8ec59 中创建一个叫eth0的网卡并连接在vbr0,</span>\novs-docker add-port vbr0 eth0 04c864c8ec59 <span class=\"token parameter variable\">--ipaddress</span><span class=\"token operator\">=</span><span class=\"token string\">\"192.168.1.2/24\"</span> <span class=\"token parameter variable\">--gateway</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.1.1\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://zhuanlan.zhihu.com/p/37408341\">https://zhuanlan.zhihu.com/p/37408341</a><br><a href=\"https://www.cnblogs.com/jmilkfan-fanguiju/p/11825081.html\">https://www.cnblogs.com/jmilkfan-fanguiju/p/11825081.html</a><br><a href=\"https://docs.openvswitch.org/en/latest\">https://docs.openvswitch.org/en/latest</a></p>\n","tags":["网络"]},{"title":"pve中使用arpl安装群晖.md","url":"/2023/11/05/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96/","content":"<p>群辉很强大，但是配置拉胯，且价格感人，使用pve虚拟化安装群辉</p>\n<span id=\"more\"></span>\n\n<p>使用开源的arpl固件安装</p>\n<h4 id=\"下载arpl固件\"><a href=\"#下载arpl固件\" class=\"headerlink\" title=\"下载arpl固件\"></a>下载arpl固件</h4><ul>\n<li><p>arpl有几个版本原版是巴西的<a href=\"https://github.com/fbelavenuto\">fbelavenuto</a>项目地址<a href=\"https://github.com/fbelavenuto/arpl/releases\">https://github.com/fbelavenuto/arpl/releases</a>但是fbelavenuto因为个人原因停更了</p>\n</li>\n<li><p>第二个是国内的<a href=\"https://github.com/wjz304\">wjz304</a>根据fbelavenuto汉化并加速了不过因为原作者停更也停更了,项目地址<a href=\"https://github.com/wjz304/arpl-zh_CN\">https://github.com/wjz304/arpl-zh_CN</a></p>\n</li>\n<li><p>第三个还是<a href=\"https://github.com/wjz304\">wjz304</a>的第二个则是因为原作者停更了不想破坏发布流程重新弄得一个项目<a href=\"https://github.com/wjz304/rr\">https://github.com/wjz304/rr</a>，此仓库因一些原因被被作者删除,qq群更新</p>\n</li>\n</ul>\n<p>pve则选择带img的</p>\n<h4 id=\"创建pve虚拟机\"><a href=\"#创建pve虚拟机\" class=\"headerlink\" title=\"创建pve虚拟机\"></a>创建pve虚拟机</h4><ul>\n<li>上传到pve</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-1.png\" alt=\"Alt text\"></p>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-2.png\" alt=\"Alt text\"></p>\n<ul>\n<li>创建虚机，起个名字</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-3.png\" alt=\"Alt text\"></p>\n<ul>\n<li>操作系统稍后安装这里选择不要操作系统</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-4.png\" alt=\"Alt text\"></p>\n<ul>\n<li>这里注意这个机型要选择q35</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-5.png\" alt=\"Alt text\"></p>\n<ul>\n<li><p>磁盘同样不要，稍后添加<br><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-6.png\" alt=\"Alt text\"></p>\n</li>\n<li><p>cpu根据宿主机情况选择</p>\n</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-7.png\" alt=\"Alt text\"></p>\n<ul>\n<li>内存编译的时候最好大于4g</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-8.png\" alt=\"Alt text\"></p>\n<ul>\n<li>网络默认即可</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-9.png\" alt=\"Alt text\"></p>\n<ul>\n<li>确认页</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-10.png\" alt=\"Alt text\"></p>\n<ul>\n<li>将最开始导入的img文件导入到创建的虚拟机中</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">qm importdisk <span class=\"token number\">106</span> /var/lib/vz/template/iso/arpl_rr_4GB.img local-lvm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-11.png\" alt=\"Alt text\"></p>\n<ul>\n<li>将手动导入的磁盘修改为sata类型的磁盘</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-12.png\" alt=\"Alt text\"></p>\n<ul>\n<li>双击 即可修改</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-13.png\" alt=\"Alt text\"></p>\n<ul>\n<li>再添加一个sata的磁盘作为系统盘</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-14.png\" alt=\"Alt text\"></p>\n<ul>\n<li>修改引导顺序为刚刚导入的第一个磁盘</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-15.png\" alt=\"Alt text\"></p>\n<ul>\n<li>启动虚拟机则看到此界面则启动成功，浏览器打开提示的地址</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-16.png\" alt=\"Alt text\"></p>\n<h4 id=\"构建固件\"><a href=\"#构建固件\" class=\"headerlink\" title=\"构建固件\"></a>构建固件</h4><ul>\n<li>打开之后则进入构建界面</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-17.png\" alt=\"Alt text\"></p>\n<ul>\n<li>我这个版本是有中文版本的选择修改语言</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-18.png\" alt=\"Alt text\"></p>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-19.png\" alt=\"Alt text\"> </p>\n<ul>\n<li>改完语言后选择选择型号</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-20.png\" alt=\"Alt text\"> </p>\n<ul>\n<li>我这里选择ds923+</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-21.png\" alt=\"Alt text\"></p>\n<ul>\n<li>然后选择版本</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-22.png\" alt=\"Alt text\"></p>\n<ul>\n<li>这里选择7.2版本了</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-23.png\" alt=\"Alt text\"></p>\n<ul>\n<li>然后开始编译引导，稍等片刻</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-24.png\" alt=\"Alt text\"></p>\n<ul>\n<li>编译完成后有个启动</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-25.png\" alt=\"Alt text\"></p>\n<ul>\n<li>等待一会后则进入提示的地址,就进入了群辉安装引导界面了,按提示选择安装大概十分钟左</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-26.png\" alt=\"Alt text\"></p>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-27.png\" alt=\"Alt text\"></p>\n<ul>\n<li>稍等则进入dsm系统</li>\n</ul>\n<p><img src=\"/../images/pve%E4%B8%AD%E4%BD%BF%E7%94%A8arpl%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96-28.png\" alt=\"Alt text\"></p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.cnblogs.com/mokou/p/17042705.html\">https://www.cnblogs.com/mokou/p/17042705.html</a></p>\n","tags":["虚拟化","pve"]},{"title":"pod管理","url":"/2020/01/17/pod%E7%AE%A1%E7%90%86/","content":"<p>k8s pod常见操作</p>\n<span id=\"more\"></span>\n\n<h6 id=\"一键删除pod状态为Terminating的POD\"><a href=\"#一键删除pod状态为Terminating的POD\" class=\"headerlink\" title=\"一键删除pod状态为Terminating的POD\"></a>一键删除pod状态为Terminating的POD</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get pods <span class=\"token operator\">|</span><span class=\"token function\">grep</span> Terminating <span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">\" \"</span> <span class=\"token string\">'&#123;print$1&#125;'</span><span class=\"token operator\">|</span><span class=\"token function\">xargs</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">1</span> kubectl delete pods <span class=\"token parameter variable\">--force</span> --grace-period <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"横向扩容\"><a href=\"#横向扩容\" class=\"headerlink\" title=\"横向扩容\"></a>横向扩容</h6><p>横向扩容有两种方式，使用命令或yaml文件</p>\n<h6 id=\"手动扩容\"><a href=\"#手动扩容\" class=\"headerlink\" title=\"手动扩容\"></a>手动扩容</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl scale <span class=\"token operator\">&lt;</span>资源类型<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>资源名字<span class=\"token operator\">></span> <span class=\"token parameter variable\">--replicas</span> <span class=\"token operator\">&lt;</span>副本数量<span class=\"token operator\">></span> 将pod的副本书保持到指定数量<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>例子：kubectl scale deployment webhook –replicas 2 将test的副本数扩容到2  </p>\n<p>自动横向扩容（HPA）</p>\n<h6 id=\"命令行\"><a href=\"#命令行\" class=\"headerlink\" title=\"命令行\"></a>命令行</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl autoscale <span class=\"token operator\">&lt;</span>资源类型<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>资源名字<span class=\"token operator\">></span> <span class=\"token parameter variable\">--min</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>最小副本<span class=\"token operator\">></span> <span class=\"token parameter variable\">--max</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>最大副本<span class=\"token operator\">></span> --cpu-percent<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>CPU阈值<span class=\"token operator\">></span> <span class=\"token parameter variable\">-n</span> <span class=\"token operator\">&lt;</span>namespace<span class=\"token operator\">></span>\n\nkubectl get hpa\n\nkubectl describe hpa <span class=\"token operator\">&lt;</span>hpa名字<span class=\"token operator\">></span>\n\nkubectl deleted hpa <span class=\"token operator\">&lt;</span>hpa名字<span class=\"token operator\">></span>  删除hpa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"配置文件形式\"><a href=\"#配置文件形式\" class=\"headerlink\" title=\"配置文件形式\"></a>配置文件形式</h6><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> autoscaling/v2beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> HorizontalPodAutoscaler\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> productpage<span class=\"token punctuation\">-</span>v1 <span class=\"token comment\"># hpa名字</span>\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">scaleTargetRef</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1beta1\n    <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> productpage<span class=\"token punctuation\">-</span>v1\n  <span class=\"token key atrule\">minReplicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">maxReplicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8</span>\n  <span class=\"token key atrule\">metrics</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> Resource\n    <span class=\"token key atrule\">resource</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> memory\n      <span class=\"token key atrule\">targetAverageUtilization</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> Resource\n    <span class=\"token key atrule\">resource</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cpu\n      <span class=\"token key atrule\">targetAverageUtilization</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","tags":["k8s"]},{"title":"pve虚拟化安装以及基本使用","url":"/2024/04/01/pve%E8%99%9A%E6%8B%9F%E5%8C%96%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","content":"<p>pve是一个虚拟化平台，基于debian</p>\n<span id=\"more\"></span>\n\n<h4 id=\"pve下载地址\"><a href=\"#pve下载地址\" class=\"headerlink\" title=\"pve下载地址\"></a>pve下载地址</h4><p><a href=\"https://www.proxmox.com/en/downloads\">https://www.proxmox.com/en/downloads</a></p>\n<ul>\n<li>通过<code>ventoy</code>或者其他工具安装系统，安装过程有图形化ui很简单</li>\n</ul>\n<h4 id=\"安装pve-tools\"><a href=\"#安装pve-tools\" class=\"headerlink\" title=\"安装pve-tools\"></a>安装pve-tools</h4><ul>\n<li>pve tools内置了一些常用的设置比如改国内源，去除企业版提示</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/ivanhao/pvetools.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"虚机假死\"><a href=\"#虚机假死\" class=\"headerlink\" title=\"虚机假死\"></a>虚机假死</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\n<span class=\"token function\">ps</span> -ef<span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token string\">\"/usr/bin/kvm -id <span class=\"token variable\">$id</span>\"</span><span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-v</span> <span class=\"token function\">grep</span>\n\n<span class=\"token function\">kill</span> <span class=\"token parameter variable\">-9</span> <span class=\"token variable\">$id</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"退出集群\"><a href=\"#退出集群\" class=\"headerlink\" title=\"退出集群\"></a>退出集群</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl stop pve-cluster.service\nsystemctl stop corosync.service\npmxcfs  <span class=\"token parameter variable\">-l</span>\n\n<span class=\"token function\">rm</span> /etc/pve/corosync.conf\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /etc/corosync/*\n<span class=\"token function\">killall</span> pmxcfs\nsystemctl start pve-cluster.service\n\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span>  /etc/pve/nodes/<span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","tags":["虚拟化","pve"]},{"title":"pve环境制作cloud-init模板","url":"/2024/03/28/pve%E5%88%B6%E4%BD%9Ccloud-init%E6%A8%A1%E6%9D%BF/","content":"<p>cloudinit模版可以让我们在通过模板创建系统的时候设置好ip，用户名密码等无需开机进入后在设置</p>\n<span id=\"more\"></span>\n\n<h4 id=\"下载cloudinit镜像\"><a href=\"#下载cloudinit镜像\" class=\"headerlink\" title=\"下载cloudinit镜像\"></a>下载cloudinit镜像</h4><ul>\n<li>cloudimages下载地址</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>地址</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>centos7</td>\n<td><a href=\"http://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud-2211.qcow2\">http://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud-2211.qcow2</a></td>\n</tr>\n<tr>\n<td>debian12</td>\n<td><a href=\"https://cloud.debian.org/images/cloud/bookworm/20230802-1460/debian-12-genericcloud-amd64-20230802-1460.qcow2\">https://cloud.debian.org/images/cloud/bookworm/20230802-1460/debian-12-genericcloud-amd64-20230802-1460.qcow2</a></td>\n</tr>\n<tr>\n<td>ubuntu22.04</td>\n<td><a href=\"http://cloud-images.ubuntu.com/releases/22.04/release/ubuntu-22.04-server-cloudimg-amd64.vmdk\">http://cloud-images.ubuntu.com/releases/22.04/release/ubuntu-22.04-server-cloudimg-amd64.vmdk</a></td>\n</tr>\n</tbody></table>\n<h4 id=\"导入pve中\"><a href=\"#导入pve中\" class=\"headerlink\" title=\"导入pve中\"></a>导入pve中</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">img</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token comment\"># 虚拟机镜像</span>\n<span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token comment\"># 虚拟机id</span>\n<span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token comment\"># 虚拟机名字</span>\n<span class=\"token assign-left variable\">disk</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token comment\"># 虚拟机存放磁盘的存储池</span>\n\n<span class=\"token comment\"># 创建机器</span>\nqm create <span class=\"token variable\">$id</span> <span class=\"token parameter variable\">--name</span> <span class=\"token variable\">$name</span> <span class=\"token parameter variable\">--net0</span> virtio,bridge<span class=\"token operator\">=</span>vmbr0\n<span class=\"token comment\"># 导入启动盘</span>\nqm importdisk <span class=\"token variable\">$id</span> <span class=\"token variable\">$img</span> <span class=\"token variable\">$disk</span>\n<span class=\"token comment\"># 添加磁盘</span>\nqm <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$id</span> <span class=\"token parameter variable\">--scsihw</span> virtio-scsi-pci <span class=\"token parameter variable\">--scsi0</span> <span class=\"token variable\">$disk</span>:vm-<span class=\"token variable\">$id</span>-disk-0\n<span class=\"token comment\">#调整磁盘大小</span>\nqm disk resize <span class=\"token variable\">$id</span> scsi0 20G\n<span class=\"token comment\"># 添加cloud-init</span>\nqm <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$id</span> <span class=\"token parameter variable\">--ide2</span> <span class=\"token variable\">$disk</span>:cloudinit\n<span class=\"token comment\"># 设置启动盘</span>\nqm <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$id</span> <span class=\"token parameter variable\">--boot</span> c <span class=\"token parameter variable\">--bootdisk</span> scsi0\nqm <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$id</span> <span class=\"token parameter variable\">--serial0</span> socket <span class=\"token parameter variable\">--vga</span> serial0\nqm <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$id</span> <span class=\"token parameter variable\">--agent</span> <span class=\"token assign-left variable\">enabled</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>,fstrim_cloned_disks<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token comment\">#optional but recommended</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"配置模版\"><a href=\"#配置模版\" class=\"headerlink\" title=\"配置模版\"></a>配置模版</h4><blockquote>\n<p>此时pve界面中已经可以看到这个虚拟机，启动他，然后设置这个虚拟机，后面就不用每次都要设置一些东西了</p>\n</blockquote>\n<ul>\n<li>换源：更新apt源为国内源，这里有坑有些cloudinit官方镜像（debian）使用了cloudinit代管了apt源，这就导致修改源的时候会被cloudinit给改回去<br>正确的做法是修改cloudinit配置</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/cloud/cloud.cfg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">package_mirrors</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">arches</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>default<span class=\"token punctuation\">]</span>\n   <span class=\"token comment\"># 修改这里</span>\n    <span class=\"token key atrule\">failsafe</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">primary</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//deb.debian.org/debian \n      <span class=\"token key atrule\">security</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//deb.debian.org/debian<span class=\"token punctuation\">-</span>security<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>升级并安装qga</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> full-upgrade\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> qemu-guest-agent\n\n<span class=\"token function\">sudo</span> systemctl start qemu-guest-agent\n<span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> qemu-guest-agent<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>修改时区</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> timedatectl set-timezone Asia/Shanghai<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"转换为模版\"><a href=\"#转换为模版\" class=\"headerlink\" title=\"转换为模版\"></a>转换为模版</h4><ul>\n<li>设置为模版,也可以在ui上直接设置为模板</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">qm template <span class=\"token variable\">$id</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","tags":["虚拟化","pve"]},{"title":"rpm包构建","url":"/2020/11/16/rpm%E5%8C%85%E6%9E%84%E5%BB%BA/","content":"<p>RPM（Redhat Package Manager）是Rhel，Centos，Fedora等系统的软件包管理格式</p>\n<span id=\"more\"></span>\n\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><blockquote>\n<p>在centos等使用rpm的系统中安装</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> rpm-build rpmlint yum-utils rpmdevtools<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"生成目录结构\"><a href=\"#生成目录结构\" class=\"headerlink\" title=\"生成目录结构\"></a>生成目录结构</h5><p>初始化目录结构：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rpmdev-setuptree<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在<code>home</code>目录下生成目录结构如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rpmbuild\n├── BUILD\n├── BUILDROOT\n├── RPMS\n├── SOURCES\n├── SPECS\n└── SRPMS<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th>目录位置</th>\n<th>宏代码</th>\n<th>说明</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BUILD</td>\n<td>%_builddir</td>\n<td>编译目录</td>\n<td><code>%build</code>阶段在此目录执行编译</td>\n</tr>\n<tr>\n<td>BUILDROOT</td>\n<td>%_buildrootdir</td>\n<td>安装虚拟目录</td>\n<td><code>%install</code>阶段在此目录执行安装脚本</td>\n</tr>\n<tr>\n<td>RPMS</td>\n<td>%_rpmdir</td>\n<td>rpm目录</td>\n<td>生成的rpm包所在目录</td>\n</tr>\n<tr>\n<td>SOURCES</td>\n<td>%_sourcedir</td>\n<td>源码目录</td>\n<td>源码包目录,<code>%prep</code>阶段从此目录找需要解压的包</td>\n</tr>\n<tr>\n<td>SRPMS</td>\n<td>%_srcrpmdir</td>\n<td>源码rpm目录</td>\n<td>生成的rpm源码包所在目录</td>\n</tr>\n<tr>\n<td>SPECS</td>\n<td>%_specdir</td>\n<td>Spec目录</td>\n<td>spec文件存放的目录</td>\n</tr>\n</tbody></table>\n<h5 id=\"编写spec文件\"><a href=\"#编写spec文件\" class=\"headerlink\" title=\"编写spec文件\"></a>编写spec文件</h5><pre class=\"line-numbers language-spec\" data-language=\"spec\"><code class=\"language-spec\">%global debug_package %&#123;nil&#125;\n\nName:           &#123;&#123;.project&#125;&#125;\nVersion:        %&#123;_version&#125;\nRelease:        1%&#123;?dist&#125;\nSummary:        &#123;&#123;.ShortDescribe&#125;&#125;\n\nGroup:          Application&#x2F;WebServer\nLicense:        Apache 2.0\nURL:            http:&#x2F;&#x2F;www.baidu.com\nSource0:        %&#123;name&#125;.tar.gz\n\n# 构建依赖\nBuildRequires:  git\nBuildRequires:  make\n\n# 详细描述\n%description\n\n&#123;&#123;.LongDescribe&#125;&#125;\n\n# 构建之前执行的脚本，一般为解压缩将在source目录的压缩包解压到build目录\n%prep\n\n# %setup 不加任何选项，仅将软件包打开。\n# %setup -a 切换目录前，解压指定 Source 文件，例如 &quot;-a 0&quot; 表示解压 &quot;Source0&quot;\n# %setup -n newdir 将软件包解压在newdir目录。\n# %setup -c 解压缩之前先产生目录。\n# %setup -b num 将第 num 个 source 文件解压缩。\n# %setup -D 解压前不删除目录\n# %setup -T 不使用default的解压缩操作。\n# %setup -q 不显示解包过程\n# %setup -T -b 0 将第 0 个源代码文件解压缩。\n# %setup -c -n newdir 指定目录名称 newdir，并在此目录产生 rpm 套件。\n# %setup -q 不打印解压日志\n\n%setup -q -c -n src -a 0\n\n# 编译脚本\n%build\n\ncd &#123;&#123;.project&#125;&#125; &amp;&amp; make\n\n# 检查\n%check\n\n&#123;&#123;.project&#125;&#125;&#x2F;bin&#x2F;&#123;&#123;.project&#125;&#125; version\n\n# 安装脚本,将build目录产生的可执行文件复制到buildroot虚拟目录中\n%install\n\ninstall -D  -p  -m 0755 $&#123;RPM_BUILD_DIR&#125;&#x2F;src&#x2F;&#123;&#123;.project&#125;&#125;&#x2F;bin&#x2F;&#123;&#123;.project&#125;&#125; $&#123;RPM_BUILD_ROOT&#125;%&#123;_bindir&#125;&#x2F;&#123;&#123;.project&#125;&#125;\ninstall -D -m 0644 $&#123;RPM_BUILD_DIR&#125;&#x2F;src&#x2F;&#123;&#123;.project&#125;&#125;&#x2F;&#123;&#123;.project&#125;&#125;.service $&#123;RPM_BUILD_ROOT&#125;%&#123;_unitdir&#125;&#x2F;&#123;&#123;.project&#125;&#125;.service\n\n# 说明%&#123;buildroot&#125;中那些文件和目录需要打包到rpm中\n%files\n\n%&#123;_bindir&#125;&#x2F;&#123;&#123;.project&#125;&#125;\n%&#123;_unitdir&#125;&#x2F;&#123;&#123;.project&#125;&#125;.service\n\n# 变更记录\n%changelog<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>将上面的文件保存到<code>rpmbuild/SPECS</code>目录</p>\n<h5 id=\"构建\"><a href=\"#构建\" class=\"headerlink\" title=\"构建\"></a>构建</h5><p>将上面的spec文件保存为test.spec到<code>~/rpmbuild/SPECS/</code>中执行</p>\n<pre class=\"line-numbers language-sehll\" data-language=\"sehll\"><code class=\"language-sehll\">rpmbuild -ba ~&#x2F;rpmbuild&#x2F;SPECS&#x2F;test.spec<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>脚本如果没有问题的话在<code>~/rpmbuild/RPMS</code>目录下生成rpm文件<code>~/rpmbuild/SRPMS</code>为rpm源码包</p>\n<h6 id=\"常用选项\"><a href=\"#常用选项\" class=\"headerlink\" title=\"常用选项\"></a>常用选项</h6><ul>\n<li>-ba 表示构建二进制包和源码包</li>\n<li>-bb 只构建二进制包</li>\n<li>–clean 构建完成后清理</li>\n<li>–define&#x3D;”k v” 定义spec中的变量</li>\n<li>–help 查看帮助</li>\n</ul>\n<h5 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h5><p><a href=\"https://www.cnblogs.com/michael-xiang/p/10480809.html\">https://www.cnblogs.com/michael-xiang/p/10480809.html</a><br><a href=\"https://www.cnblogs.com/jing99/p/9672295.html\">https://www.cnblogs.com/jing99/p/9672295.html</a></p>\n","tags":["rpm"]},{"title":"restic备份linux目录","url":"/2024/07/09/restic%E5%A4%87%E4%BB%BDlinux%E7%9B%AE%E5%BD%95/","content":"<p>restic是一个用go写的快速备份程序，它不仅仅支持备份到本地还支持远程，以及支持版本管理</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li>macos</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> restic<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>debian</li>\n</ul>\n<pre class=\"line-numbers language-shel\" data-language=\"shel\"><code class=\"language-shel\">apt install restic<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>访问restic release下载对应的二进制<a href=\"https://github.com/restic/restic/releases\">https://github.com/restic/restic/releases</a></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/restic/restic/releases/download/v0.16.5/restic_0.16.5_linux_amd64.bz2\n<span class=\"token function\">bzip2</span>  <span class=\"token parameter variable\">-d</span> restic_0.16.5_linux_amd64.bz2\n<span class=\"token function\">chmod</span> +x restic_0.16.5_linux_amd64\nrestic version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h4><ul>\n<li>初始化一个备份需要密码</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">restic init <span class=\"token parameter variable\">--repo</span> /tmp/backup\n<span class=\"token comment\"># enter password for new repository:</span>\n<span class=\"token comment\"># enter password again:</span>\n<span class=\"token comment\"># created restic repository f41ad7ac1a at /tmp/backup</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># Please note that knowledge of your password is required to access</span>\n<span class=\"token comment\"># the repository. Losing your password means that your data is</span>\n<span class=\"token comment\"># irrecoverably lost.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>可以通过设置环境变量来设置备份地址和密码</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RESTIC_REPOSITORY</span><span class=\"token operator\">=</span>/tmp/backup\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RESTIC_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token number\">123456</span>\nrestic init\n\n<span class=\"token comment\"># restic init</span>\n<span class=\"token comment\"># created restic repository d79e5ccb6a at /tmp/backup</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># Please note that knowledge of your password is required to access</span>\n<span class=\"token comment\"># the repository. Losing your password means that your data is</span>\n<span class=\"token comment\"># irrecoverably lost.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>还可以使用文件和shell来输入设置密码<ul>\n<li>参数:–password-command，环境变量:$RESTIC_PASSWORD_COMMAND</li>\n<li>参数:–password-file，环境变量:$RESTIC_PASSWORD_FILE</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"远程备份\"><a href=\"#远程备份\" class=\"headerlink\" title=\"远程备份\"></a>远程备份</h5><ul>\n<li>使用sftp备份</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">restic <span class=\"token parameter variable\">-r</span> sftp:user@host:/data/backup init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>还有其他支持的类型的备份参考官方文档</li>\n</ul>\n<h4 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">restic <span class=\"token parameter variable\">-r</span> /tmp/backup/ <span class=\"token parameter variable\">--verbose</span> backup ~/work<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p>–exclude可以选择忽略备份的文件</p>\n</li>\n<li><p>可以通过snapshots查看备份</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">restic <span class=\"token parameter variable\">-r</span> /tmp/backup snapshots\n<span class=\"token comment\"># repository d79e5ccb opened (version 2, compression level auto)</span>\n<span class=\"token comment\"># ID        Time                 Host        Tags        Paths</span>\n<span class=\"token comment\"># ------------------------------------------------------------------------</span>\n<span class=\"token comment\"># eb8f1539  2024-07-11 11:20:07  docker                  /home/debian/work</span>\n<span class=\"token comment\"># ------------------------------------------------------------------------</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"备份管理\"><a href=\"#备份管理\" class=\"headerlink\" title=\"备份管理\"></a>备份管理</h4><h5 id=\"查看快照\"><a href=\"#查看快照\" class=\"headerlink\" title=\"查看快照\"></a>查看快照</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">restic <span class=\"token parameter variable\">-r</span> /tmp/backup snapshots\n<span class=\"token comment\"># repository d79e5ccb opened (version 2, compression level auto)</span>\n<span class=\"token comment\"># ID        Time                 Host        Tags        Paths</span>\n<span class=\"token comment\"># ------------------------------------------------------------------------</span>\n<span class=\"token comment\"># eb8f1539  2024-07-11 11:20:07  docker                  /home/debian/work</span>\n<span class=\"token comment\"># 35d7dbd3  2024-07-11 11:48:20  docker                  /home/debian/work</span>\n<span class=\"token comment\"># ------------------------------------------------------------------------</span>\n<span class=\"token comment\"># 2 snapshots</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"挂载快照\"><a href=\"#挂载快照\" class=\"headerlink\" title=\"挂载快照\"></a>挂载快照</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> ./mnt\nrestic <span class=\"token parameter variable\">-r</span> /tmp/backup/ <span class=\"token function\">mount</span> ./mnt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>通过tree可以看到挂载后会按id以及hosts等方式来存放快照</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tree ./mnt\n<span class=\"token comment\"># ./mnt</span>\n<span class=\"token comment\"># ├── hosts</span>\n<span class=\"token comment\"># │   └── docker</span>\n<span class=\"token comment\"># │       ├── 2024-07-11T11:20:07+08:00</span>\n<span class=\"token comment\"># │       │   └── home</span>\n<span class=\"token comment\"># │       │       └── debian</span>\n<span class=\"token comment\"># │       │           └── work</span>\n<span class=\"token comment\"># │       │               └── 123</span>\n<span class=\"token comment\"># │       └── latest -> 2024-07-11T11:20:07+08:00</span>\n<span class=\"token comment\"># ├── ids</span>\n<span class=\"token comment\"># │   └── eb8f1539</span>\n<span class=\"token comment\"># │       └── home</span>\n<span class=\"token comment\"># │           └── debian</span>\n<span class=\"token comment\"># │               └── work</span>\n<span class=\"token comment\"># │                   └── 123</span>\n<span class=\"token comment\"># ├── snapshots</span>\n<span class=\"token comment\"># │   ├── 2024-07-11T11:20:07+08:00</span>\n<span class=\"token comment\"># │   │   └── home</span>\n<span class=\"token comment\"># │   │       └── debian</span>\n<span class=\"token comment\"># │   │           └── work</span>\n<span class=\"token comment\"># │   │               └── 123</span>\n<span class=\"token comment\"># │   └── latest -> 2024-07-11T11:20:07+08:00</span>\n<span class=\"token comment\"># └── tags</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 20 directories, 3 files</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"比较2个快照\"><a href=\"#比较2个快照\" class=\"headerlink\" title=\"比较2个快照\"></a>比较2个快照</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">restic <span class=\"token parameter variable\">-r</span> /tmp/backup <span class=\"token function\">diff</span> eb8f1539 35d7dbd3\n<span class=\"token comment\"># repository d79e5ccb opened (version 2, compression level auto)</span>\n<span class=\"token comment\"># comparing snapshot eb8f1539 to 35d7dbd3:</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># [0:00] 100.00%  2 / 2 index files loaded</span>\n<span class=\"token comment\"># +    /home/debian/work/456</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># Files:           1 new,     0 removed,     0 changed</span>\n<span class=\"token comment\"># Dirs:            0 new,     0 removed</span>\n<span class=\"token comment\"># Others:          0 new,     0 removed</span>\n<span class=\"token comment\"># Data Blobs:      0 new,     0 removed</span>\n<span class=\"token comment\"># Tree Blobs:      4 new,     4 removed</span>\n<span class=\"token comment\">#   Added:   1.722 KiB</span>\n<span class=\"token comment\">#   Removed: 1.440 KiB</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"删除快照\"><a href=\"#删除快照\" class=\"headerlink\" title=\"删除快照\"></a>删除快照</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">restic <span class=\"token parameter variable\">-r</span> /tmp/backup snapshots\n<span class=\"token comment\"># repository d79e5ccb opened (version 2, compression level auto)</span>\n<span class=\"token comment\"># ID        Time                 Host        Tags        Paths</span>\n<span class=\"token comment\"># ------------------------------------------------------------------------</span>\n<span class=\"token comment\"># eb8f1539  2024-07-11 11:20:07  docker                  /home/debian/work</span>\n<span class=\"token comment\"># 35d7dbd3  2024-07-11 11:48:20  docker                  /home/debian/work</span>\n<span class=\"token comment\"># ------------------------------------------------------------------------</span>\n<span class=\"token comment\"># 2 snapshots</span>\n\nrestic <span class=\"token parameter variable\">-r</span> /tmp/backup forget 35d7dbd3\n<span class=\"token comment\"># repository d79e5ccb opened (version 2, compression level auto)</span>\n<span class=\"token comment\"># [0:00] 100.00%  1 / 1 files deleted</span>\n\nrestic <span class=\"token parameter variable\">-r</span> /tmp/backup snapshots\n<span class=\"token comment\"># repository d79e5ccb opened (version 2, compression level auto)</span>\n<span class=\"token comment\"># ID        Time                 Host        Tags        Paths</span>\n<span class=\"token comment\"># ------------------------------------------------------------------------</span>\n<span class=\"token comment\"># eb8f1539  2024-07-11 11:20:07  docker                  /home/debian/work</span>\n<span class=\"token comment\"># ------------------------------------------------------------------------</span>\n<span class=\"token comment\"># 1 snapshots</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"还原\"><a href=\"#还原\" class=\"headerlink\" title=\"还原\"></a>还原</h4><ul>\n<li>还原到本地的restore目录</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">restic <span class=\"token parameter variable\">-r</span> /tmp/backup/ restore eb8f1539 <span class=\"token parameter variable\">--target</span> ./restore\n<span class=\"token comment\"># repository d79e5ccb opened (version 2, compression level auto)</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># restoring &lt;Snapshot eb8f1539 of [/home/debian/work] at 2024-07-11 11:20:07.329664725 +0800 CST by debian@docker> to ./restore</span>\n<span class=\"token comment\"># Summary: Restored 4 files/dirs (4 B) in 0:00</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看备份的文件可以看到还有路径</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tree ./restore/\n<span class=\"token comment\"># ./restore/</span>\n<span class=\"token comment\"># └── home</span>\n<span class=\"token comment\">#     └── debian</span>\n<span class=\"token comment\">#         └── work</span>\n<span class=\"token comment\">#             └── 123</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 4 directories, 1 file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://restic.readthedocs.io/en/latest/010_introduction.html\">https://restic.readthedocs.io/en/latest/010_introduction.html</a></p>\n","tags":["备份"]},{"title":"ssh隧道","url":"/2020/11/12/ssh%E9%9A%A7%E9%81%93/","content":"<p>通过ssh端口转发，穿透内网或绕过防火墙，以及tcp流量加密保护</p>\n<span id=\"more\"></span>\n<h4 id=\"SSH隧道\"><a href=\"#SSH隧道\" class=\"headerlink\" title=\"SSH隧道\"></a>SSH隧道</h4><p>端口转发默认是开启如果没开启则需要<code>AllowTcpForwarding=yes</code></p>\n<h5 id=\"本地端口转发\"><a href=\"#本地端口转发\" class=\"headerlink\" title=\"本地端口转发\"></a>本地端口转发</h5><p><img src=\"/../images/pasted-8.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>在192.168.1.1上执行下面的命令<br>通过192.168.1.2的22号端口将本地的3306端口代理到192.168.1.1的3306端口</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-g</span> <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-N</span> <span class=\"token parameter variable\">-L</span> <span class=\"token number\">3306</span>:192.168.1.2:3306 root@172.16.1.2 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">22</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"远程端口转发\"><a href=\"#远程端口转发\" class=\"headerlink\" title=\"远程端口转发\"></a>远程端口转发</h5><p><img src=\"/../images/pasted-9.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>在192.168.1.1上执行下面的命令<br>则表示将192.168.1.2的3306端口转发到1.1.1.1的3306端口上，这样1.1.1.1就能访问192.168.1.2上3306端口的服务了</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-N</span> <span class=\"token parameter variable\">-R</span> <span class=\"token number\">3306</span>:192.168.1.2:3306 root@1.1.1.1 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">22</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"本地转发和远程转发\"><a href=\"#本地转发和远程转发\" class=\"headerlink\" title=\"本地转发和远程转发\"></a>本地转发和远程转发</h5><p><code>ssh -f -N -&lt;L|R&gt; &lt;映射IP&gt;:&lt;映射端口&gt;:&lt;转发IP&gt;:&lt;转发端口&gt; &lt;服务账号&gt;@&lt;服务IP&gt; -p &lt;服务端口&gt;</code></p>\n<ul>\n<li>不管是本地转发和转成转都是转发端口</li>\n<li>远程和本地是相对于执行ssh隧道命令的位置来说的</li>\n<li>本地转发将映射端口映射到ssh客户端，也就是上面命令中的映射IP和映射端口在本地，映射IP可以省略默认为localhost且映射IP只能写本地拥有的IP，-g选项可以将绑定变为0.0.0.0,转发IP和转发端口则是服务端需要转发的地址和端口</li>\n<li>远程转发则将映射端口映射到ssh服务端，也就是将映射IP和映射端口放在了ssh服务端,转发ip和转发端口是通过ssh客户端执行的</li>\n</ul>\n<h5 id=\"选项解释\"><a href=\"#选项解释\" class=\"headerlink\" title=\"选项解释\"></a>选项解释</h5><ul>\n<li>“-L选项”：表示使用本地端口转发创建ssh隧道</li>\n<li>“-R选项”：表示使用远程端口转发创建ssh隧道</li>\n<li>“-N选项”：表示创建隧道以后不连接到sshServer端，通常与”-f”选项连用</li>\n<li>“-f选项”：表示在后台运行ssh隧道，通常与”-N”选项连用</li>\n<li>“-g选项”：表示ssh隧道对应的转发端口将监听在主机的所有IP中，不使用”-g选项”时，转发端口默认只监听在主机的本地回环地址中，”-g”表示开启网关模式，远程端口转发中，无法开启网关功能</li>\n</ul>\n","tags":["ssh","内网穿透"]},{"title":"rsync使用","url":"/2023/06/07/rsync%E4%BD%BF%E7%94%A8/","content":"<p>rsync是一个用于文件同步和传输的实用工具。它可以在本地或远程系统之间进行文件传输，并提供许多功能，例如增量复制、备份、远程同步等。</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li>centos</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> <span class=\"token function\">rsync</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>debian</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">rsync</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>macos自带但是版本比较老，可以用homebrew更新</li>\n</ul>\n<h4 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h4><ul>\n<li>基本使用</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-r</span> <span class=\"token variable\">$src</span> <span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>同步元信息比如创建时间</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-a</span> <span class=\"token variable\">$src</span> <span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>显示进度-v</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-av</span> <span class=\"token variable\">$src</span> <span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>压缩传输-z</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-avz</span> <span class=\"token variable\">$src</span> <span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>src末尾带<code>/</code>在目标上不创建目录,既带<code>/</code>意思是将目录下的文件传输到目标，不带则便是将<code>文件夹</code>传输到目标</li>\n</ul>\n<h4 id=\"SSH远程同步\"><a href=\"#SSH远程同步\" class=\"headerlink\" title=\"SSH远程同步\"></a>SSH远程同步</h4><ul>\n<li>一般只需要在目标前加上用户名和ip和冒号即可</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rv</span> <span class=\"token parameter variable\">-e</span> <span class=\"token function\">ssh</span> <span class=\"token variable\">$src</span> root@0.0.0.0:<span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>上传,<code>-e ssh</code>可以省略</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rv</span> <span class=\"token variable\">$src</span> root@0.0.0.0:<span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>下载</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rv</span> root@0.0.0.0:<span class=\"token variable\">$src</span> <span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>指定ssh端口</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rv</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"ssh -p2222\"</span> <span class=\"token variable\">$src</span> root@0.0.0.0:<span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"rsync协议同步\"><a href=\"#rsync协议同步\" class=\"headerlink\" title=\"rsync协议同步\"></a>rsync协议同步</h4><h5 id=\"服务端部署\"><a href=\"#服务端部署\" class=\"headerlink\" title=\"服务端部署\"></a>服务端部署</h5><h6 id=\"创建配置文件\"><a href=\"#创建配置文件\" class=\"headerlink\" title=\"创建配置文件\"></a>创建配置文件</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> rsyncd.conf</span>\nuid = root\ngid = root\nport = 873\nfake super = yes\nuse chroot = yes\nmax connections = 200\ntimeout = 600\nignore errors\nread only = no\nlist = yes\nauth users = rsync\nsecrets file = /root/rsync/rsyncd.passwd\nlog file = /root/rsync/rsyncd.log\npid file = /root/rsync/rsyncd.pid\nlock  file = /root/rsync/rsyncd.lock\n#####################################\n[rsync]\ncomment = rsync\npath = /root/rsync/data/\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>参数说明</li>\n</ul>\n<p>参阅 <a href=\"https://docs.rockylinux.org/books/learning_rsync/04_rsync_configure/\">https://docs.rockylinux.org/books/learning_rsync/04_rsync_configure/</a></p>\n<table>\n<thead>\n<tr>\n<th>项</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>address &#x3D; 192.168.100.4</td>\n<td>rsync默认监听的IP地址</td>\n</tr>\n<tr>\n<td>port &#x3D; 873</td>\n<td>rsync默认监听的端口</td>\n</tr>\n<tr>\n<td>pid file &#x3D; &#x2F;var&#x2F;run&#x2F;rsyncd.pid</td>\n<td>进程pid的文件位置</td>\n</tr>\n<tr>\n<td>log file &#x3D; &#x2F;var&#x2F;log&#x2F;rsyncd.log</td>\n<td>日志的文件位置</td>\n</tr>\n<tr>\n<td>[share]</td>\n<td>共享名称</td>\n</tr>\n<tr>\n<td>comment &#x3D; rsync</td>\n<td>备注或者描述信息</td>\n</tr>\n<tr>\n<td>path &#x3D; &#x2F;rsync&#x2F;</td>\n<td>所在的系统路径位置</td>\n</tr>\n<tr>\n<td>read only &#x3D; yes</td>\n<td>yes表示只读，no表示可读可写</td>\n</tr>\n<tr>\n<td>list &#x3D; yes</td>\n<td>yes表示可以看到共享名字</td>\n</tr>\n<tr>\n<td>dont compress &#x3D; *.gz *.gz2 *.zip</td>\n<td>哪些文件类型不对它进行压缩</td>\n</tr>\n<tr>\n<td>auth users &#x3D; rsync</td>\n<td>启用虚拟用户，定义个虚拟用户叫什么。 需要自行创建</td>\n</tr>\n<tr>\n<td>secrets file &#x3D; &#x2F;etc&#x2F;rsyncd_users.db</td>\n<td>用来指定虚拟用户的密码文件位置，必须以.db结尾。 文件的内容格式是”用户名:密码”，一行一个</td>\n</tr>\n<tr>\n<td>fake super  &#x3D; yes</td>\n<td>yes表示不需要daemon以root运行，就可以存储文件的完整属性。</td>\n</tr>\n<tr>\n<td>uid &#x3D;</td>\n<td></td>\n</tr>\n<tr>\n<td>gid &#x3D;</td>\n<td>两个参数用来指定当以root身份运行rsync守护进程时，指定传输文件所使用的用户和组，默认都是nobody 默认是nobody</td>\n</tr>\n<tr>\n<td>use chroot  &#x3D;  yes</td>\n<td>传输前是否需要进行根目录的锁定，yes是，no否。 rsync为了增加安全性，默认值为yes。</td>\n</tr>\n<tr>\n<td>max  connections  &#x3D;  4</td>\n<td>允许最大的连接数，默认值为0，表示不做限制</td>\n</tr>\n<tr>\n<td>lock file &#x3D; &#x2F;var&#x2F;run&#x2F;rsyncd.lock</td>\n<td>指定的锁文件，和“max  connections ”参数关联</td>\n</tr>\n<tr>\n<td>exclude  &#x3D;  lost+found&#x2F;</td>\n<td>排除不需要传输的目录</td>\n</tr>\n<tr>\n<td>transfer logging  &#x3D;  yes</td>\n<td>是否启用类似ftp的日志格式来记录rsync的上传和下载</td>\n</tr>\n<tr>\n<td>timeout &#x3D;  900</td>\n<td>指定超时时间。 指定超时的时间，如果在指定时间内没有数据被传输，则rsync将直接退出。 单位为秒，默认值为0表示永不超时</td>\n</tr>\n<tr>\n<td>ignore nonreadable &#x3D; yes</td>\n<td>是否忽略用户没有访问权限的文件</td>\n</tr>\n<tr>\n<td>motd file &#x3D; &#x2F;etc&#x2F;rsyncd&#x2F;rsyncd.motd</td>\n<td>用于指定消息文件的路径。 默认情况下，是没有 motd 文件的。 这个消息就是当用户登录以后显示的欢迎信息。</td>\n</tr>\n<tr>\n<td>hosts allow &#x3D; 10.1.1.1&#x2F;24</td>\n<td>用于指定哪些IP或者网段的客户端允许访问。 可填写ip、网段、主机名、域下面的主机，多个用空格隔开。 默认允许所有人访问</td>\n</tr>\n<tr>\n<td>hosts deny &#x3D;  10.1.1.20</td>\n<td>用户指定哪些ip或者网段的客户端不允许访问。 如果hosts allow和hosts deny有相同的匹配结果，则该客户端最终不能访问。 如果客户端的地址即不在hosts allow中，也不在hosts deny中，则该客户端允许访问。 默认情况下，没有该参数</td>\n</tr>\n<tr>\n<td>auth  users &#x3D; li</td>\n<td>启用虚拟用户，多个用户用英语状态的逗号进行隔开</td>\n</tr>\n<tr>\n<td>syslog facility  &#x3D; daemon</td>\n<td>定义系统日志的级别， 有这些值可填：auth、authpriv、cron、daemon、ftp、kern、lpr、mail、news、 security、syslog、user、uucp、 local0、local1、local2、local3、local4、local5、local6和local7。 默认值是daemon</td>\n</tr>\n</tbody></table>\n<h5 id=\"创建密码文件\"><a href=\"#创建密码文件\" class=\"headerlink\" title=\"创建密码文件\"></a>创建密码文件</h5><ul>\n<li>这个要和配置文件对应一致</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 账户名:密码</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"rsync:123456\"</span> <span class=\"token operator\">></span> rsyncd.passwd\n<span class=\"token function\">chmod</span> <span class=\"token number\">600</span> rsyncd.passwd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"管理脚本\"><a href=\"#管理脚本\" class=\"headerlink\" title=\"管理脚本\"></a>管理脚本</h5><blockquote>\n<p>管理脚本有很多种可以自己创建一个systemd管理，这里我就简单点使用脚本管理</p>\n</blockquote>\n<ul>\n<li>启动脚本</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> start.sh</span>\n#! /bin/bash\nrsync --daemon --config=./rsyncd.conf\nEOF</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>停止脚本</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> stop.sh</span>\n#! /bin/bash\nkill -15 <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> rsyncd.pid<span class=\"token variable\">)</span></span>\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"目录总览\"><a href=\"#目录总览\" class=\"headerlink\" title=\"目录总览\"></a>目录总览</h5><pre class=\"line-numbers language-tree\" data-language=\"tree\"><code class=\"language-tree\">.\n├── data\n├── rsyncd.conf\n├── rsyncd.lock\n├── rsyncd.log\n├── rsyncd.passwd\n├── start.sh\n└── stop.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"rsync客户端访问\"><a href=\"#rsync客户端访问\" class=\"headerlink\" title=\"rsync客户端访问\"></a>rsync客户端访问</h5><ul>\n<li>在前面加了个<code>rsync://</code>或者<code>::</code>指定协议</li>\n<li>module是rsync守护进程指定的</li>\n<li>默认交互式输入名</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 这个用户名是rsync配置文件里的虚拟用户</span>\n<span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rvP</span> <span class=\"token variable\">$src</span>/ <span class=\"token variable\">$user</span>@<span class=\"token variable\">$ip</span>::/<span class=\"token variable\">$module</span>/<span class=\"token variable\">$dest</span> \n<span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rvP</span> <span class=\"token variable\">$src</span>/ rsync://<span class=\"token variable\">$user</span>@<span class=\"token variable\">$ip</span>/<span class=\"token variable\">$module</span>/<span class=\"token variable\">$dest</span>\n<span class=\"token comment\"># 例子</span>\n<span class=\"token comment\"># rsync -rvp src/ rsync@192.168.1.1::rsync</span>\n<span class=\"token comment\"># rsync -rvp src/ rsync://rsync@192.168.1.1/rsync</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>显示所有模块</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rvP</span> <span class=\"token variable\">$src</span>/ rsync://<span class=\"token variable\">$user</span>@<span class=\"token variable\">$ip</span>/\n<span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rvP</span> <span class=\"token variable\">$src</span>/ <span class=\"token variable\">$user</span>@<span class=\"token variable\">$ip</span>::\n<span class=\"token comment\"># 例子</span>\n<span class=\"token comment\"># rsync -rvp src/ rsync://rsync@10.69.202.146/</span>\n<span class=\"token comment\"># rsync -rvp src/ rsync@10.69.202.146::</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>使用变量的方式传入密码</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">RSYNC_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token variable\">$passwd</span> <span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rvP</span> <span class=\"token variable\">$src</span>/ <span class=\"token variable\">$user</span>@<span class=\"token variable\">$ip</span>::<span class=\"token variable\">$module</span>\n<span class=\"token comment\"># 例子</span>\n<span class=\"token comment\"># RSYNC_PASSWORD=123456 rsync -rvp src/ rsync@192.168.1.1::rsync   </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>使用文件传入密码</p>\n</li>\n<li><p>创建密码文件,权限需要600,这个文件的格式和服务端的不一致</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"123456\"</span> <span class=\"token operator\">></span> rsync.passwd\n<span class=\"token function\">chown</span> <span class=\"token number\">600</span> rsync.passwd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>格式</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rvp</span> <span class=\"token variable\">$src</span>/ <span class=\"token variable\">$user</span>@<span class=\"token variable\">$addr</span>::<span class=\"token variable\">$module</span> --password-file<span class=\"token operator\">=</span><span class=\"token variable\">$paaswdfile</span>\n<span class=\"token comment\"># 例子</span>\n<span class=\"token comment\"># rsync -rvp src/ rsync@192.168.1.1::rsync --password-file=rsync.passwd</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"断点续传\"><a href=\"#断点续传\" class=\"headerlink\" title=\"断点续传\"></a>断点续传</h4><ul>\n<li>–partial传输中断不删除</li>\n<li>–progress显示进度</li>\n<li>-P 是<code>--progress</code>和<code>--partial</code>这两个参数的结合</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-avP</span> <span class=\"token variable\">$src</span> <span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"镜像同步\"><a href=\"#镜像同步\" class=\"headerlink\" title=\"镜像同步\"></a>镜像同步</h4><ul>\n<li>–delete镜像同步，目标目录和源目录一致,目标目录多余的会被删除</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-av</span> <span class=\"token parameter variable\">--delete</span> <span class=\"token variable\">$src</span> <span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p>–existing 只传输目标有的的</p>\n</li>\n<li><p>–ignore-existing 只传输目标没有的</p>\n</li>\n</ul>\n<h4 id=\"设置带宽\"><a href=\"#设置带宽\" class=\"headerlink\" title=\"设置带宽\"></a>设置带宽</h4><ul>\n<li>–bwlimit 设置带宽,单位是KB&#x2F;s</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rv</span> <span class=\"token parameter variable\">--bwlimit</span><span class=\"token operator\">=</span><span class=\"token number\">1000</span>  <span class=\"token variable\">$src</span> <span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"文件过滤\"><a href=\"#文件过滤\" class=\"headerlink\" title=\"文件过滤\"></a>文件过滤</h4><ul>\n<li>–include指定同步的文件</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 排除日志文件</span>\n<span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rv</span> <span class=\"token parameter variable\">--include</span><span class=\"token operator\">=</span><span class=\"token string\">\"*.dat\"</span> <span class=\"token variable\">$src</span> <span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>–exclude排除同步的文件</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 排除日志文件</span>\n<span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-rv</span> <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">\"*.log\"</span> <span class=\"token variable\">$src</span> <span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"增量备份\"><a href=\"#增量备份\" class=\"headerlink\" title=\"增量备份\"></a>增量备份</h4><ul>\n<li>–link-dest&#x3D;$DIR 和基准目录不一样的文件创建链接,注意这个目录需要时<code>绝对路径</code></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-v</span> --link-dest<span class=\"token operator\">=</span><span class=\"token variable\">$base</span> <span class=\"token variable\">$src</span> <span class=\"token variable\">$dest</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.ruanyifeng.com/blog/2020/08/rsync.html\">https://www.ruanyifeng.com/blog/2020/08/rsync.html</a></p>\n","tags":["rsync"]},{"title":"syslog","url":"/2020/12/08/syslog/","content":"<p>syslog是linux系统中常见得日志系统配合systemd-Journal使用</p>\n<span id=\"more\"></span>\n<p>rsyslogd是syslog的改进版本，可以将日志通过<code>syslog</code>协议发送到日志服务器</p>\n<h4 id=\"查看log\"><a href=\"#查看log\" class=\"headerlink\" title=\"查看log\"></a>查看log</h4><blockquote>\n<p><code>/var/log/</code>下各个文件,根据配置文件设置使用<code>grep</code>查找 <br>某些路径可以通过配置文件修改</p>\n</blockquote>\n<ul>\n<li>boot.log 系统启动日志</li>\n<li>message 包含整个系统的信息，mail, cron, daemon, kern, auth等相关的日志信息</li>\n<li>dmesg 开机启动内核缓冲日志，可以使用<code>dmesg</code>命令直接查看</li>\n<li>maillog mail.log 邮件服务日志</li>\n<li>yum.log yum安装的日志</li>\n<li>dnf.log centos8中使用dnf来代替yum</li>\n<li>cron crontab定时任务的日志</li>\n<li>btmp 尝试登录失败的信息，也可以使用<code>last -f /var/log/btmp</code></li>\n<li>wtmp 登录信息，使用<code>last -f /var/log/wtmp</code>查看</li>\n<li>lastlog 最近用户登录信息，不是文本文件使用命令<code>lastlog</code>直接查看</li>\n<li>spooler linux 新闻群组方面的日志，内容一般是空的</li>\n<li>sssd 系统守护进程安全日志</li>\n<li>tuned 系统调优工具tuned的日志</li>\n<li>anaconda.log 存储安装相关的信息</li>\n<li>journal systemd-journal日志，使用journalctl查看</li>\n</ul>\n<h4 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h4><blockquote>\n<p>syslog的配置目录在<code>/etc/rsyslog.conf</code>和<code>/etc/rsyslog.d/</code>之中，<code>/etc/rsyslog.conf</code>是默认配置的文件<br>下面以<code>centos8</code>为例解释</p>\n</blockquote>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">#### MODULES ####                                                                                      # 模块设置\n\nmodule(load&#x3D;&quot;imuxsock&quot; # provides support for local system logging (e.g. via logger command)           # 提供对本地命令支持如：logger\n       SysSock.Use&#x3D;&quot;off&quot;) # Turn off message reception via local log socket;                           # 关闭本地套接字接受\n# local messages are retrieved through imjournal now.                                                  # 从systemd-journal获取消息\nmodule(load&#x3D;&quot;imjournal&quot; # provides access to the systemd journal                                       \n       StateFile&#x3D;&quot;imjournal.state&quot;) # File to store the position in the journal                        #\n#module(load&#x3D;&quot;imklog&quot;) # reads kernel messages (the same are read from journald)                       # 读取内核消息，有一些来自journald\n#module(load&#x3D;&quot;immark&quot;) # provides --MARK-- message capability                                          # MARK消息\n\n# Provides UDP syslog reception                                                                        # 接受udp syslog消息\n# for parameters see http:&#x2F;&#x2F;www.rsyslog.com&#x2F;doc&#x2F;imudp.html\n#module(load&#x3D;&quot;imudp&quot;) # needs to be done just once                                                     # 只需要做一次\n#input(type&#x3D;&quot;imudp&quot; port&#x3D;&quot;514&quot;)\n\n# Provides TCP syslog reception                                                                        # 接受tpc syslog消息\n# for parameters see http:&#x2F;&#x2F;www.rsyslog.com&#x2F;doc&#x2F;imtcp.html\n#module(load&#x3D;&quot;imtcp&quot;) # needs to be done just once\n#input(type&#x3D;&quot;imtcp&quot; port&#x3D;&quot;514&quot;)\n\n#### GLOBAL DIRECTIVES ####                                                                            # 全局目录设置\n\n# Where to place auxiliary files                                                                       # 在那放辅助文件\nglobal(workDirectory&#x3D;&quot;&#x2F;var&#x2F;lib&#x2F;rsyslog&quot;)\n\n# Use default timestamp format                                                                         # 使用默认的时间戳格式\nmodule(load&#x3D;&quot;builtin:omfile&quot; Template&#x3D;&quot;RSYSLOG_TraditionalFileFormat&quot;)\n\n# Include all config files in &#x2F;etc&#x2F;rsyslog.d&#x2F;                                                          # 导入目录下的所有文件\ninclude(file&#x3D;&quot;&#x2F;etc&#x2F;rsyslog.d&#x2F;*.conf&quot; mode&#x3D;&quot;optional&quot;)\n\n#### RULES ####                                                                                        # 规则文件\n\n# Log all kernel messages to the console.                                                              # 收集内核日志到控制台\n# Logging much else clutters up the screen.                                                            # 日志太多会把屏幕弄乱\n#kern.*                                                 &#x2F;dev&#x2F;console\n\n# Log anything (except mail) of level info or higher.                                                  # 记录任何除了邮件的日志\n# Don&#39;t log private authentication messages!                                                           # 不要记录认真消息\n*.info;mail.none;authpriv.none;cron.none                &#x2F;var&#x2F;log&#x2F;messages\n\n# The authpriv file has restricted access.                                                             # 认证相关的消息存放的路径\nauthpriv.*                                              &#x2F;var&#x2F;log&#x2F;secure\n\n# Log all the mail messages in one place.                                                              # 所有的右键消息存放位置，- 表示异步因为数据库比较多\nmail.*                                                  -&#x2F;var&#x2F;log&#x2F;maillog\n\n\n# Log cron stuff                                                                                       # 定时任务的日志\ncron.*                                                  &#x2F;var&#x2F;log&#x2F;cron\n\n# Everybody gets emergency messages                                                                    # 记录所有的大于等于emerg级别信息, 以wall方式发送给每个登录到系统的人\n*.emerg                                                 :omusrmsg:*\n\n# Save news errors of level crit and higher in a special file.                                         # 记录uucp,news.crit等存放在&#x2F;var&#x2F;log&#x2F;spooler\nuucp,news.crit                                          &#x2F;var&#x2F;log&#x2F;spooler\n\n# Save boot messages also to boot.log                                                                  # 启动相关的消息\nlocal7.*                                                &#x2F;var&#x2F;log&#x2F;boot.log\n\n# ### sample forwarding rule ###                                                                       # 转发规则\n#action(type&#x3D;&quot;omfwd&quot;  \n# An on-disk queue is created for this action. If the remote host is                                   # 为此操作创建一个磁盘队列。 如果远程主机是down掉，消息被假脱机到磁盘，并在重新启动时发送。\n# down, messages are spooled to disk and sent when it is up again.\n#queue.filename&#x3D;&quot;fwdRule1&quot;       # unique name prefix for spool files                                  # 假脱机文件的唯一名称前缀\n#queue.maxdiskspace&#x3D;&quot;1g&quot;         # 1gb space limit (use as much as possible)                           # 最多1gb的空间(尽可能多的使用)\n#queue.saveonshutdown&#x3D;&quot;on&quot;       # save messages to disk on shutdown                                   # 关机是保存消息到磁盘\n#queue.type&#x3D;&quot;LinkedList&quot;         # run asynchronously                                                  # 使用链接列表模式\n#action.resumeRetryCount&#x3D;&quot;-1&quot;    # infinite retries if host is down                                    # 主机关机则无限重试\n# Remote Logging (we use TCP for reliable delivery)                                                    # 远程日志，（使用可靠的tcp）\n# remote_host is: name&#x2F;ip, e.g. 192.168.0.1, port optional e.g. 10514                                  # 远程机器是名字&#x2F;ip\n#Target&#x3D;&quot;remote_host&quot; Port&#x3D;&quot;XXX&quot; Protocol&#x3D;&quot;tcp&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"常见操作\"><a href=\"#常见操作\" class=\"headerlink\" title=\"常见操作\"></a>常见操作</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看状态</span>\nsystemctl status rsyslog\n<span class=\"token comment\"># 重启</span>\nsystemctl restart rsyslog\n<span class=\"token comment\"># 停止</span>\nsystemctl stop rsyslog<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.debugger.wiki/article/html/1563278670670182\">https://www.debugger.wiki/article/html/1563278670670182</a><br><a href=\"https://www.cnblogs.com/bonelee/p/9477544.html\">https://www.cnblogs.com/bonelee/p/9477544.html</a></p>\n","tags":["日志"]},{"title":"tcpdump","url":"/2021/08/10/tcpdump/","content":"<p>tcpdump是linux下的一个网络抓包工具</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>tcpdump非常强大且复杂命令，是我们平常排查网络相关问题的得力助手</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>一般linux发行版自带基本无需安装</p>\n<h4 id=\"常用操作\"><a href=\"#常用操作\" class=\"headerlink\" title=\"常用操作\"></a>常用操作</h4><p>抓取有192.168.1.1的包,来源或目的</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token function\">host</span> <span class=\"token number\">192.168</span>.1.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在所有网卡中抓取有192.168.1.1的包,来源或目的</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> any <span class=\"token function\">host</span> <span class=\"token number\">192.168</span>.1.1 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>抓取主机是192.168.1.1 或 192.168.1.2</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> any <span class=\"token function\">host</span> <span class=\"token number\">192.168</span>.1.1 or <span class=\"token number\">192.168</span>.1.2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>抓取除了192.168.1.1的包</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> any <span class=\"token function\">host</span> <span class=\"token operator\">!</span> <span class=\"token number\">192.168</span>.1.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>抓取所有的流量</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-nS</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>指定端口</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> any port <span class=\"token number\">22</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>抓取192.168.1.1到192.168.1.2的80端口</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump  <span class=\"token parameter variable\">-i</span> any  src <span class=\"token function\">host</span>  <span class=\"token number\">192.168</span>.1.1 and dst <span class=\"token function\">host</span> <span class=\"token number\">192.168</span>.1.2 and dst port <span class=\"token number\">80</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> eth0 icmp\ntcpdump <span class=\"token parameter variable\">-i</span> eth0 <span class=\"token function\">ip</span>\ntcpdump <span class=\"token parameter variable\">-i</span> eth0 tcp\ntcpdump <span class=\"token parameter variable\">-i</span> eth0 udp\ntcpdump <span class=\"token parameter variable\">-i</span> eth0 arp\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"显示参数\"><a href=\"#显示参数\" class=\"headerlink\" title=\"显示参数\"></a>显示参数</h4><ul>\n<li>-n 不解析主机名</li>\n<li>-nn 不解析主机名以及协议</li>\n<li>-v 打印详情</li>\n<li>-e 显示二层信息</li>\n<li>-s 抓取全部数据0为全部，默认96</li>\n<li>-c 抓包次数</li>\n</ul>\n<h4 id=\"http协议\"><a href=\"#http协议\" class=\"headerlink\" title=\"http协议\"></a>http协议</h4><p>所有的get请求</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> eth0 <span class=\"token parameter variable\">-s</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-A</span> <span class=\"token string\">'tcp[((tcp[12:1] &amp; 0xf0) >> 2):4] = 0x47455420'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>POST 请求</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> any <span class=\"token parameter variable\">-s</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-A</span> <span class=\"token string\">'tcp[((tcp[12:1] &amp; 0xf0) >> 2):4] = 0x504F5354'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>抓取80端口的http协议get请求的流量,只需要指定下<code>tcp dst port 80</code>指定下端口号,post同理</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> any <span class=\"token parameter variable\">-s</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-A</span> <span class=\"token string\">'tcp dst port 80 and tcp[((tcp[12:1] &amp; 0xf0) >> 2):4] = 0x47455420'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>抓取192.168.1.1的80端口中get和post请求的http流量的请求和响应</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> any <span class=\"token parameter variable\">-s</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-A</span> <span class=\"token string\">'tcp dst port 80 and tcp[((tcp[12:1] &amp; 0xf0) >> 2):4] = 0x47455420 or tcp[((tcp[12:1] &amp; 0xf0) >> 2):4] = 0x504F5354 or tcp[((tcp[12:1] &amp; 0xf0) >> 2):4] = 0x48545450 or tcp[((tcp[12:1] &amp; 0xf0) >> 2):4] = 0x3C21444F and host 192.168.1.1'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>监控所有的get和post的主机和地址</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> any  <span class=\"token parameter variable\">-s</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-n</span> <span class=\"token parameter variable\">-l</span> <span class=\"token operator\">|</span> <span class=\"token function\">egrep</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">\"POST /|GET /|Host:\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"导出文件\"><a href=\"#导出文件\" class=\"headerlink\" title=\"导出文件\"></a>导出文件</h4><p>-w 表示把数据报文输出到文件<br>-r 表示读取数据报文</p>\n<p>抓取所有的包保存到tcpdump.pcap</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> any <span class=\"token parameter variable\">-s</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-X</span> <span class=\"token parameter variable\">-w</span> tcpdump.pcap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>读取pcap文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-A</span> <span class=\"token parameter variable\">-r</span> tcpdump.pcap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>保存文件的时候切分文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> any <span class=\"token function\">host</span> <span class=\"token parameter variable\">-G</span> <span class=\"token number\">60</span> <span class=\"token parameter variable\">-C</span> 150M <span class=\"token parameter variable\">-w</span> test_%Y%m%d%H%M.pcap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.middlewareinventory.com/blog/tcpdump-capture-http-get-post-requests-apache-weblogic-websphere/\">https://www.middlewareinventory.com/blog/tcpdump-capture-http-get-post-requests-apache-weblogic-websphere/</a><br><a href=\"https://www.cnblogs.com/bakari/p/10748721.html\">https://www.cnblogs.com/bakari/p/10748721.html</a></p>\n","tags":["网络"]},{"title":"为ssh配置双因素认证","url":"/2022/12/30/%E4%B8%BAssh%E9%85%8D%E7%BD%AE%E5%8F%8C%E5%9B%A0%E7%B4%A0%E8%AE%A4%E8%AF%81/","content":"<p>双因素认证使用totp算法来生成动态的验证码来验证</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装google-authenticator\"><a href=\"#安装google-authenticator\" class=\"headerlink\" title=\"安装google-authenticator\"></a>安装google-authenticator</h4><ul>\n<li>安装epel源，国内也可以使用阿里的</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\nyum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> google-authenticator<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"配置google-authenticator\"><a href=\"#配置google-authenticator\" class=\"headerlink\" title=\"配置google-authenticator\"></a>配置google-authenticator</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"auth required pam_google_authenticator.so\"</span> <span class=\"token operator\">>></span>/etc/pam.d/sshd\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ChallengeResponseAuthentication yes\"</span> <span class=\"token operator\">>></span> /etc/ssh/sshd_config\n\nsystemctl restart sshd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"使用google-authenticator\"><a href=\"#使用google-authenticator\" class=\"headerlink\" title=\"使用google-authenticator\"></a>使用google-authenticator</h4><ul>\n<li><p>会问你几个问题，一路y即可，之后会有个二维码拿手机支持totp的软件扫码即可</p>\n</li>\n<li><p>同时会在当前用户的家目录下生产一个<code>.google_authenticator</code>文件</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">google-authenticator<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"配置秘钥登录也使用双因数认证\"><a href=\"#配置秘钥登录也使用双因数认证\" class=\"headerlink\" title=\"配置秘钥登录也使用双因数认证\"></a>配置秘钥登录也使用双因数认证</h4><ul>\n<li>默认情况下只有使用密码才会验证双因素</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"AuthenticationMethods publickey,password publickey,keyboard-interactive\"</span> <span class=\"token operator\">>></span> /etc/ssh/sshd_config<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p>在&#x2F;etc&#x2F;pam.d&#x2F;sshd中将 <code>auth  substack  password-auth</code>注释掉</p>\n</li>\n<li><p>重启sshd服务</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl restart sshd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://blog.csdn.net/m0_37886429/article/details/103609673\">https://blog.csdn.net/m0_37886429/article/details/103609673</a></p>\n","tags":["安全"]},{"title":"ventoy","url":"/2022/03/16/ventoy/","content":"<p>ventoy是一个国人开发的使用usb安装系统的工具</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>我们一般安装操作系统使用以下三种方式</p>\n</blockquote>\n<ul>\n<li><p>使用软碟通将官方操作系统刻录到u盘里，这种原生无污染且没有第三方插件和广告等，但是比较麻烦换个操作系统就需要重新烧写且win7以下需要手动打补丁</p>\n</li>\n<li><p>而用别人制作pe则是先进入pe系统然后在用pe的工具安装系统，这种这种需要看pe是否干净</p>\n</li>\n<li><p>之前比较流行的ghosts等一件安装的系统则比较简单快捷，但是容易内置第三方应用</p>\n</li>\n</ul>\n<p>而ventoy则可以在将自己写入到u盘中，将操作系统放入执行的文件夹在启动的时可以选择指定的操作系统，不需要烧写。配合winpe则可以完成日常常用操作，更厉害的时候他支持linux</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>在<a href=\"https://www.ventoy.net/cn/download.html\">https://www.ventoy.net/cn/download.html</a>界面下载GitHub的国内比较慢，推荐镜像网站</p>\n<h4 id=\"写到U盘\"><a href=\"#写到U盘\" class=\"headerlink\" title=\"写到U盘\"></a>写到U盘</h4><div class=\"note warning\"><p>安装的时候会格式化磁盘</p>\n</div>\n\n<p><img src=\"/../images/ventoy-1.png\" alt=\"upload successful\"></p>\n<h4 id=\"安装系统\"><a href=\"#安装系统\" class=\"headerlink\" title=\"安装系统\"></a>安装系统</h4><ol>\n<li>将iso文件放到u盘里面</li>\n<li>设置启动方式为u盘启动，就可以看到下面的界面使用使用上下键选择要启动的系统回车键安装，则可以进入系统的安装界面</li>\n</ol>\n<p><img src=\"/../images/ventoy-2.png\" alt=\"upload successful\"></p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.ventoy.net/cn/index.html\">https://www.ventoy.net/cn/index.html</a></p>\n","tags":["重装系统"]},{"title":"使用buildx编译多平台镜像","url":"/2023/06/16/%E4%BD%BF%E7%94%A8buildx%E7%BC%96%E8%AF%91%E5%A4%9A%E5%B9%B3%E5%8F%B0%E9%95%9C%E5%83%8F/","content":"<p>目前大部分使用docker的场景中不单单只是amd64平台了有时我们需要再arm和adm64上都能运行</p>\n<span id=\"more\"></span>\n\n<p>新版本的docker默认自带</p>\n<h4 id=\"创建buildx\"><a href=\"#创建buildx\" class=\"headerlink\" title=\"创建buildx\"></a>创建buildx</h4><ul>\n<li>查看当前buildx实例</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> buildx <span class=\"token function\">ls</span>\n<span class=\"token comment\"># NAME/NODE DRIVER/ENDPOINT STATUS  BUILDKIT PLATFORMS</span>\n<span class=\"token comment\"># default * docker</span>\n<span class=\"token comment\">#   default default         running 23.0.5   linux/amd64, linux/amd64/v2, linux/amd64/v3, linux/386</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>默认会有个实例叫default，default实例下有一个default的node，一个实例下可以有多个node,星号是默认使用的实例,node有很多种类型</p>\n</blockquote>\n<ul>\n<li>创建buildx</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> buildx create <span class=\"token parameter variable\">--name</span> main <span class=\"token parameter variable\">--node</span> <span class=\"token builtin class-name\">local</span> <span class=\"token parameter variable\">--driver</span> docker-container <span class=\"token parameter variable\">--platform</span> linux/amd64,linux/arm64,linux/arm/v8 <span class=\"token parameter variable\">--use</span>\n<span class=\"token comment\"># main</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看下</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> buildx <span class=\"token function\">ls</span>\nNAME/NODE DRIVER/ENDPOINT             STATUS   BUILDKIT PLATFORMS\nmain *    docker-container\n  <span class=\"token builtin class-name\">local</span>   unix:///var/run/docker.sock inactive          linux/amd64*, linux/arm64*, linux/arm/v8*\ndefault   <span class=\"token function\">docker</span>\n  default default                     running  <span class=\"token number\">23.0</span>.5   linux/amd64, linux/amd64/v2, linux/amd64/v3, linux/386<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>–name</td>\n<td>实例名字</td>\n</tr>\n<tr>\n<td>–drive</td>\n<td>使用的驱动:docker,docker-contran,k8s,remote</td>\n</tr>\n<tr>\n<td>–driver-op</td>\n<td>设置各个驱动的参数，比如docker-contran的镜像，k8s驱动的副本数等</td>\n</tr>\n<tr>\n<td>–platform</td>\n<td>编译的平台</td>\n</tr>\n<tr>\n<td>–user</td>\n<td>默认使用这个实例，等同于docker buildx use</td>\n</tr>\n</tbody></table>\n<ul>\n<li>使用这个实例</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> buildx use main<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>当我们执行编译的时候会先下载buildx镜像并运行起来，然后使用这个容器运行的buildx来编译镜像</li>\n</ul>\n<h4 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h4><ul>\n<li>–platform执行要编译的平台，其他的参数和普通的build差不多</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 直接上传到仓库</span>\n<span class=\"token function\">docker</span> buildx build <span class=\"token parameter variable\">--platform</span> linux/amd64,linux/arm64,linux/arm <span class=\"token parameter variable\">-t</span> naturelingran/m3u8-downloader <span class=\"token parameter variable\">-o</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>registry <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>输出本地</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> buildx build <span class=\"token parameter variable\">--platform</span> linux/amd64,linux/arm64,linux/arm <span class=\"token parameter variable\">-t</span> naturelingran/m3u8-downloader <span class=\"token parameter variable\">-o</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>local,dest<span class=\"token operator\">=</span>./output <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>tar包</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> buildx build <span class=\"token parameter variable\">--platform</span> linux/amd64,linux/arm64,linux/arm <span class=\"token parameter variable\">-t</span> naturelingran/m3u8-downloader <span class=\"token parameter variable\">--output</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>tar,dest<span class=\"token operator\">=</span>./output.tar <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>直接导入到本地docker中，只支持单平台架构</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> buildx build <span class=\"token parameter variable\">--platform</span> linux/arm64 <span class=\"token parameter variable\">-t</span> naturelingran/m3u8-downloader <span class=\"token parameter variable\">--load</span> <span class=\"token builtin class-name\">.</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://docs.docker.com/engine/reference/commandline/buildx_create\">https://docs.docker.com/engine/reference/commandline/buildx_create</a></p>\n","tags":["docker"]},{"title":"使用k3d在docker中部署k3s","url":"/2024/07/02/%E4%BD%BF%E7%94%A8k3d%E5%9C%A8docker%E4%B8%AD%E9%83%A8%E7%BD%B2k3s/","content":"<p>k3d是一个在docker里面运行k3s的项目,主要用于本地开发k8s环境，这minikube很相似</p>\n<span id=\"more\"></span>\n\n<h4 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h4><ul>\n<li>需要事先安装好docker和kubectl</li>\n</ul>\n<pre class=\"line-numbers language-shel\" data-language=\"shel\"><code class=\"language-shel\">curl -s https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;k3d-io&#x2F;k3d&#x2F;main&#x2F;install.sh | bash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h4><ul>\n<li>创建集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k3d cluster create <span class=\"token operator\">&lt;</span>集群名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>三节点master</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k3d cluster create <span class=\"token operator\">&lt;</span>集群名字<span class=\"token operator\">></span> <span class=\"token parameter variable\">--servers</span> <span class=\"token number\">3</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>删除集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k3d cluster delete <span class=\"token operator\">&lt;</span>集群名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>添加节点</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k3d <span class=\"token function\">node</span> create <span class=\"token operator\">&lt;</span>节点名<span class=\"token operator\">></span> <span class=\"token parameter variable\">-c</span> <span class=\"token operator\">&lt;</span>集群名<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>将docker的镜像导入到k3d中</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k3d image <span class=\"token function\">import</span> <span class=\"token operator\">&lt;</span>镜像名<span class=\"token operator\">></span> <span class=\"token parameter variable\">-c</span> <span class=\"token operator\">&lt;</span>集群名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"GPU\"><a href=\"#GPU\" class=\"headerlink\" title=\"GPU\"></a>GPU</h4><ul>\n<li>默认k3d的镜像是没法使用gpu的需要手动构建gpu镜像,<a href=\"https://k3d.io/v5.6.3/usage/advanced/cuda/#dockerfile\">官方</a>提供了一个dockerfile文件，<code>cuda版本需要和节点的相同</code></li>\n</ul>\n<pre class=\"line-numbers language-docker\" data-language=\"docker\"><code class=\"language-docker\"><span class=\"token instruction\"><span class=\"token keyword\">ARG</span> K3S_TAG=<span class=\"token string\">\"v1.28.8-k3s1\"</span></span>\n<span class=\"token instruction\"><span class=\"token keyword\">ARG</span> CUDA_TAG=<span class=\"token string\">\"12.4.1-base-ubuntu22.04\"</span></span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">FROM</span> rancher/k3s:<span class=\"token variable\">$K3S_TAG</span> <span class=\"token keyword\">as</span> k3s</span>\n<span class=\"token instruction\"><span class=\"token keyword\">FROM</span> nvcr.io/nvidia/cuda:<span class=\"token variable\">$CUDA_TAG</span></span>\n\n<span class=\"token comment\"># Install the NVIDIA container toolkit</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> apt-get update &amp;&amp; apt-get install -y curl <span class=\"token operator\">\\</span>\n    &amp;&amp; curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg <span class=\"token operator\">\\</span>\n    &amp;&amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | <span class=\"token operator\">\\</span>\n      sed <span class=\"token string\">'s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g'</span> | <span class=\"token operator\">\\</span>\n      tee /etc/apt/sources.list.d/nvidia-container-toolkit.list <span class=\"token operator\">\\</span>\n    &amp;&amp; apt-get update &amp;&amp; apt-get install -y nvidia-container-toolkit <span class=\"token operator\">\\</span>\n    &amp;&amp; nvidia-ctk runtime configure --runtime=containerd</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> <span class=\"token options\"><span class=\"token property\">--from</span><span class=\"token punctuation\">=</span><span class=\"token string\">k3s</span></span> / / --exclude=/bin</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> <span class=\"token options\"><span class=\"token property\">--from</span><span class=\"token punctuation\">=</span><span class=\"token string\">k3s</span></span> /bin /bin</span>\n\n<span class=\"token comment\"># Deploy the nvidia driver plugin on startup</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> device-plugin-daemonset.yaml /var/lib/rancher/k3s/server/manifests/nvidia-device-plugin-daemonset.yaml</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">VOLUME</span> /var/lib/kubelet</span>\n<span class=\"token instruction\"><span class=\"token keyword\">VOLUME</span> /var/lib/rancher/k3s</span>\n<span class=\"token instruction\"><span class=\"token keyword\">VOLUME</span> /var/lib/cni</span>\n<span class=\"token instruction\"><span class=\"token keyword\">VOLUME</span> /var/log</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">ENV</span> PATH=<span class=\"token string\">\"$PATH:/bin/aux\"</span></span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">ENTRYPOINT</span> [<span class=\"token string\">\"/bin/k3s\"</span>]</span>\n<span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"agent\"</span>]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>还需要nvidia-device-plugin</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> node.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> RuntimeClass\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nvidia\n<span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> nvidia\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> DaemonSet\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nvidia<span class=\"token punctuation\">-</span>device<span class=\"token punctuation\">-</span>plugin<span class=\"token punctuation\">-</span>daemonset\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> kube<span class=\"token punctuation\">-</span>system\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nvidia<span class=\"token punctuation\">-</span>device<span class=\"token punctuation\">-</span>plugin<span class=\"token punctuation\">-</span>ds\n  <span class=\"token key atrule\">updateStrategy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> RollingUpdate\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nvidia<span class=\"token punctuation\">-</span>device<span class=\"token punctuation\">-</span>plugin<span class=\"token punctuation\">-</span>ds\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">runtimeClassName</span><span class=\"token punctuation\">:</span> nvidia <span class=\"token comment\"># Explicitly request the runtime</span>\n      <span class=\"token key atrule\">tolerations</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> nvidia.com/gpu\n        <span class=\"token key atrule\">operator</span><span class=\"token punctuation\">:</span> Exists\n        <span class=\"token key atrule\">effect</span><span class=\"token punctuation\">:</span> NoSchedule\n      <span class=\"token comment\"># Mark this pod as a critical add-on; when enabled, the critical add-on</span>\n      <span class=\"token comment\"># scheduler reserves resources for critical add-on pods so that they can</span>\n      <span class=\"token comment\"># be rescheduled after a failure.</span>\n      <span class=\"token comment\"># See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/</span>\n      <span class=\"token key atrule\">priorityClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"system-node-critical\"</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nvcr.io/nvidia/k8s<span class=\"token punctuation\">-</span>device<span class=\"token punctuation\">-</span>plugin<span class=\"token punctuation\">:</span>v0.15.0<span class=\"token punctuation\">-</span>rc.2\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nvidia<span class=\"token punctuation\">-</span>device<span class=\"token punctuation\">-</span>plugin<span class=\"token punctuation\">-</span>ctr\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> FAIL_ON_INIT_ERROR\n            <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span>\n        <span class=\"token key atrule\">securityContext</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">allowPrivilegeEscalation</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n          <span class=\"token key atrule\">capabilities</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">drop</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ALL\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> device<span class=\"token punctuation\">-</span>plugin\n          <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/lib/kubelet/device<span class=\"token punctuation\">-</span>plugins\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> device<span class=\"token punctuation\">-</span>plugin\n        <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /var/lib/kubelet/device<span class=\"token punctuation\">-</span>plugins<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>使用编译脚本编译,需要实际填写自己的镜像仓库地址</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token builtin class-name\">set</span> <span class=\"token parameter variable\">-euxo</span> pipefail\n\n<span class=\"token assign-left variable\">K3S_TAG</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;K3S_TAG<span class=\"token operator\">:=</span>\"v1.28.8-k3s1\"&#125;</span> <span class=\"token comment\"># replace + with -, if needed</span>\n<span class=\"token assign-left variable\">CUDA_TAG</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;CUDA_TAG<span class=\"token operator\">:=</span>\"12.4.1-base-ubuntu22.04\"&#125;</span>\n<span class=\"token assign-left variable\">IMAGE_REGISTRY</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;IMAGE_REGISTRY<span class=\"token operator\">:=</span>\"&lt;镜像仓库>\"&#125;</span>\n<span class=\"token assign-left variable\">IMAGE_REPOSITORY</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;IMAGE_REPOSITORY<span class=\"token operator\">:=</span>\"rancher<span class=\"token operator\">/</span>k3s\"&#125;</span>\n<span class=\"token assign-left variable\">IMAGE_TAG</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$K3S_TAG</span>-cuda-<span class=\"token variable\">$CUDA_TAG</span>\"</span>\n<span class=\"token assign-left variable\">IMAGE</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;IMAGE<span class=\"token operator\">:=</span>\"$IMAGE_REGISTRY<span class=\"token operator\">/</span>$IMAGE_REPOSITORY<span class=\"token operator\">:</span>$IMAGE_TAG\"&#125;</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"IMAGE=<span class=\"token variable\">$IMAGE</span>\"</span>\n\n<span class=\"token function\">docker</span> build <span class=\"token punctuation\">\\</span>\n  --build-arg <span class=\"token assign-left variable\">K3S_TAG</span><span class=\"token operator\">=</span><span class=\"token variable\">$K3S_TAG</span> <span class=\"token punctuation\">\\</span>\n  --build-arg <span class=\"token assign-left variable\">CUDA_TAG</span><span class=\"token operator\">=</span><span class=\"token variable\">$CUDA_TAG</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$IMAGE</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">docker</span> push <span class=\"token variable\">$IMAGE</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Done!\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>使用gpu镜像,其中环境变量是设置nvidia驱动功能这里设置了全部开启，不然测试pod会跑不起来，这些环境你变量在<a href=\"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/docker-specialized.html\">nvidia官网文档</a></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k3d cluster create gputest <span class=\"token parameter variable\">--image</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>GPU镜像<span class=\"token operator\">></span> <span class=\"token parameter variable\">--gpus</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"NVIDIA_DRIVER_CAPABILITIES=compute,utility,compat32,graphics,video,display@server:0\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>部署这个测试pod</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cuda<span class=\"token punctuation\">-</span>vector<span class=\"token punctuation\">-</span>add\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">runtimeClassName</span><span class=\"token punctuation\">:</span> nvidia <span class=\"token comment\"># Explicitly request the runtime</span>\n  <span class=\"token key atrule\">restartPolicy</span><span class=\"token punctuation\">:</span> OnFailure\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cuda<span class=\"token punctuation\">-</span>vector<span class=\"token punctuation\">-</span>add\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"k8s.gcr.io/cuda-vector-add:v0.1\"</span>\n      <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">nvidia.com/gpu</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>pod日志结果,部署成功</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl logs <span class=\"token parameter variable\">-f</span> cuda-vector-add\n<span class=\"token comment\"># [Vector addition of 50000 elements]</span>\n<span class=\"token comment\"># Copy input data from the host memory to the CUDA device</span>\n<span class=\"token comment\"># CUDA kernel launch with 196 blocks of 256 threads</span>\n<span class=\"token comment\"># Copy output data from the CUDA device to the host memory</span>\n<span class=\"token comment\"># Test PASSED</span>\n<span class=\"token comment\"># Done</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://k3d.io/v5.6.3/usage/configfile/\">https://k3d.io/v5.6.3/usage/configfile/</a></p>\n","tags":["docker","k8s","gpu","k3s"]},{"title":"使用docker-registry部署docker加速仓库","url":"/2024/06/25/%E4%BD%BF%E7%94%A8docker-registry%E9%83%A8%E7%BD%B2docker%E5%8A%A0%E9%80%9F%E4%BB%93%E5%BA%93/","content":"<p>最近个国内各大docker镜像仓库都无法访问，我们可以在海外自己部署一个镜像仓库</p>\n<span id=\"more\"></span>\n\n<h4 id=\"部署加速仓库\"><a href=\"#部署加速仓库\" class=\"headerlink\" title=\"部署加速仓库\"></a>部署加速仓库</h4><ul>\n<li>部署文件，<code>docekr compose up -d</code></li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.8'</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">docker-registry</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> registry<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>registry\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./data/docker<span class=\"token punctuation\">-</span>registry/config<span class=\"token punctuation\">:</span>/etc/docker/registry/\n      <span class=\"token punctuation\">-</span> ./data/docker<span class=\"token punctuation\">-</span>registry/lib<span class=\"token punctuation\">:</span>/var/lib/registry\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 80<span class=\"token punctuation\">:</span><span class=\"token number\">5000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>将下面的配置文件保存到<code>./data/docker-registry/config/config.yml</code></li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.1</span>\n<span class=\"token key atrule\">log</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">fields</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span> registry\n<span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">blobdescriptor</span><span class=\"token punctuation\">:</span> inmemory\n  <span class=\"token key atrule\">filesystem</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">rootdirectory</span><span class=\"token punctuation\">:</span> /var/lib/registry\n  <span class=\"token comment\">#tag:</span>\n  <span class=\"token comment\">#  concurrencylimit: 8</span>\n  <span class=\"token comment\">#delete: #配置删除权限,默认安装的Registry不支持删除</span>\n  <span class=\"token comment\">#  enabled: true</span>\n<span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">addr</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span><span class=\"token number\">5000</span>\n  <span class=\"token key atrule\">headers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">X-Content-Type-Options</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>nosniff<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#auth:</span>\n<span class=\"token comment\">#  htpasswd:</span>\n<span class=\"token comment\">#    realm: basic-realm</span>\n<span class=\"token comment\">#    path: /etc/docker/registry/htpasswd</span>\n<span class=\"token key atrule\">health</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">storagedriver</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">interval</span><span class=\"token punctuation\">:</span> 10s\n    <span class=\"token key atrule\">threshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n<span class=\"token key atrule\">proxy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">remoteurl</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//registry<span class=\"token punctuation\">-</span>1.docker.io<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"docker配置\"><a href=\"#docker配置\" class=\"headerlink\" title=\"docker配置\"></a>docker配置</h4><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"registry-mirrors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://&lt;ip:port>\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"insecure-registries\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://&lt;ip:port>\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>重启docker</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl restart <span class=\"token function\">docker</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"认证\"><a href=\"#认证\" class=\"headerlink\" title=\"认证\"></a>认证</h5><ul>\n<li>生成密码</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">--entrypoint</span> htpasswd httpd:2 <span class=\"token parameter variable\">-Bbn</span> <span class=\"token operator\">&lt;</span>账号密码<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>密码<span class=\"token operator\">></span> <span class=\"token operator\">></span> htpasswd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>将生成的文件放在上面配置的路径</li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://distribution.github.io/distribution/\">https://distribution.github.io/distribution/</a><br><a href=\"https://docs.docker.com/docker-hub/mirror/#configure-the-cache\">https://docs.docker.com/docker-hub/mirror/#configure-the-cache</a></p>\n","tags":["docker","镜像仓库"]},{"title":"使用multus-cni为pod创建多个网卡","url":"/2023/06/16/%E4%BD%BF%E7%94%A8multus-cni%E4%B8%BApod%E5%88%9B%E5%BB%BA%E5%A4%9A%E4%B8%AA%E7%BD%91%E5%8D%A1/","content":"<p>k8s的cni一般只创建一个网卡，有些时候我需要多个网卡，<code>multus-cni</code></p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/k8snetworkplumbingwg/multus-cni/master/deployments/multus-daemonset-thick.yml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>可能会出现oom,官方默认给的内存太小根据需要可以大点</li>\n</ul>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><ul>\n<li>编写cni配置文件，根据实际情况编写</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kubectl create <span class=\"token parameter variable\">-f</span> -</span>\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: macvlan-conf\nspec:\n  config: '&#123;\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"macvlan\",\n      \"master\": \"eth0\",\n      \"mode\": \"bridge\",\n      \"ipam\": &#123;\n        \"type\": \"host-local\",\n        \"subnet\": \"192.168.58.0/24\",\n        \"rangeStart\": \"192.168.58.100\",\n        \"rangeEnd\": \"192.168.58.200\",\n        \"routes\": [\n          &#123; \"dst\": \"0.0.0.0/0\" &#125;\n        ],\n        \"gateway\": \"192.168.58.1\"\n      &#125;\n    &#125;'\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在pod的注解上添加上面创建的cm的名字</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">k8s.v1.cni.cncf.io/networks</span><span class=\"token punctuation\">:</span> macvlan<span class=\"token punctuation\">-</span>conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>进入pod会发现多一个网卡</p>\n</li>\n<li><p>如果多个则用逗号隔开,类似</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">k8s.v1.cni.cncf.io/networks</span><span class=\"token punctuation\">:</span> macvlan<span class=\"token punctuation\">-</span>conf<span class=\"token punctuation\">,</span>macvlan<span class=\"token punctuation\">-</span>conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># k exec -it cdebug-79585bd577-ptltw -- ip addr</span>\n<span class=\"token comment\"># 1: lo: &lt;LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span>\n<span class=\"token comment\">#     link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span>\n<span class=\"token comment\">#     inet 127.0.0.1/8 scope host lo</span>\n<span class=\"token comment\">#        valid_lft forever preferred_lft forever</span>\n<span class=\"token comment\"># 2: tunl0@NONE: &lt;NOARP> mtu 1480 qdisc noop state DOWN group default qlen 1000</span>\n<span class=\"token comment\">#     link/ipip 0.0.0.0 brd 0.0.0.0</span>\n<span class=\"token comment\"># 3: ip6tnl0@NONE: &lt;NOARP> mtu 1452 qdisc noop state DOWN group default qlen 1000</span>\n<span class=\"token comment\">#     link/tunnel6 :: brd :: permaddr bec6:214:eb31::</span>\n<span class=\"token comment\"># 5: eth0@if27: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 65515 qdisc noqueue state UP group default </span>\n<span class=\"token comment\">#     link/ether 9a:8c:bd:86:e4:11 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span>\n<span class=\"token comment\">#     inet 10.244.120.104/32 scope global eth0</span>\n<span class=\"token comment\">#        valid_lft forever preferred_lft forever</span>\n<span class=\"token comment\"># 6: net1@if9: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 65535 qdisc noqueue state UP group default  第二个网卡</span>\n<span class=\"token comment\">#     link/ether 8a:9d:50:21:27:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span>\n<span class=\"token comment\">#     inet 192.168.58.103/24 brd 192.168.58.255 scope global net1</span>\n<span class=\"token comment\">#        valid_lft forever preferred_lft forever</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://github.com/k8snetworkplumbingwg/multus-cni/blob/master/docs/thick-plugin.md\">https://github.com/k8snetworkplumbingwg/multus-cni/blob/master/docs/thick-plugin.md</a></p>\n","tags":["cni","网络"]},{"title":"使用minio-operator部署minio","url":"/2022/12/12/%E4%BD%BF%E7%94%A8minio-operator%E9%83%A8%E7%BD%B2minio/","content":"<p>minio是一个对象存储服务,兼容s3协议</p>\n<span id=\"more\"></span>\n\n<p>使用minio-operator部署minio时可以图形化方便的部署</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li>kubectl安装minio插件</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl krew update\n\nkubectl krew <span class=\"token function\">install</span> minio<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>安装minio-operator到集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl minio init <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"部署minio\"><a href=\"#部署minio\" class=\"headerlink\" title=\"部署minio\"></a>部署minio</h4><ul>\n<li>打开minio-operator的ui,该命令会打印出token,填写到</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl minio proxy <span class=\"token parameter variable\">-n</span> minio-operator<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>浏览器打开localhost:9090即可打开ui，输入上面的token</li>\n</ul>\n<p><img src=\"/../images/minio-1.png\" alt=\"minio\"></p>\n<ul>\n<li>创建minio namespace,具体ns名字可以自己选择</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl create namespace minio<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>点击部署界面</li>\n</ul>\n<p><img src=\"/../images/minio-2.png\" alt=\"minio\"></p>\n<ul>\n<li>填写基本配置</li>\n</ul>\n<p><img src=\"/../images/minio-3.png\" alt=\"minio\"></p>\n<ul>\n<li>配置是否使用https,默认使用https，</li>\n</ul>\n<p><img src=\"/../images/minio-4.png\" alt=\"minio\"></p>\n<ul>\n<li>配置是否对外暴露控制台等服务，其实这个就是配置minio的svc的类型，默认是lb的</li>\n</ul>\n<p><img src=\"/../images/minio-5.png\" alt=\"minio\"></p>\n<ul>\n<li><p>剩下的还有一些监控和审计日志的配置默认即可</p>\n</li>\n<li><p>点击创建</p>\n</li>\n</ul>\n<p><img src=\"/../images/minio-6.png\" alt=\"minio\"></p>\n<ul>\n<li>稍等片刻即部署成功</li>\n</ul>\n<p><img src=\"/../images/minio-7.png\" alt=\"minio\"></p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://min.io/docs/minio/kubernetes/upstream/\">https://min.io/docs/minio/kubernetes/upstream/</a></p>\n","tags":["k8s","存储"]},{"title":"使用kubespray部署k8s集群","url":"/2023/05/25/%E4%BD%BF%E7%94%A8kubespray%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4/","content":"<p><a href=\"https://github.com/kubernetes-sigs/kubespray.git\">kubespray</a>是k8s兴趣小组开发的一个使用ansible的部署脚本,和kubeadm需要再每个节点上操作是去中心化的,这样会很麻烦</p>\n<span id=\"more\"></span>\n\n<p>而kubespray则sh你在kubeadm上是用ansible将部署自动化,kubeadm不关注除了k8s组件之外的东西，然而现实是我们在部署的时候需要安装一些组件以及一些设置比如关闭swap等</p>\n<h4 id=\"部署集群\"><a href=\"#部署集群\" class=\"headerlink\" title=\"部署集群\"></a>部署集群</h4><div class=\"note warning\"><p>默认是在线模式,需要访问外网</p>\n</div>\n\n<ul>\n<li>Python版本等问题很麻烦这里使用docker镜像</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> pull quay.io/kubespray/kubespray:v2.22.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>启动,这里将本地的inventory文件夹和key映射到容器中供kubespray使用</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">-v</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>/inventory:/inventory <span class=\"token parameter variable\">-v</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;<span class=\"token environment constant\">HOME</span>&#125;</span>\"</span>/.ssh/id_rsa:/root/.ssh/id_rsa quay.io/kubespray/kubespray:v2.22.1 <span class=\"token function\">bash</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>拷贝模本文件到自己的inventory下</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> <span class=\"token parameter variable\">-rfp</span> inventory/sample /inventory/mycluster<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>通过脚本自动生成hosts文件,也可以自己写hosts文件,且配置集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">declare</span> <span class=\"token parameter variable\">-a</span> <span class=\"token assign-left variable\">IPS</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.7</span>.19.47 <span class=\"token number\">10.7</span>.170.8 <span class=\"token number\">10.7</span>.36.194<span class=\"token punctuation\">)</span>\n<span class=\"token assign-left variable\">CONFIG_FILE</span><span class=\"token operator\">=</span>/inventory/mycluster/hosts.yaml python3 contrib/inventory_builder/inventory.py <span class=\"token variable\">$&#123;IPS<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>部署集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ansible-playbook <span class=\"token parameter variable\">-i</span> /inventory/mycluster/hosts.yaml --private-key /root/.ssh/id_rsa cluster.yml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>稍等片可以就部署一个集群</li>\n</ul>\n<h4 id=\"节点伸缩\"><a href=\"#节点伸缩\" class=\"headerlink\" title=\"节点伸缩\"></a>节点伸缩</h4><h5 id=\"添加节点\"><a href=\"#添加节点\" class=\"headerlink\" title=\"添加节点\"></a>添加节点</h5><ul>\n<li>在ansible清单中添加新节点相关信息，然后执行<code>scale.yml</code>指定新的节点名字</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ansible-playbook <span class=\"token parameter variable\">-i</span> /inventory/mycluster/hosts.yaml --private-key /root/.ssh/id_rsa scale.yml <span class=\"token parameter variable\">--limit</span> <span class=\"token variable\">$new_node</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"删除节点\"><a href=\"#删除节点\" class=\"headerlink\" title=\"删除节点\"></a>删除节点</h5><ul>\n<li>执行<code>remove-node.yml</code>这个ploybook,并且添加-e node变量来指定节点</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ansible-playbook <span class=\"token parameter variable\">-i</span> /inventory/mycluster/hosts.yaml --private-key /root/.ssh/id_rsa remove-node.yml <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">node</span><span class=\"token operator\">=</span><span class=\"token variable\">$node</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>节点不在线删除</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ansible-playbook <span class=\"token parameter variable\">-i</span> /inventory/mycluster/hosts.yaml --private-key /root/.ssh/id_rsa remove-node.yml <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">node</span><span class=\"token operator\">=</span><span class=\"token variable\">$node</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">reset_nodes</span><span class=\"token operator\">=</span>false <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">allow_ungraceful_removal</span><span class=\"token operator\">=</span>true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>最后在清单中删除已经清理的节点</li>\n</ul>\n<h4 id=\"清理安装\"><a href=\"#清理安装\" class=\"headerlink\" title=\"清理安装\"></a>清理安装</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ansible-playbook <span class=\"token parameter variable\">-i</span> /inventory/mycluster/hosts.yaml --private-key /root/.ssh/id_rsa reset.yml <span class=\"token parameter variable\">--limit</span> <span class=\"token variable\">$node</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"http://blog.naturelr.cc/\">http://blog.naturelr.cc</a></p>\n","tags":["k8s"]},{"title":"使用skopeo同步docker镜像","url":"/2022/12/19/%E4%BD%BF%E7%94%A8skopeo%E5%90%8C%E6%AD%A5docker%E9%95%9C%E5%83%8F/","content":"<p>在大部分场景下我们内部都会有一个镜像仓库来保证k8s活着cicd在拉镜像下的体验,以往我们需要使用docker pull</p>\n<span id=\"more\"></span>\n\n<p>下载下镜像然后使用docker push上传到内部仓库这个过程很繁琐,skopeo就是为了解决这个问题而诞生</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><blockquote>\n<p>centos7的rpm很老，建议使用容器运行</p>\n</blockquote>\n<ul>\n<li>macos</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> skopeo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"查看镜像情况\"><a href=\"#查看镜像情况\" class=\"headerlink\" title=\"查看镜像情况\"></a>查看镜像情况</h4><ul>\n<li>查看镜像详情</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo inspect docker://docker.io/alpine:latest --override-os linux<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo list-tags docker://docker.io/alpine --override-os linux<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo login <span class=\"token parameter variable\">-u</span> <span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>仓库地址<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"复制镜像\"><a href=\"#复制镜像\" class=\"headerlink\" title=\"复制镜像\"></a>复制镜像</h4><ul>\n<li>从本地复制到仓库</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo copy docker-daemon:alpine:latest docker://uhub.service.ucloud.cn/naturelr/test-zxz/alpine:latest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>从一个仓库复制到另一个仓库</li>\n</ul>\n<blockquote>\n<p>–override-os linux 是因为本地是m1的mac而改镜像没有改os的所以要加上这个参数,同时还有–override-arch只不过这个是arch<br>–override-arch amd64 同样是因为我本地m1是arm的但是我们需要amd64的<br>如果仓库不是https的使用–dest-tls-verify&#x3D;false  </p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo copy docker://docker.io/busybox:latest docker://uhub.service.ucloud.cn/naturelr/test-zxz/busybox:latest --override-os linux --override-arch amd64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>创建保存的目录,直接mkdir貌似有问题</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">install</span> <span class=\"token parameter variable\">-d</span> images<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>普通复制</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo copy docker://docker.io/busybox:latest dir:images<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>保存oci格式</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo copy docker://docker.io/busybox:latest oci:images<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"同步镜像\"><a href=\"#同步镜像\" class=\"headerlink\" title=\"同步镜像\"></a>同步镜像</h4><blockquote>\n<p>同步是指将一个镜像所有的tag全部复制到另一个地方</p>\n</blockquote>\n<ul>\n<li>从一个仓库同步到本地目录</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo <span class=\"token function\">sync</span> <span class=\"token parameter variable\">--src</span> <span class=\"token function\">docker</span> <span class=\"token parameter variable\">--dest</span> <span class=\"token function\">dir</span> uhub.service.ucloud.cn/naturelr/busybox:latest images<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>从一个仓库同步到另一个仓库</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo <span class=\"token function\">sync</span> <span class=\"token parameter variable\">--src</span> <span class=\"token function\">docker</span> <span class=\"token parameter variable\">--dest</span> <span class=\"token function\">docker</span> docker.io/redis uhub.service.ucloud.cn/naturelr/test-zxz/redis<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>文件同步</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">registry.example.com</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">busybox</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">redis</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"1.0\"</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"2.0\"</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"sha256:0000000000000000000000000000000011111111111111111111111111111111\"</span>\n    <span class=\"token key atrule\">images-by-tag-regex</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">nginx</span><span class=\"token punctuation\">:</span> ^1\\.13\\.<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">-</span>alpine<span class=\"token punctuation\">-</span>perl$\n    <span class=\"token key atrule\">credentials</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> john\n        <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> this is a secret\n    <span class=\"token key atrule\">tls-verify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">cert-dir</span><span class=\"token punctuation\">:</span> /home/john/certs\n<span class=\"token key atrule\">quay.io</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">tls-verify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">coreos/etcd</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> latest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo <span class=\"token function\">sync</span> <span class=\"token parameter variable\">--src</span> yaml <span class=\"token parameter variable\">--dest</span> <span class=\"token function\">docker</span> sync.yml my-registry.local.lan/repo/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"删除镜像\"><a href=\"#删除镜像\" class=\"headerlink\" title=\"删除镜像\"></a>删除镜像</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">skopeo delete docker://harbor.fumai.com/library/alpine:latest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://mp.weixin.qq.com/s/WVE6Iz6AuXH0Hu_ayBfzRw\">https://mp.weixin.qq.com/s/WVE6Iz6AuXH0Hu_ayBfzRw</a></p>\n","tags":["镜像"]},{"title":"metallb","url":"/2023/08/18/metallb/","content":"<p><a href=\"https://github.com/metallb/metallb\">metallb</a>是一个开源的负载均衡器，主要解决裸金属情况下k8s使用lb类型的service的情况</p>\n<span id=\"more\"></span>\n\n<h4 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/metallb/metallb/v0.13.10/config/manifests/metallb-native.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"L2模式\"><a href=\"#L2模式\" class=\"headerlink\" title=\"L2模式\"></a>L2模式</h4><blockquote>\n<p>l2只能在同一个二层中使用，且只有容灾没有负载均衡功能，所有访问lb的流量都转发<code>选举</code>的主节点上在通过该节点转发到对应的pod</p>\n</blockquote>\n<p><img src=\"/../images/metallb-0.png\" alt=\"x\"></p>\n<h5 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h5><ul>\n<li>获取minikube的网段</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> network inspect minikube  <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> Subnet\n<span class=\"token comment\">#                    \"Subnet\": \"192.168.49.0/24\",</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>配置lb地址范围</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">apiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: first-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  <span class=\"token comment\">#- 192.168.10.0/24</span>\n  - <span class=\"token number\">192.168</span>.49.100-192.168.49.200 <span class=\"token comment\"># docker的网络中拿去一分部给lb</span>\n  <span class=\"token comment\">#- fc00:f853:0ccd:e799::/124</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>配置该地址范围的类型</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> metallb.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> L2Advertisement\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> metallb<span class=\"token punctuation\">-</span>system\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ipAddressPools</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> first<span class=\"token punctuation\">-</span>pool<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h5><ul>\n<li>部署一个服务器</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/NatureLR/net-echo/master/k8s.yaml\nkubectl patch svc net-echo <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"spec\":&#123;\"type\": \"LoadBalancer\"&#125;&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k get svc net-echo <span class=\"token parameter variable\">-o</span> wide\nNAME       TYPE           CLUSTER-IP       EXTERNAL-IP      PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>        AGE   SELECTOR\nnet-echo   LoadBalancer   <span class=\"token number\">10.103</span>.124.212   <span class=\"token number\">192.168</span>.49.100   <span class=\"token number\">80</span>:31495/TCP   54s   <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>net-echo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>我得测试环境为minikube,创建一个在同一个二层的pod</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 指定网络为minikube</span>\n<span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--net</span> minikube <span class=\"token parameter variable\">-it</span>  alpine <span class=\"token function\">sh</span>\n<span class=\"token comment\"># 安装curl</span>\napk <span class=\"token function\">add</span> <span class=\"token function\">curl</span>\n\n<span class=\"token function\">curl</span> <span class=\"token number\">192.168</span>.49.100\n<span class=\"token comment\">#ClientAddr: 10.244.205.192:48450</span>\n<span class=\"token comment\">#ClientReqPath: /</span>\n<span class=\"token comment\">#ClientReqMeth: GET</span>\n<span class=\"token comment\">#ServerHostName: net-echo-7cccf56f57-8xtcw</span>\n<span class=\"token comment\">#ServerAddr: 10.244.205.194</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看arp表，192.168.49.100这个vip是<code>02:42:c0:a8:31:03</code>响应的</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">arp <span class=\"token parameter variable\">-n</span>\n<span class=\"token comment\"># ? (192.168.49.3) at 02:42:c0:a8:31:03 [ether]  on eth0</span>\n<span class=\"token comment\"># ? (192.168.49.100) at 02:42:c0:a8:31:03 [ether]  on eth0</span>\n<span class=\"token comment\"># ? (192.168.49.1) at 02:42:56:00:61:a6 [ether]  on eth0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>请求最终发送到了minikube-m02这个节点然后再到pod上</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">minikube <span class=\"token function\">ssh</span> <span class=\"token parameter variable\">--node</span><span class=\"token operator\">=</span><span class=\"token string\">\"minikube-m02\"</span>\n<span class=\"token function\">ip</span> addr <span class=\"token operator\">|</span><span class=\"token function\">grep</span> 02:42:c0:a8:31:03\n\n<span class=\"token comment\">#docker@minikube-m02:~$ ip addr |grep 02:42:c0:a8:31:03</span>\n<span class=\"token comment\">#    link/ether 02:42:c0:a8:31:03 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在起一个容器,会发现其实都是同一个节点在响应这也是二层的</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--net</span> minikube <span class=\"token parameter variable\">-it</span>  alpine <span class=\"token function\">sh</span>\napk <span class=\"token function\">add</span> <span class=\"token function\">curl</span>\n\n<span class=\"token function\">curl</span> <span class=\"token number\">192.168</span>.49.100\n<span class=\"token comment\"># / #  curl 192.168.49.100</span>\n<span class=\"token comment\"># ClientAddr: 10.244.205.192:61123</span>\n<span class=\"token comment\"># ClientReqPath: /</span>\n<span class=\"token comment\"># ClientReqMeth: GET</span>\n<span class=\"token comment\"># ServerHostName: net-echo-7cccf56f57-8xtcw</span>\n<span class=\"token comment\"># ServerAddr: 10.244.205.194</span>\n\narp <span class=\"token parameter variable\">-n</span>\n<span class=\"token comment\"># / # arp -n</span>\n<span class=\"token comment\"># ? (192.168.49.1) at 02:42:56:00:61:a6 [ether]  on eth0</span>\n<span class=\"token comment\"># ? (192.168.49.100) at 02:42:c0:a8:31:03 [ether]  on eth0</span>\n<span class=\"token comment\"># ? (192.168.49.3) at 02:42:c0:a8:31:03 [ether]  on eth0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>可以看到同一个二层的集群外的机器访问lb都是通过mac流向同一个node，从而通过kube-proxy流向pod</li>\n</ul>\n<h4 id=\"BGP模式\"><a href=\"#BGP模式\" class=\"headerlink\" title=\"BGP模式\"></a>BGP模式</h4><blockquote>\n<p>bgp模式通过向路由发布bgp路由从而实现vip功能，此功能需要路由器支持bgp协议故无法实验</p>\n</blockquote>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://metallb.universe.tf/\">https://metallb.universe.tf</a></p>\n","tags":["k8s","负载均衡"]},{"title":"使用velero备份k8s集群","url":"/2022/12/12/%E4%BD%BF%E7%94%A8velero%E5%A4%87%E4%BB%BDk8s%E9%9B%86%E7%BE%A4/","content":"<p>velero是k8s的备份还原工具，他不同于etcd的数据库级备份是一个应用级的备份</p>\n<span id=\"more\"></span>\n\n<h4 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h4><p><img src=\"/../images/velero-1.png\" alt=\"x\"></p>\n<h4 id=\"客户端安装\"><a href=\"#客户端安装\" class=\"headerlink\" title=\"客户端安装\"></a>客户端安装</h4><ul>\n<li>macos</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> velero<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>在<a href=\"https://github.com/vmware-tanzu/velero/releases\">https://github.com/vmware-tanzu/velero/releases</a>中下载对应系统的二进制文件</li>\n</ul>\n<h4 id=\"服务端安装\"><a href=\"#服务端安装\" class=\"headerlink\" title=\"服务端安装\"></a>服务端安装</h4><p>verero使用可以使用s3协议作为存储后端</p>\n<ul>\n<li>创建s3认证文件</li>\n</ul>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">[default]\naws_access_key_id=&lt;公钥>\naws_secret_access_key=&lt;私钥>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>安装服务端</li>\n</ul>\n<blockquote>\n<p>plugins的版本根据verero可以选择对应的版本,这里使用了minio作为后端</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero <span class=\"token function\">install</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">--provider</span> aws <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">--plugins</span> velero/velero-plugin-for-aws:v1.6.0 <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">--bucket</span> velero <span class=\"token punctuation\">\\</span>\n    --secret-file ./cert <span class=\"token punctuation\">\\</span>\n    --use-volume-snapshots<span class=\"token operator\">=</span>false <span class=\"token punctuation\">\\</span>\n    --use-node-agent <span class=\"token punctuation\">\\</span>\n    --backup-location-config <span class=\"token assign-left variable\">region</span><span class=\"token operator\">=</span>minio,s3ForcePathStyle<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span>,s3Url<span class=\"token operator\">=</span>http://minio.minio.svc.cluster.local:80<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h4><ul>\n<li>备份指定命名空间,可以多个ns，<code>*</code>为所有的命名空间,默认备份所有命名空间</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-w(–wait)</td>\n<td>可以实时查看备份进度</td>\n</tr>\n<tr>\n<td>–ttl</td>\n<td>备份回收的时间</td>\n</tr>\n<tr>\n<td>-l(–selector)</td>\n<td>使用标签来选择备份资源</td>\n</tr>\n<tr>\n<td>–include-namespaces</td>\n<td>包含的ns</td>\n</tr>\n<tr>\n<td>–exclude-namespaces</td>\n<td>不包含的ns</td>\n</tr>\n<tr>\n<td>–storage-location</td>\n<td>备份的位置</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero backup create <span class=\"token operator\">&lt;</span>备份的名字<span class=\"token operator\">></span> --include-namespaces <span class=\"token operator\">&lt;</span>指定命名空间<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看备份</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero backup get<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看备份详情</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero backup describe <span class=\"token operator\">&lt;</span>备份的名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看备份日志</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero backup logs <span class=\"token operator\">&lt;</span>备份的名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>删除备份</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero backup delete <span class=\"token operator\">&lt;</span>备份的名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"还原\"><a href=\"#还原\" class=\"headerlink\" title=\"还原\"></a>还原</h4><pre class=\"line-numbers language-shel\" data-language=\"shel\"><code class=\"language-shel\">velero restore create --from-backup &lt;备份的名字&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看还原</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero restore get<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看还原详细信息</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero restore describe <span class=\"token operator\">&lt;</span>还原的名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看还原的日志</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero restore logs <span class=\"token operator\">&lt;</span>还原的名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"定时备份\"><a href=\"#定时备份\" class=\"headerlink\" title=\"定时备份\"></a>定时备份</h4><p>定时备份和手动备份差不多只不过添加了一个类似cron的参数</p>\n<ul>\n<li>每天备份指定命名空间</li>\n</ul>\n<pre class=\"line-numbers language-shel\" data-language=\"shel\"><code class=\"language-shel\">velero schedule create &lt;备份的名字&gt; --schedule&#x3D;&quot;@daily&quot; --include-namespaces &lt;指定命名空间&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>使用cron语法来定时备份</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero schedule create <span class=\"token operator\">&lt;</span>备份的名字<span class=\"token operator\">></span> <span class=\"token parameter variable\">--schedule</span><span class=\"token operator\">=</span><span class=\"token string\">\"0 1 * * *\"</span> --include-namespaces <span class=\"token operator\">&lt;</span>指定命名空间<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"备份位置\"><a href=\"#备份位置\" class=\"headerlink\" title=\"备份位置\"></a>备份位置</h4><p>velero可也设置备份多个位置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero backup-location get<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">velero uninstall<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"pvc备份\"><a href=\"#pvc备份\" class=\"headerlink\" title=\"pvc备份\"></a>pvc备份</h4><div class=\"note warning\"><p>hostpath无法备份</p>\n</div>\n\n<ul>\n<li><p>pvc备份需要2个条件一个是安装的时候需要有<code>--use-node-agent</code>参数,将会部署一个ds</p>\n</li>\n<li><p>pod上需要有下面的注释</p>\n</li>\n<li><p>具体是先使用<code>Restic</code>或<code>Kopia</code></p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">backup.velero.io/backup-volumes: <span class=\"token string\">'&lt;卷名字1,卷名字2...>'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"集群迁移\"><a href=\"#集群迁移\" class=\"headerlink\" title=\"集群迁移\"></a>集群迁移</h4><ul>\n<li>使用备份还原迁移集群时2个使用同一个后端存储，最好安装的命令和参数一致</li>\n<li>集群的pvc等也要一致，如a集群备份使用的是<code>nfs</code>,那么b集群也要有nfs这个存储类否则还原会失败</li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://velero.io/docs/\">https://velero.io/docs/</a></p>\n","tags":["k8s","备份"]},{"title":"初试kubevirt","url":"/2022/07/17/%E5%88%9D%E8%AF%95kubevirt/","content":"<p>kubevirt是一个可以在k8s上管理虚拟机的应用</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>可以通过cr的方式创建虚拟机，是k8s具备提供虚拟化服务</p>\n</blockquote>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><blockquote>\n<p>安装资源发布在官方<a href=\"https://github.com/kubevirt/kubevirt/releases\">仓库</a>,这里提供快捷安装方法</p>\n</blockquote>\n<h3 id=\"kubevirt\"><a href=\"#kubevirt\" class=\"headerlink\" title=\"kubevirt\"></a>kubevirt</h3><blockquote>\n<p>更新也是一样的</p>\n</blockquote>\n<pre class=\"line-numbers language-sehll\" data-language=\"sehll\"><code class=\"language-sehll\"># 定义版本\nexport RELEASE&#x3D;v0.51.0\n\n# 部署operator\nkubectl apply -f https:&#x2F;&#x2F;github.com&#x2F;kubevirt&#x2F;kubevirt&#x2F;releases&#x2F;download&#x2F;$RELEASE&#x2F;kubevirt-operator.yaml\n\n# 部署kubevirt的cr\nkubectl apply -f https:&#x2F;&#x2F;github.com&#x2F;kubevirt&#x2F;kubevirt&#x2F;releases&#x2F;download&#x2F;$RELEASE&#x2F;kubevirt-cr.yaml\n\n# 查看状态\nkubectl -n kubevirt wait kv kubevirt --for condition&#x3D;Available<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>下面的yaml增加了热迁移特性且调整副本数为1</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kubectl apply <span class=\"token parameter variable\">-f</span> -</span>\napiVersion: kubevirt.io/v1\nkind: KubeVirt\nmetadata:\n  name: kubevirt\n  namespace: kubevirt\nspec:\n  certificateRotateStrategy: &#123;&#125;\n  configuration:\n    developerConfiguration:\n      featureGates: \n      - LiveMigration # 热迁移特性\n  customizeComponents: &#123;&#125;\n  imagePullPolicy: IfNotPresent\n  infra:\n    replicas: 1 # api副本数调整为1，使用默认的2\n  workloadUpdateStrategy: &#123;&#125;\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>如果是在虚拟机中需要打开嵌套虚拟化,如果没法打开就使用软件仿真</p>\n</blockquote>\n<pre class=\"line-numbers language-shlle\" data-language=\"shlle\"><code class=\"language-shlle\">kubectl create configmap kubevirt-config -n kubevirt --from-literal debug.useEmulation&#x3D;true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"kubectl插件\"><a href=\"#kubectl插件\" class=\"headerlink\" title=\"kubectl插件\"></a>kubectl插件</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl krew <span class=\"token function\">install</span> virt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"virtctl命令行工具\"><a href=\"#virtctl命令行工具\" class=\"headerlink\" title=\"virtctl命令行工具\"></a>virtctl命令行工具</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">VERSION</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> https://api.github.com/repos/kubevirt/kubevirt/releases <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> tag_name <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-v</span> -- <span class=\"token string\">'-rc'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-r</span> <span class=\"token operator\">|</span> <span class=\"token function\">head</span> <span class=\"token parameter variable\">-1</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F<span class=\"token string\">': '</span> <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/,//'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span><span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ARCH</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-s</span> <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> A-Z a-z<span class=\"token variable\">)</span></span>-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-m</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/x86_64/amd64/'</span><span class=\"token variable\">)</span></span> <span class=\"token operator\">||</span> windows-amd64.exe\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;ARCH&#125;</span>\n\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> <span class=\"token parameter variable\">-o</span> virtctl https://github.com/kubevirt/kubevirt/releases/download/<span class=\"token variable\">$&#123;VERSION&#125;</span>/virtctl-<span class=\"token variable\">$&#123;VERSION&#125;</span>-<span class=\"token variable\">$&#123;ARCH&#125;</span>\n<span class=\"token function\">chmod</span> +x virtctl\n<span class=\"token function\">sudo</span> <span class=\"token function\">install</span> virtctl /usr/local/bin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h3><div class=\"note warning\"><p>卸载有顺序先删除自动以资源,再删除oper，强制删除ns会导致ns处于Terminating状态</p>\n</div>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RELEASE</span><span class=\"token operator\">=</span>v0.54.0\nkubectl delete <span class=\"token parameter variable\">-n</span> kubevirt kubevirt kubevirt <span class=\"token parameter variable\">--wait</span><span class=\"token operator\">=</span>true <span class=\"token comment\"># --wait=true should anyway be default</span>\nkubectl delete apiservices v1alpha3.subresources.kubevirt.io <span class=\"token comment\"># this needs to be deleted to avoid stuck terminating namespaces</span>\nkubectl delete mutatingwebhookconfigurations virt-api-mutator <span class=\"token comment\"># not blocking but would be left over</span>\nkubectl delete validatingwebhookconfigurations virt-api-validator <span class=\"token comment\"># not blocking but would be left over</span>\nkubectl delete <span class=\"token parameter variable\">-f</span> https://github.com/kubevirt/kubevirt/releases/download/<span class=\"token variable\">$&#123;RELEASE&#125;</span>/kubevirt-operator.yaml <span class=\"token parameter variable\">--wait</span><span class=\"token operator\">=</span>false<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"管理虚拟机\"><a href=\"#管理虚拟机\" class=\"headerlink\" title=\"管理虚拟机\"></a>管理虚拟机</h3><ul>\n<li>创建虚拟机</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://kubevirt.io/labs/manifests/vm.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看虚拟机状态</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k get vms                                                  \n<span class=\"token comment\"># NAME     AGE   STATUS    READY</span>\n<span class=\"token comment\"># testvm   7s    Stopped   False</span>\n\nk get vmi\n<span class=\"token comment\">#NAME     AGE     PHASE     IP            NODENAME         READY</span>\n<span class=\"token comment\">#testvm   6h16m   Running   10.244.1.44   192.168.32.133   True</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>启动虚拟机</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">virtctl start testvm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>停止虚拟机</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">virtctl stop testvm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>登录虚拟机</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">virtctl console testvm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>删除虚拟机</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete vm testvm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"cdi\"><a href=\"#cdi\" class=\"headerlink\" title=\"cdi\"></a>cdi</h2><blockquote>\n<p>导入镜像创建虚拟机，使用pvc提供虚拟机磁盘</p>\n</blockquote>\n<p>CDI 支持 qemu 支持的raw和qcow2 ISO 可以使用gz或xz格式压缩图像</p>\n<h3 id=\"安装cdi\"><a href=\"#安装cdi\" class=\"headerlink\" title=\"安装cdi\"></a>安装cdi</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">VERSION</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> https://github.com/kubevirt/containerized-data-importer/releases/latest <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-o</span> <span class=\"token string\">\"v[0-9]\\.[0-9]*\\.[0-9]*\"</span><span class=\"token variable\">)</span></span>\nkubectl apply <span class=\"token parameter variable\">-f</span> https://github.com/kubevirt/containerized-data-importer/releases/download/<span class=\"token variable\">$VERSION</span>/cdi-operator.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> https://github.com/kubevirt/containerized-data-importer/releases/download/<span class=\"token variable\">$VERSION</span>/cdi-cr.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"创建磁盘持久卷-dv\"><a href=\"#创建磁盘持久卷-dv\" class=\"headerlink\" title=\"创建磁盘持久卷(dv)\"></a>创建磁盘持久卷(dv)</h3><p>dv datavolumes缩写，实际上是经过cdi处理之后的放在pvc的.img文件</p>\n<ul>\n<li>pvc自动获取，从连接下载自动解压到指定的pvc中</li>\n<li>手动上传，使用<code>virtctl</code>工具上传到pvc中</li>\n</ul>\n<h4 id=\"pvc自动拉取\"><a href=\"#pvc自动拉取\" class=\"headerlink\" title=\"pvc自动拉取\"></a>pvc自动拉取</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> pvc_fedora.yml</span>\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: \"fedora\"\n  labels:\n    app: containerized-data-importer\n  annotations:\n    cdi.kubevirt.io/storage.import.endpoint: \"https://download.fedoraproject.org/pub/fedora/linux/releases/33/Cloud/x86_64/images/Fedora-Cloud-Base-33-1.2.x86_64.raw.xz\" # 这个国内很慢建议且有时候会404,建议手动下载下来放到本地web服务上\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 5Gi\nEOF</span>\n\nkubectl apply <span class=\"token parameter variable\">-f</span> pvc_fedora.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这个时候会有创建导入到pvc的pod</p>\n<h4 id=\"手动上传镜像\"><a href=\"#手动上传镜像\" class=\"headerlink\" title=\"手动上传镜像\"></a>手动上传镜像</h4><div class=\"note warning\"><p>192.168.32.132:31937替换为实际的nodeport地址</p>\n</div>\n\n<h5 id=\"访问cdi-uploadproxy\"><a href=\"#访问cdi-uploadproxy\" class=\"headerlink\" title=\"访问cdi-uploadproxy\"></a>访问cdi-uploadproxy</h5><p>这里使用nodeport</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kubectl apply <span class=\"token parameter variable\">-f</span> -</span>\napiVersion: v1\nkind: Service\nmetadata:\n  name: cdi-uploadproxy-nodeport\n  namespace: cdi\nspec:\n  ports:\n  - port: 443\n    protocol: TCP\n    targetPort: 8443\n  selector:\n    cdi.kubevirt.io: cdi-uploadproxy\n  sessionAffinity: None\n  type: NodePort\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"上传\"><a href=\"#上传\" class=\"headerlink\" title=\"上传\"></a>上传</h5><p>由于证书的问题会导致上传失败，有2种方法来解决证书问题</p>\n<h6 id=\"使用hosts\"><a href=\"#使用hosts\" class=\"headerlink\" title=\"使用hosts\"></a>使用hosts</h6><ul>\n<li>获取信任域名</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token operator\">|</span> openssl s_client <span class=\"token parameter variable\">-showcerts</span> <span class=\"token parameter variable\">-connect</span>  <span class=\"token number\">192.168</span>.32.132:31937 <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null <span class=\"token punctuation\">\\</span>\n     <span class=\"token operator\">|</span> openssl x509 <span class=\"token parameter variable\">-inform</span> pem <span class=\"token parameter variable\">-noout</span> <span class=\"token parameter variable\">-text</span> <span class=\"token punctuation\">\\</span>\n     <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'/Subject.*CN/p'</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'/Subject Alternative/&#123;N;p&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>输出</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">Subject: CN=cdi-uploadproxy\n    X509v3 Subject Alternative Name:\n        DNS:cdi-uploadproxy, DNS:cdi-uploadproxy.cdi, DNS:cdi-uploadproxy.cdi.svc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>其中<code>Subject</code>就是讲作为认证的域名</p>\n<ul>\n<li>组合成hosts条目</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"192.168.32.132  cdi-uploadproxy\"</span> <span class=\"token operator\">>></span> /etc/hosts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>上传</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">virtctl image-upload dv dv-test\n    <span class=\"token parameter variable\">--size</span><span class=\"token operator\">=</span>5Gi <span class=\"token punctuation\">\\</span>\n    --image-path<span class=\"token operator\">=</span>./Fedora-Cloud-Base-33-1.2.x86_64.raw.xz <span class=\"token punctuation\">\\</span>\n    --uploadproxy-url<span class=\"token operator\">=</span>https://cdi-uploadproxy:31937 <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">--insecure</span> <span class=\"token comment\"># 忽略证书错误</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"信任证书\"><a href=\"#信任证书\" class=\"headerlink\" title=\"信任证书\"></a>信任证书</h6><ul>\n<li>导出证书</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get secret <span class=\"token parameter variable\">-n</span> cdi cdi-uploadproxy-server-cert <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-o</span> <span class=\"token assign-left variable\">jsonpath</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123;.data['tls\\.crt']&#125;\"</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">-d</span> <span class=\"token operator\">></span> cdi-uploadproxy-server-cert.crt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>安装证书</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装证书</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> cdi-uploadproxy-server-cert.crt /etc/pki/ca-trust/source/anchors\n\n<span class=\"token comment\"># 刷新证书</span>\n<span class=\"token function\">sudo</span> update-ca-trust<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>上传</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">virtctl image-upload dv dv-test\n    <span class=\"token parameter variable\">--size</span><span class=\"token operator\">=</span>5Gi <span class=\"token punctuation\">\\</span>\n    --image-path<span class=\"token operator\">=</span>./Fedora-Cloud-Base-33-1.2.x86_64.raw.xz <span class=\"token punctuation\">\\</span>\n    --uploadproxy-url<span class=\"token operator\">=</span>https://cdi-uploadproxy:31937 \n    <span class=\"token comment\">#--insecure # 不需要此参数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"设置默认上传地址\"><a href=\"#设置默认上传地址\" class=\"headerlink\" title=\"设置默认上传地址\"></a>设置默认上传地址</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl patch cdi cdi <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--type</span> merge <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--patch</span> <span class=\"token string\">'&#123;\"spec\":&#123;\"config\":&#123;\"uploadProxyURLOverride\":\"https://cdi-uploadproxy:31937\"&#125;&#125;&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>上传的时候就不需要带<code>--uploadproxy-url</code>参数了</p>\n<h3 id=\"使用pvc的作为vm系统盘\"><a href=\"#使用pvc的作为vm系统盘\" class=\"headerlink\" title=\"使用pvc的作为vm系统盘\"></a>使用pvc的作为vm系统盘</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> vm1.yaml</span>\napiVersion: kubevirt.io/v1\nkind: VirtualMachine\nmetadata:\n  generation: 1\n  labels:\n    kubevirt.io/os: linux\n  name: vm1\nspec:\n  running: true\n  template:\n      labels:\n        kubevirt.io/domain: vm1\n    spec:\n      domain:\n        cpu:\n          cores: 1\n        devices:\n          disks:\n          - disk:\n              bus: virtio\n            name: disk0\n          - cdrom:\n              bus: sata\n              readonly: true\n            name: cloudinitdisk\n        machine:\n          type: q35\n        resources:\n          requests:\n            memory: 512M\n      volumes:\n      - name: disk0\n        persistentVolumeClaim:\n          claimName: fedora\n      - cloudInitNoCloud:\n          userData: |\n            #cloud-config\n            hostname: vm1\n            ssh_pwauth: True\n            disable_root: false\n            ssh_authorized_keys:\n            - ssh-rsa &lt;公钥> \n        name: cloudinitdisk\nEOF</span>\n\nkubectl apply <span class=\"token parameter variable\">-f</span> vm1.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>直接创建vmi</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kubectl apply <span class=\"token parameter variable\">-f</span> -</span>\napiVersion: kubevirt.io/v1alpha3\nkind: VirtualMachineInstance\nmetadata:\n  name: dv-test\nspec:\n  domain:\n    devices:\n      disks:\n      - disk:\n          bus: virtio\n        name: dvdisk\n    machine:\n      type: \"\"\n    resources:\n      requests:\n        memory: 64M\n  terminationGracePeriodSeconds: 0\n  volumes:\n  - name: dvdisk\n    dataVolume:\n      name: dv-test\nstatus: &#123;&#125;\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>使用vm</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubevirt.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> VirtualMachine\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">kubevirt.io/os</span><span class=\"token punctuation\">:</span> linux\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> dv<span class=\"token punctuation\">-</span>test\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">running</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">kubevirt.io/domain</span><span class=\"token punctuation\">:</span> dv<span class=\"token punctuation\">-</span>test\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">domain</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">cores</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n        <span class=\"token key atrule\">devices</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">disks</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">disk</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">bus</span><span class=\"token punctuation\">:</span> virtio\n            <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> disk0\n        <span class=\"token key atrule\">machine</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> q35\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 512M\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> disk0\n        <span class=\"token key atrule\">dataVolume</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> dv<span class=\"token punctuation\">-</span>test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://kubevirt.io/user-guide/\">https://kubevirt.io/user-guide/</a></p>\n","tags":["k8s","虚拟化"]},{"title":"使用netbird异地组网","url":"/2024/01/12/%E4%BD%BF%E7%94%A8netbird%E5%BC%82%E5%9C%B0%E7%BB%84%E7%BD%91/","content":"<p>netbird是一个基于wireguard的异地组网程序,他可以做到所有的设备通过一个虚拟网络通讯</p>\n<span id=\"more\"></span>\n\n<p><img src=\"/../images/netbird-1.png\" alt=\"Alt text\"></p>\n<h4 id=\"自建服务端安装\"><a href=\"#自建服务端安装\" class=\"headerlink\" title=\"自建服务端安装\"></a>自建服务端安装</h4><ul>\n<li><p>防火墙需要放行tcp的80,443;UDP的3478, 49152-65535</p>\n</li>\n<li><p>执行以下脚本安装</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> netbird <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> netbird\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NETBIRD_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>域名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://github.com/netbirdio/netbird/releases/latest/download/getting-started-with-zitadel.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"设置外网IP\"><a href=\"#设置外网IP\" class=\"headerlink\" title=\"设置外网IP\"></a>设置外网IP</h5><ul>\n<li>由于云服务商的eip是基于nat的导致coturn不知道外网ip所以我们需要告诉他,如果不设置会导致移动端连接失败该问题在v0.25.4中修复相关<a href=\"https://github.com/netbirdio/netbird/pull/1439\">PR</a></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"external-ip=&lt;eip>\"</span> <span class=\"token operator\">>></span>turnserver.conf\n\n<span class=\"token function\">docker</span> compose up <span class=\"token parameter variable\">-d</span> --force-recreate coturn<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"添加客户端\"><a href=\"#添加客户端\" class=\"headerlink\" title=\"添加客户端\"></a>添加客户端</h4><ul>\n<li>在ui中点击add peer有各个系统的对应添加客户端的详细说明</li>\n</ul>\n<h4 id=\"配置路由\"><a href=\"#配置路由\" class=\"headerlink\" title=\"配置路由\"></a>配置路由</h4><ul>\n<li><p>比如家里的网络是192.168.1.0&#x2F;24 部署在家里的netbird客户端名字叫home</p>\n</li>\n<li><p>点击network router-&gt;add route–&gt;Network Range中填写192.168.1.0&#x2F;24,route peer选择home(部署在家中的)–&gt;add roure 完成添加</p>\n</li>\n<li><p>添加完成之后则可以访问家中的设备</p>\n</li>\n</ul>\n<p><img src=\"/../images/netbird-2.png\" alt=\"Alt text\"></p>\n<h4 id=\"配置DNS\"><a href=\"#配置DNS\" class=\"headerlink\" title=\"配置DNS\"></a>配置DNS</h4><ul>\n<li><p>当家里有自己的dns时则可以用家里的dns解析</p>\n</li>\n<li><p>dns–&gt; add nameserver–&gt;选择 add custom nameserver–&gt; name随便你写,Nameservers选择你的dns地址，Match domains则选择那些域名解析到这个dns，Distribution groups选择那些gruop生效</p>\n</li>\n</ul>\n<p><img src=\"/../images/netbird-3.png\" alt=\"Alt text\"></p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://docs.netbird.io/\">https://docs.netbird.io/</a><br><a href=\"https://docs.netbird.io/how-to/getting-started#running-net-bird-with-a-setup-key\">https://docs.netbird.io/how-to/getting-started#running-net-bird-with-a-setup-key</a></p>\n","tags":["网络"]},{"title":"在k8s中calico部署和使用","url":"/2023/05/10/%E5%9C%A8k8s%E4%B8%ADcalico%E9%83%A8%E7%BD%B2%E5%92%8C%E4%BD%BF%E7%94%A8/","content":"<p><a href=\"https://github.com/projectcalico/calico\">calico</a>是k8s中常见的网络插件,非常灵活,支持ipip,vxlan隧道bgp路由以及ebpf,虚机k8s均可使用</p>\n<span id=\"more\"></span>\n\n<h4 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h4><p><img src=\"/../images/calico.svg\" alt=\"calico\"></p>\n<table>\n<thead>\n<tr>\n<th>组件</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>felix</td>\n<td>状态报告，路由规划，接口管理，acl</td>\n</tr>\n<tr>\n<td>bird</td>\n<td>负责路由宣告，以及路由反射</td>\n</tr>\n<tr>\n<td>confd</td>\n<td>监控bgp变更，配置和更新bird的配置</td>\n</tr>\n<tr>\n<td>储存插件</td>\n<td>存储配置,有etcd和k8s两种选择</td>\n</tr>\n<tr>\n<td>CNI插件</td>\n<td>为pod配置网络</td>\n</tr>\n<tr>\n<td>typha</td>\n<td>为confd和felix和后端存储之间提供缓存等增加性能服务</td>\n</tr>\n<tr>\n<td>calicoctl</td>\n<td>命令行工具</td>\n</tr>\n<tr>\n<td>dikastes</td>\n<td>配合istio</td>\n</tr>\n</tbody></table>\n<h5 id=\"术语\"><a href=\"#术语\" class=\"headerlink\" title=\"术语\"></a>术语</h5><h6 id=\"ippool\"><a href=\"#ippool\" class=\"headerlink\" title=\"ippool\"></a>ippool</h6><ul>\n<li>ip池子,默认calico将会从池子中分配给podip</li>\n</ul>\n<h6 id=\"ipamblocks\"><a href=\"#ipamblocks\" class=\"headerlink\" title=\"ipamblocks\"></a>ipamblocks</h6><ul>\n<li>从ippool里分割出来的ip段，为了减少路由数量，calico宣告路由时是以块为单位在pod所在的节点进行宣告的</li>\n</ul>\n<h4 id=\"部署calico-cni\"><a href=\"#部署calico-cni\" class=\"headerlink\" title=\"部署calico cni\"></a>部署calico cni</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/calico.yaml <span class=\"token parameter variable\">-O</span>\n\nkubectl apply <span class=\"token parameter variable\">-f</span> calico.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"安装calicoctl\"><a href=\"#安装calicoctl\" class=\"headerlink\" title=\"安装calicoctl\"></a>安装calicoctl</h4><ul>\n<li>calicoctl使用calic的命令行客户端攻击可以用来查看一些信息，有三种安装方法选一种即可</li>\n</ul>\n<h5 id=\"用容器的方式运行calicoctl\"><a href=\"#用容器的方式运行calicoctl\" class=\"headerlink\" title=\"用容器的方式运行calicoctl\"></a>用容器的方式运行calicoctl</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/calicoctl.yaml <span class=\"token parameter variable\">-o</span> calicoctl.yaml\n\nkubectl apply <span class=\"token parameter variable\">-f</span> calicoctl.yaml\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">calicoctl</span><span class=\"token operator\">=</span><span class=\"token string\">\"kubectl exec -i -n kube-system calicoctl -- /calicoctl\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>使用方法:<code>calicoctl version</code></p>\n<h5 id=\"二进制文件\"><a href=\"#二进制文件\" class=\"headerlink\" title=\"二进制文件\"></a>二进制文件</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> https://github.com/projectcalico/calico/releases/latest/download/calicoctl-linux-amd64 <span class=\"token parameter variable\">-o</span> calicoctl\n\n<span class=\"token function\">chmod</span> +x calicoctl\n<span class=\"token function\">mv</span> calicoctl /usr/local/bin/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>使用方法:<code>calicoctl version</code></p>\n<h5 id=\"kubectl插件\"><a href=\"#kubectl插件\" class=\"headerlink\" title=\"kubectl插件\"></a>kubectl插件</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> https://github.com/projectcalico/calico/releases/latest/download/calicoctl-linux-amd64 <span class=\"token parameter variable\">-o</span> kubectl-calico\n<span class=\"token function\">chmod</span> +x kubectl-calico\n<span class=\"token function\">mv</span> kubectl-calico /usr/local/bin/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>使用方法: <code>kubectl calico version</code></p>\n<h5 id=\"calicoctl常用命令\"><a href=\"#calicoctl常用命令\" class=\"headerlink\" title=\"calicoctl常用命令\"></a>calicoctl常用命令</h5><ul>\n<li>查看ipam分配情况</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl ipam show\n<span class=\"token comment\"># +----------+---------------+-----------+------------+--------------+</span>\n<span class=\"token comment\"># | GROUPING |     CIDR      | IPS TOTAL | IPS IN USE |   IPS FREE   |</span>\n<span class=\"token comment\"># +----------+---------------+-----------+------------+--------------+</span>\n<span class=\"token comment\"># | IP Pool  | 10.244.0.0/16 |     65536 | 10 (0%)    | 65526 (100%) |</span>\n<span class=\"token comment\"># +----------+---------------+-----------+------------+--------------+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看blocks分配情况</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl ipam show --show-blocks\n<span class=\"token comment\">#+----------+-------------------+-----------+------------+--------------+</span>\n<span class=\"token comment\">#| GROUPING |       CIDR        | IPS TOTAL | IPS IN USE |   IPS FREE   |</span>\n<span class=\"token comment\">#+----------+-------------------+-----------+------------+--------------+</span>\n<span class=\"token comment\">#| IP Pool  | 10.244.0.0/16     |     65536 | 10 (0%)    | 65526 (100%) |</span>\n<span class=\"token comment\">#| Block    | 10.244.120.64/26  |        64 | 5 (8%)     | 59 (92%)     |</span>\n<span class=\"token comment\">#| Block    | 10.244.205.192/26 |        64 | 5 (8%)     | 59 (92%)     |</span>\n<span class=\"token comment\">#+----------+-------------------+-----------+------------+--------------+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看ippool</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl get ippool <span class=\"token parameter variable\">-o</span> wide\n<span class=\"token comment\"># NAME                  CIDR            NAT    IPIPMODE   VXLANMODE   DISABLED   DISABLEBGPEXPORT   SELECTOR   </span>\n<span class=\"token comment\"># default-ipv4-ippool   10.244.0.0/16   true   Always     Never       false      false              all() </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"IPIP模式\"><a href=\"#IPIP模式\" class=\"headerlink\" title=\"IPIP模式\"></a>IPIP模式</h4><p>calico的网络模式<code>默认</code>是IPIP模式</p>\n<ul>\n<li>通过calicoctl查看ippool的<code>IPIPMODE</code>字段，如下</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl get ippool <span class=\"token parameter variable\">-o</span> wide\n<span class=\"token comment\"># NAME                  CIDR               NAT     IPIPMODE   VXLANMODE   DISABLED   DISABLEBGPEXPORT   SELECTOR</span>\n<span class=\"token comment\"># default-ipv4-ippool   10.244.0.0/16      true    Always      Never       false      false              all()</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>启动ipipmode分为两种，一种是<code>Always</code>，还有一种<code>CrossSubnet</code><ul>\n<li>always，无论是否跨子网都通过ipip来通讯</li>\n<li>CrossSubnet，只有在跨子网时使用ipip模式</li>\n<li>Never,关闭从不使用ipip模式</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"ipip路径分析\"><a href=\"#ipip路径分析\" class=\"headerlink\" title=\"ipip路径分析\"></a>ipip路径分析</h5><ul>\n<li>部署一个nginx</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k get po <span class=\"token parameter variable\">-l</span> <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>nginx <span class=\"token parameter variable\">-o</span> wide          \n<span class=\"token comment\"># NAME                     READY   STATUS    RESTARTS   AGE     IP               NODE           NOMINATED NODE   READINESS GATES</span>\n<span class=\"token comment\"># nginx-7fc57c59f7-4nxhh   1/1     Running   0          6m30s   10.244.120.68    minikube       &lt;none>           &lt;none></span>\n<span class=\"token comment\"># nginx-7fc57c59f7-hf2g6   1/1     Running   0          6m43s   10.244.205.195   minikube-m02   &lt;none>           &lt;none></span>\n<span class=\"token comment\"># nginx-7fc57c59f7-rcdtw   1/1     Running   0          6m30s   10.244.205.196   minikube-m02   &lt;none>           &lt;none></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>进入一个nginx的pod去ping另一个容器</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> nginx-7fc57c59f7-4nxhh -- <span class=\"token function\">ping</span> <span class=\"token number\">10.244</span>.205.195<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"ipip-pod到pod所在的node\"><a href=\"#ipip-pod到pod所在的node\" class=\"headerlink\" title=\"ipip-pod到pod所在的node\"></a>ipip-pod到pod所在的node</h6><ul>\n<li>查看容器的网卡和路由信息</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> nginx-7fc57c59f7-4nxhh -- <span class=\"token function\">sh</span> <span class=\"token parameter variable\">-c</span> <span class=\"token string\">\"ip addr;ip r\"</span>\n<span class=\"token comment\"># 1: lo: &lt;LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1000</span>\n<span class=\"token comment\">#     link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span>\n<span class=\"token comment\">#     inet 127.0.0.1/8 scope host lo</span>\n<span class=\"token comment\">#        valid_lft forever preferred_lft forever</span>\n<span class=\"token comment\"># 2: tunl0@NONE: &lt;NOARP> mtu 1480 qdisc noop state DOWN qlen 1000</span>\n<span class=\"token comment\">#     link/ipip 0.0.0.0 brd 0.0.0.0</span>\n<span class=\"token comment\"># 3: ip6tnl0@NONE: &lt;NOARP> mtu 1452 qdisc noop state DOWN qlen 1000</span>\n<span class=\"token comment\">#     link/tunnel6 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00 brd 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00</span>\n<span class=\"token comment\"># 5: eth0@if10: &lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 65515 qdisc noqueue state UP </span>\n<span class=\"token comment\">#     link/ether fe:bb:51:af:03:a8 brd ff:ff:ff:ff:ff:ff</span>\n<span class=\"token comment\">#     inet 10.244.120.68/32 scope global eth0</span>\n<span class=\"token comment\">#        valid_lft forever preferred_lft forever</span>\n\n<span class=\"token comment\"># default via 169.254.1.1 dev eth0 </span>\n<span class=\"token comment\"># 169.254.1.1 dev eth0 scope link </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>从上面的信息比较难以理解的是路由的网关是169.254.1.1，169.254.0.0&#x2F;16为保留地址一般用于dhcp获取，而calico则将容器的默认路由设置为此,当容器发现目标地址不是本ip段时，会将流量发送给网关，这时需要知道网关的mac地址<br>这里calico将网关设置为169.254.1.1而没有任何一个网卡是169.254.1.1,其实是因为开了arp_proxy代答,具体使用了pod的veth的外面的网卡,这样流量就通过二层到达主机<br>官方的<a href=\"https://docs.tigera.io/calico/latest/reference/faq#why-cant-i-see-the-16925411-address-mentioned-above-on-my-host\">FAQ</a></p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> cali1143a22bb0c <span class=\"token function\">host</span> <span class=\"token number\">10.244</span>.120.68 <span class=\"token parameter variable\">-ennnvv</span>\n<span class=\"token comment\"># ...</span>\n<span class=\"token comment\"># 09:21:15.764922 fe:bb:51:af:03:a8 > ee:ee:ee:ee:ee:ee, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 169.254.1.1 tell 10.244.120.68, length 28</span>\n<span class=\"token comment\"># 09:21:15.764944 ee:ee:ee:ee:ee:ee > fe:bb:51:af:03:a8, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Reply 169.254.1.1 is-at ee:ee:ee:ee:ee:ee, length 28</span>\n<span class=\"token comment\"># ...</span>\n\n<span class=\"token function\">cat</span> /proc/sys/net/ipv4/conf/cali1143a22bb0c/proxy_arp\n<span class=\"token comment\"># 1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>veth抓包</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"> tcpdump <span class=\"token parameter variable\">-i</span> cali1143a22bb0c  <span class=\"token function\">host</span> <span class=\"token number\">10.244</span>.120.68 <span class=\"token parameter variable\">-ennnvv</span>\n<span class=\"token comment\"># tcpdump: listening on cali1143a22bb0c, link-type EN10MB (Ethernet), capture size 262144 bytes</span>\n<span class=\"token comment\"># 09:39:53.417261 fe:bb:51:af:03:a8 > ee:ee:ee:ee:ee:ee, ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 64, id 37455, offset 0, flags [DF], proto ICMP (1), length 84)</span>\n<span class=\"token comment\">#     10.244.120.68 > 10.244.205.195: ICMP echo request, id 15617, seq 12, length 64</span>\n<span class=\"token comment\"># 09:39:53.417585 ee:ee:ee:ee:ee:ee > fe:bb:51:af:03:a8, ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 62, id 24660, offset 0, flags [none], proto ICMP (1), length 84)</span>\n<span class=\"token comment\">#     10.244.205.195 > 10.244.120.68: ICMP echo reply, id 15617, seq 12, length 64</span>\n<span class=\"token comment\"># 09:39:54.417872 fe:bb:51:af:03:a8 > ee:ee:ee:ee:ee:ee, ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 64, id 38148, offset 0, flags [DF], proto ICMP (1), length 84)</span>\n<span class=\"token comment\">#     10.244.120.68 > 10.244.205.195: ICMP echo request, id 15617, seq 13, length 64</span>\n<span class=\"token comment\"># 09:39:54.418089 ee:ee:ee:ee:ee:ee > fe:bb:51:af:03:a8, ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 62, id 24786, offset 0, flags [none], proto ICMP (1), length 84)</span>\n<span class=\"token comment\">#     10.244.205.195 > 10.244.120.68: ICMP echo reply, id 15617, seq 13, length 64</span>\n<span class=\"token comment\"># ...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"ipip-pod所在的node到目标所在的node的pod\"><a href=\"#ipip-pod所在的node到目标所在的node的pod\" class=\"headerlink\" title=\"ipip-pod所在的node到目标所在的node的pod\"></a>ipip-pod所在的node到目标所在的node的pod</h6><ul>\n<li>查看minikube上的路由</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> r\n<span class=\"token comment\"># default via 192.168.49.1 dev eth0 </span>\n<span class=\"token comment\"># blackhole 10.244.120.64/26 proto bird </span>\n<span class=\"token comment\"># 10.244.120.65 dev califc4f8273134 scope link </span>\n<span class=\"token comment\"># 10.244.120.66 dev cali54e305c20b5 scope link </span>\n<span class=\"token comment\"># 10.244.120.67 dev cali00c313c8253 scope link </span>\n<span class=\"token comment\"># 10.244.120.68 dev cali1143a22bb0c scope link  # 这个就是我们进行ping的pod的路由</span>\n<span class=\"token comment\"># 10.244.205.192/26 via 192.168.49.3 dev tunl0 proto bird onlink  # 这个是minikube-m02这个节点上的路由，如果要访问minikube-m02上的pod则经过本路由</span>\n<span class=\"token comment\"># 172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1 linkdown </span>\n<span class=\"token comment\"># 192.168.49.0/24 dev eth0 proto kernel scope link src 192.168.49.2 </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>隧道抓包</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> tunl0 <span class=\"token function\">host</span> <span class=\"token number\">10.244</span>.120.68 <span class=\"token parameter variable\">-ennnvv</span>\n<span class=\"token comment\"># tcpdump: listening on tunl0, link-type RAW (Raw IP), capture size 262144 bytes</span>\n<span class=\"token comment\"># 09:40:55.459832 ip: (tos 0x0, ttl 63, id 114, offset 0, flags [DF], proto ICMP (1), length 84) 10.244.120.68 > 10.244.205.195: ICMP echo request, id 15617, seq 74, length 64</span>\n<span class=\"token comment\"># 09:40:55.460009 ip: (tos 0x0, ttl 63, id 58352, offset 0, flags [none], proto ICMP (1), length 84) 10.244.205.195 > 10.244.120.68: ICMP echo reply, id 15617, seq 74, length 64</span>\n<span class=\"token comment\"># 09:40:56.460530 ip: (tos 0x0, ttl 63, id 495, offset 0, flags [DF], proto ICMP (1), length 84) 10.244.120.68 > 10.244.205.195: ICMP echo request, id 15617, seq 75, length 64</span>\n<span class=\"token comment\"># 09:40:56.460780 ip: (tos 0x0, ttl 63, id 59235, offset 0, flags [none], proto ICMP (1), length 84) 10.244.205.195 > 10.244.120.68: ICMP echo reply, id 15617, seq 75, length 64</span>\n<span class=\"token comment\"># 09:40:57.461367 ip: (tos 0x0, ttl 63, id 979, offset 0, flags [DF], proto ICMP (1), length 84) 10.244.120.68 > 10.244.205.195: ICMP echo request, id 15617, seq 76, length 64</span>\n<span class=\"token comment\"># 09:40:57.461510 ip: (tos 0x0, ttl 63, id 59858, offset 0, flags [none], proto ICMP (1), length 84) 10.244.205.195 > 10.244.120.68: ICMP echo reply, id 15617, seq 76, length 64</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>到此pod的流量通过ipip封装发送到目标pod所在的node上,目标node将ipip包解封包，然后查找路由表发送到目标pod的veth网卡中</p>\n</li>\n<li><p>登录另一个node</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">minikube <span class=\"token function\">ssh</span> <span class=\"token parameter variable\">--node</span><span class=\"token operator\">=</span><span class=\"token string\">\"minikube-m02\"</span>\n<span class=\"token comment\"># Last login: Tue May 16 10:37:54 2023 from 192.168.49.1</span>\n<span class=\"token comment\"># docker@minikube-m02:~$ </span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">su</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>通过ip找到对应的网卡</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> r <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token number\">10.244</span>.205.195\n<span class=\"token comment\"># 10.244.205.195 dev cali614e1c7b24e scope link </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>抓包对应的网卡</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> cali614e1c7b24e \n<span class=\"token comment\"># tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span>\n<span class=\"token comment\"># listening on cali614e1c7b24e, link-type EN10MB (Ethernet), capture size 262144 bytes</span>\n<span class=\"token comment\"># 10:50:48.678597 IP 10.244.120.68 > 10.244.205.195: ICMP echo request, id 21761, seq 88, length 64</span>\n<span class=\"token comment\"># 10:50:48.678615 IP 10.244.205.195 > 10.244.120.68: ICMP echo reply, id 21761, seq 88, length 64</span>\n<span class=\"token comment\"># 10:50:49.678987 IP 10.244.120.68 > 10.244.205.195: ICMP echo request, id 21761, seq 89, length 64</span>\n<span class=\"token comment\"># 10:50:49.679010 IP 10.244.205.195 > 10.244.120.68: ICMP echo reply, id 21761, seq 89, length 64</span>\n<span class=\"token comment\"># 10:50:50.680533 IP 10.244.120.68 > 10.244.205.195: ICMP echo request, id 21761, seq 90, length 64</span>\n<span class=\"token comment\"># 10:50:50.680595 IP 10.244.205.195 > 10.244.120.68: ICMP echo reply, id 21761, seq 90, length 64</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>抓包ipip隧道网卡</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> tunl0 \n<span class=\"token comment\"># tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span>\n<span class=\"token comment\"># listening on tunl0, link-type RAW (Raw IP), capture size 262144 bytes</span>\n<span class=\"token comment\"># 10:51:06.694392 IP 10.244.120.68 > 10.244.205.195: ICMP echo request, id 21761, seq 106, length 64</span>\n<span class=\"token comment\"># 10:51:06.694504 IP 10.244.205.195 > 10.244.120.68: ICMP echo reply, id 21761, seq 106, length 64</span>\n<span class=\"token comment\"># 10:51:07.695538 IP 10.244.120.68 > 10.244.205.195: ICMP echo request, id 21761, seq 107, length 64</span>\n<span class=\"token comment\"># ...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>通过以上抓包可以确定流量的路径</li>\n</ul>\n<h6 id=\"2个pod在同一个node上\"><a href=\"#2个pod在同一个node上\" class=\"headerlink\" title=\"2个pod在同一个node上\"></a>2个pod在同一个node上</h6><ul>\n<li><p>当目标pod和源pod在同一个node上执行通过node上的路由到对应的veth网卡,不经过隧道</p>\n</li>\n<li><p>这次ping一个在相同node上的pod的ip</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get po whoami-7c88bd4c6f-7tc5b <span class=\"token parameter variable\">-o</span> wide                   \n<span class=\"token comment\"># NAME                      READY   STATUS    RESTARTS   AGE     IP              NODE       NOMINATED NODE   READINESS GATES</span>\n<span class=\"token comment\"># whoami-7c88bd4c6f-7tc5b   1/1     Running   0          3h18m   10.244.120.67   minikube   &lt;none>           &lt;none></span>\n\nkubectl <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> nginx-7fc57c59f7-4nxhh -- <span class=\"token function\">ping</span> <span class=\"token number\">10.244</span>.120.67\n<span class=\"token comment\"># PING 10.244.120.67 (10.244.120.67): 56 data bytes</span>\n<span class=\"token comment\"># PING 10.244.120.67 (10.244.120.67): 56 data bytes</span>\n<span class=\"token comment\"># 64 bytes from 10.244.120.67: seq=0 ttl=63 time=1.777 ms</span>\n<span class=\"token comment\"># 64 bytes from 10.244.120.67: seq=1 ttl=63 time=0.542 ms</span>\n<span class=\"token comment\"># 64 bytes from 10.244.120.67: seq=2 ttl=63 time=0.132 ms</span>\n<span class=\"token comment\"># ...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>直接抓包隧道发现没有流量</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">minikube <span class=\"token function\">ssh</span> \n<span class=\"token comment\"># Last login: Tue May 16 10:41:40 2023 from 192.168.49.1</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">su</span>\ntcpdump <span class=\"token parameter variable\">-i</span> tunl0\n<span class=\"token comment\"># tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span>\n<span class=\"token comment\"># listening on tunl0, link-type RAW (Raw IP), capture size 262144 bytes</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>通过路由表找到对应的网卡</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> r <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token number\">10.244</span>.120.67\n<span class=\"token number\">10.244</span>.120.67 dev cali00c313c8253 scope <span class=\"token function\">link</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>抓包目标的网卡</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> cali00c313c8253\n<span class=\"token comment\"># tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span>\n<span class=\"token comment\"># listening on cali00c313c8253, link-type EN10MB (Ethernet), capture size 262144 bytes</span>\n<span class=\"token comment\"># 10:47:39.884507 IP 10.244.120.68 > 10.244.120.67: ICMP echo request, id 19969, seq 141, length 64</span>\n<span class=\"token comment\"># 10:47:39.884649 IP 10.244.120.67 > 10.244.120.68: ICMP echo reply, id 19969, seq 141, length 64</span>\n<span class=\"token comment\"># 10:47:40.885829 IP 10.244.120.68 > 10.244.120.67: ICMP echo request, id 19969, seq 142, length 64</span>\n<span class=\"token comment\"># ...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>通过以上抓包可以发现并没有经过隧道，而是直接路由到了目标的网卡</li>\n</ul>\n<h6 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h6><p><img src=\"/../images/calico-ipip-1.png\" alt=\"calico-ipip\"></p>\n<h4 id=\"VXLAN模式\"><a href=\"#VXLAN模式\" class=\"headerlink\" title=\"VXLAN模式\"></a>VXLAN模式</h4><h5 id=\"开启vxlan模式\"><a href=\"#开启vxlan模式\" class=\"headerlink\" title=\"开启vxlan模式\"></a>开启vxlan模式</h5><ul>\n<li><p>修改ippool中<code>VXLANMODE</code>字段为<code>Always</code>,<code>IPIPMODE</code>改为<code>Never</code>,其中<code>VXLANMODE</code>中的也有<code>CrossSubnet</code>只在跨子网时使用</p>\n</li>\n<li><p>修改calico-node的环境变量</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 修改环境变量</span>\nkubectl <span class=\"token parameter variable\">-n</span> kube-system <span class=\"token builtin class-name\">set</span> <span class=\"token function\">env</span> ds/calico-node <span class=\"token parameter variable\">-c</span> calico-node <span class=\"token assign-left variable\">CALICO_IPV4POOL_IPIP</span><span class=\"token operator\">=</span>Never\nkubectl <span class=\"token parameter variable\">-n</span> kube-system <span class=\"token builtin class-name\">set</span> <span class=\"token function\">env</span> ds/calico-node <span class=\"token parameter variable\">-c</span> calico-node <span class=\"token assign-left variable\">CALICO_IPV4POOL_VXLAN</span><span class=\"token operator\">=</span>Always<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>关闭bird</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 将calico_backend修改为vxlan</span>\n<span class=\"token comment\"># calico_backend: vxlan</span>\nkubectl edit cm -nkube-system calico-config<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>关闭bird的健康检查</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> kube-system edit ds calico-node<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> /bin/calico<span class=\"token punctuation\">-</span>node\n    <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>felix<span class=\"token punctuation\">-</span>live\n   <span class=\"token comment\"># - -bird-live</span>\n<span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> /bin/calico<span class=\"token punctuation\">-</span>node\n    <span class=\"token comment\"># - -bird-ready</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>felix<span class=\"token punctuation\">-</span>ready<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"vxlan路径分析\"><a href=\"#vxlan路径分析\" class=\"headerlink\" title=\"vxlan路径分析\"></a>vxlan路径分析</h5><ul>\n<li><p>依然使用之前的nginx来做测试</p>\n</li>\n<li><p>节点路由</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> r\n<span class=\"token comment\"># default via 192.168.49.1 dev eth0 </span>\n<span class=\"token comment\"># 10.244.0.192/26 via 10.244.0.192 dev vxlan.calico onlink </span>\n<span class=\"token comment\"># blackhole 10.244.120.64/26 proto 80 </span>\n<span class=\"token comment\"># 10.244.120.65 dev califc4f8273134 scope link </span>\n<span class=\"token comment\"># 10.244.120.66 dev cali54e305c20b5 scope link </span>\n<span class=\"token comment\"># 10.244.120.68 dev cali1143a22bb0c scope link </span>\n<span class=\"token comment\"># 10.244.205.192/26 via 10.244.0.192 dev vxlan.calico onlink  之前是ipip的tunl0网卡变更为vxlan的网卡</span>\n<span class=\"token comment\"># 172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1 linkdown </span>\n<span class=\"token comment\"># 192.168.49.0/24 dev eth0 proto kernel scope link src 192.168.49.2 </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看vxlan.calico网卡信息</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> <span class=\"token parameter variable\">-s</span>  addr show vxlan.calico\n<span class=\"token comment\">#863: vxlan.calico: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 65485 qdisc noqueue state UNKNOWN group default </span>\n<span class=\"token comment\">#    link/ether 66:66:b0:7b:5c:e1 brd ff:ff:ff:ff:ff:ff</span>\n<span class=\"token comment\">#    inet 10.244.120.70/32 scope global vxlan.calico</span>\n<span class=\"token comment\">#       valid_lft forever preferred_lft forever</span>\n<span class=\"token comment\">#    RX: bytes  packets  errors  dropped overrun mcast   </span>\n<span class=\"token comment\">#    23094      267      0       0       0       0       </span>\n<span class=\"token comment\">#    TX: bytes  packets  errors  dropped carrier collsns </span>\n<span class=\"token comment\">#    22374      268      0       0       0       0       </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>搜下这个ip发现他作用为vxlan的网卡ip</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl ipam show <span class=\"token parameter variable\">--ip</span><span class=\"token operator\">=</span><span class=\"token number\">10.244</span>.120.70\n<span class=\"token comment\">#IP 10.244.120.70 is in use</span>\n<span class=\"token comment\">#Attributes:</span>\n<span class=\"token comment\">#  node: minikube</span>\n<span class=\"token comment\">#  type: vxlanTunnelAddress</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"vxlan-pod到node\"><a href=\"#vxlan-pod到node\" class=\"headerlink\" title=\"vxlan-pod到node\"></a>vxlan-pod到node</h6><ul>\n<li>从上面的网卡和路由信息可以看到calico只是修改了到其他节点pod的通讯方式，从ipip隧道改为vlxan隧道然后修改路由</li>\n<li>所以后pod到node的方式其实没有变化和<a href=\"#ipip-pod%E5%88%B0pod%E6%89%80%E5%9C%A8%E7%9A%84node\">ipip</a>模式是一样的</li>\n</ul>\n<h6 id=\"vxlan-pod到另一个node的pod\"><a href=\"#vxlan-pod到另一个node的pod\" class=\"headerlink\" title=\"vxlan-pod到另一个node的pod\"></a>vxlan-pod到另一个node的pod</h6><ul>\n<li><p>依然开始长ping</p>\n</li>\n<li><p>抓包vxlan网卡</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tcpdump <span class=\"token parameter variable\">-i</span> vxlan.calico <span class=\"token parameter variable\">-eenn</span>\n<span class=\"token comment\"># tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span>\n<span class=\"token comment\"># listening on vxlan.calico, link-type EN10MB (Ethernet), capture size 262144 bytes</span>\n<span class=\"token comment\"># 09:22:33.108257 66:66:b0:7b:5c:e1 > 66:9f:82:63:75:c1, ethertype IPv4 (0x0800), length 98: 10.244.120.68 > 10.244.205.196: ICMP echo request, id 30721, seq 33, length 64</span>\n<span class=\"token comment\"># 09:22:33.108388 66:9f:82:63:75:c1 > 66:66:b0:7b:5c:e1, ethertype IPv4 (0x0800), length 98: 10.244.205.196 > 10.244.120.68: ICMP echo reply, id 30721, seq 33, length 64</span>\n<span class=\"token comment\"># 09:22:34.109579 66:66:b0:7b:5c:e1 > 66:9f:82:63:75:c1, ethertype IPv4 (0x0800), length 98: 10.244.120.68 > 10.244.205.196: ICMP echo request, id 30721, seq 34, length 64</span>\n<span class=\"token comment\"># ...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>可以看到到vxlan网卡有我们长ping的数据包，可以确定不同node上的pod是通过vxlan来通讯</li>\n<li><code>66:66:b0:7b:5c:e1</code>为源头pod所在node的vxlan网卡mac</li>\n<li><code>66:9f:82:63:75:c1</code>为目标pod所在node的vxlan网卡mac</li>\n</ul>\n<h5 id=\"vxlan-小结\"><a href=\"#vxlan-小结\" class=\"headerlink\" title=\"vxlan-小结\"></a>vxlan-小结</h5><ul>\n<li>vxlan模式下知识变换了从一个node到另一个node的方式，从之前的ipip变为vxlan</li>\n<li>pod到node没有变化</li>\n</ul>\n<p><img src=\"/../images/calico-vxlan-1.png\" alt=\"calico-ipip\"></p>\n<h4 id=\"BGP模式-full-mesh\"><a href=\"#BGP模式-full-mesh\" class=\"headerlink\" title=\"BGP模式(full mesh)\"></a>BGP模式(full mesh)</h4><blockquote>\n<p>BGP是一个使用广泛的路由协议，分为2种一种是不同as号的ebgp已经同as号的ibgp，这里使用的是ibgp</p>\n</blockquote>\n<div class=\"note warning\"><p>注意此模式节点只能在同一个子网中进行，如果节点不在同一个子网请参考<a href=\"#IPIP/VXLAN%E8%B7%A8%E5%AD%90%E7%BD%91%E6%A8%A1%E5%BC%8F\">IPIP&#x2F;VXLAN跨子网模式</a></p>\n</div>\n\n<h5 id=\"开启BGP模式\"><a href=\"#开启BGP模式\" class=\"headerlink\" title=\"开启BGP模式\"></a>开启BGP模式</h5><blockquote>\n<p>开启bgp模式基本思路就是将<code>ipip</code>和<code>vxlan</code>模式都给关闭了</p>\n</blockquote>\n<ul>\n<li><p>修改ippool中<code>VXLANMODE</code>字段为<code>Never</code>,<code>IPIPMODE</code>改为<code>Never</code></p>\n</li>\n<li><p>修改calico-node的环境变量</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 修改环境变量</span>\nkubectl <span class=\"token parameter variable\">-n</span> kube-system <span class=\"token builtin class-name\">set</span> <span class=\"token function\">env</span> ds/calico-node <span class=\"token parameter variable\">-c</span> calico-node <span class=\"token assign-left variable\">CALICO_IPV4POOL_IPIP</span><span class=\"token operator\">=</span>Never\nkubectl <span class=\"token parameter variable\">-n</span> kube-system <span class=\"token builtin class-name\">set</span> <span class=\"token function\">env</span> ds/calico-node <span class=\"token parameter variable\">-c</span> calico-node <span class=\"token assign-left variable\">CALICO_IPV4POOL_VXLAN</span><span class=\"token operator\">=</span>Never<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>如果关闭bird需要开启bird</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 将calico_backend修改为bird</span>\n<span class=\"token comment\"># calico_backend: bird</span>\nkubectl edit cm -nkube-system calico-config<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>如果关闭了bird的健康检查则需要开启bird的健康检查</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> kube-system edit ds calico-node<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> /bin/calico<span class=\"token punctuation\">-</span>node\n    <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>felix<span class=\"token punctuation\">-</span>live\n    <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>bird<span class=\"token punctuation\">-</span>live <span class=\"token comment\"># 打开</span>\n<span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> /bin/calico<span class=\"token punctuation\">-</span>node\n    <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>felix<span class=\"token punctuation\">-</span>ready\n    <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>bird<span class=\"token punctuation\">-</span>ready <span class=\"token comment\"># 打开</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"BGP模式路径分析\"><a href=\"#BGP模式路径分析\" class=\"headerlink\" title=\"BGP模式路径分析\"></a>BGP模式路径分析</h5><ul>\n<li>查看路由,可以发现跨节点通讯使用路由</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> r \n<span class=\"token comment\"># default via 192.168.49.1 dev eth0 </span>\n<span class=\"token comment\"># 10.244.0.192/26 via 192.168.49.3 dev eth0 proto bird </span>\n<span class=\"token comment\"># blackhole 10.244.120.64/26 proto bird </span>\n<span class=\"token comment\"># 10.244.120.65 dev califc4f8273134 scope link </span>\n<span class=\"token comment\"># 10.244.120.66 dev cali54e305c20b5 scope link </span>\n<span class=\"token comment\"># 10.244.120.68 dev cali1143a22bb0c scope link </span>\n<span class=\"token comment\"># 10.244.205.192/26 via 192.168.49.3 dev eth0 proto bird # 这里已经变成了bird了</span>\n<span class=\"token comment\"># 172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1 linkdown </span>\n<span class=\"token comment\"># 192.168.49.0/24 dev eth0 proto kernel scope link src 192.168.49.2 </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看网卡,可以发现没有vxlan的网卡</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> addr\n<span class=\"token comment\"># 1: lo: &lt;LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span>\n<span class=\"token comment\">#     link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span>\n<span class=\"token comment\">#     inet 127.0.0.1/8 scope host lo</span>\n<span class=\"token comment\">#        valid_lft forever preferred_lft forever</span>\n<span class=\"token comment\"># 2: tunl0@NONE: &lt;NOARP,UP,LOWER_UP> mtu 65515 qdisc noqueue state UNKNOWN group default qlen 1000</span>\n<span class=\"token comment\">#     link/ipip 0.0.0.0 brd 0.0.0.0</span>\n<span class=\"token comment\"># 3: ip6tnl0@NONE: &lt;NOARP> mtu 1452 qdisc noop state DOWN group default qlen 1000</span>\n<span class=\"token comment\">#     link/tunnel6 :: brd ::</span>\n<span class=\"token comment\"># 4: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default </span>\n<span class=\"token comment\">#     link/ether 02:42:7a:58:36:29 brd ff:ff:ff:ff:ff:ff</span>\n<span class=\"token comment\">#     inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span>\n<span class=\"token comment\">#        valid_lft forever preferred_lft forever</span>\n<span class=\"token comment\"># 5: califc4f8273134@if5: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default </span>\n<span class=\"token comment\">#     link/ether ee:ee:ee:ee:ee:ee brd ff:ff:ff:ff:ff:ff link-netnsid 1</span>\n<span class=\"token comment\"># 6: cali54e305c20b5@if5: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default </span>\n<span class=\"token comment\">#     link/ether ee:ee:ee:ee:ee:ee brd ff:ff:ff:ff:ff:ff link-netnsid 2</span>\n<span class=\"token comment\"># 10: cali1143a22bb0c@if5: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 65515 qdisc noqueue state UP group default </span>\n<span class=\"token comment\">#     link/ether ee:ee:ee:ee:ee:ee brd ff:ff:ff:ff:ff:ff link-netnsid 4</span>\n<span class=\"token comment\"># 16: eth0@if17: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 65535 qdisc noqueue state UP group default </span>\n<span class=\"token comment\">#     link/ether 02:42:c0:a8:31:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span>\n<span class=\"token comment\">#     inet 192.168.49.2/24 brd 192.168.49.255 scope global eth0</span>\n<span class=\"token comment\">#        valid_lft forever preferred_lft forever</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>通过birdcl查看路由表</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> kube-system <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> calico-node-9pwnj <span class=\"token parameter variable\">-c</span> calico-node -- /bin/bash\n\nbirdcl\nshow route\n\n<span class=\"token comment\"># bird> show route</span>\n<span class=\"token comment\"># 0.0.0.0/0          via 192.168.49.1 on eth0 [kernel1 07:27:41] * (10)</span>\n<span class=\"token comment\"># 10.244.205.192/26  via 192.168.49.3 on eth0 [Mesh_192_168_49_3 07:27:41] * (100/0) [i]</span>\n<span class=\"token comment\"># 192.168.49.0/24    dev eth0 [direct1 07:27:40] * (240)</span>\n<span class=\"token comment\"># 10.244.120.64/26   blackhole [static1 07:27:40] * (200)</span>\n<span class=\"token comment\"># 10.244.120.65/32   dev califc4f8273134 [kernel1 07:27:41] * (10)</span>\n<span class=\"token comment\"># 10.244.120.66/32   dev cali54e305c20b5 [kernel1 07:27:41] * (10)</span>\n<span class=\"token comment\"># 10.244.120.68/32   dev cali1143a22bb0c [kernel1 07:27:41] * (10)</span>\n<span class=\"token comment\"># 10.244.0.192/26    via 192.168.49.3 on eth0 [Mesh_192_168_49_3 07:27:41] * (100/0) [i]</span>\n<span class=\"token comment\"># 172.17.0.0/16      dev docker0 [direct1 07:27:40] * (240)</span>\n<span class=\"token comment\"># bird> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>通过birdcl查bgp邻居状态</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">birdcl show protocols\n<span class=\"token comment\"># root@minikube /]# birdcl  show protocols</span>\n<span class=\"token comment\"># BIRD v0.3.3+birdv1.6.8 ready.</span>\n<span class=\"token comment\"># name     proto    table    state  since       info</span>\n<span class=\"token comment\"># static1  Static   master   up     07:27:40    </span>\n<span class=\"token comment\"># kernel1  Kernel   master   up     07:27:40    </span>\n<span class=\"token comment\"># device1  Device   master   up     07:27:40    </span>\n<span class=\"token comment\"># direct1  Direct   master   up     07:27:40    </span>\n<span class=\"token comment\"># Mesh_192_168_49_3 BGP      master   up     07:27:53    Established  bgp邻居状态</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看bgp详细信息</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">birdcl show protocols all Mesh_192_168_49_2\n<span class=\"token comment\"># root@minikube-m02 /]# birdcl show protocols all Mesh_192_168_49_2</span>\n<span class=\"token comment\"># BIRD v0.3.3+birdv1.6.8 ready.</span>\n<span class=\"token comment\"># name     proto    table    state  since       info</span>\n<span class=\"token comment\"># Mesh_192_168_49_2 BGP      master   up     07:27:53    Established   </span>\n<span class=\"token comment\">#   Description:    Connection to BGP peer</span>\n<span class=\"token comment\">#   Preference:     100</span>\n<span class=\"token comment\">#   Input filter:   ACCEPT</span>\n<span class=\"token comment\">#   Output filter:  calico_export_to_bgp_peers</span>\n<span class=\"token comment\">#   Routes:         1 imported, 2 exported, 1 preferred</span>\n<span class=\"token comment\">#   Route change stats:     received   rejected   filtered    ignored   accepted</span>\n<span class=\"token comment\">#     Import updates:              4          0          0          0          4</span>\n<span class=\"token comment\">#     Import withdraws:            3          0        ---          0          3</span>\n<span class=\"token comment\">#     Export updates:             17          4          8        ---          5</span>\n<span class=\"token comment\">#     Export withdraws:            8        ---        ---        ---          3</span>\n<span class=\"token comment\">#   BGP state:          Established</span>\n<span class=\"token comment\">#     Neighbor address: 192.168.49.2</span>\n<span class=\"token comment\">#     Neighbor AS:      64512</span>\n<span class=\"token comment\">#     Neighbor ID:      192.168.49.2</span>\n<span class=\"token comment\">#     Neighbor caps:    refresh enhanced-refresh restart-able llgr-aware AS4 add-path-rx add-path-tx</span>\n<span class=\"token comment\">#     Session:          internal multihop AS4 add-path-rx add-path-tx</span>\n<span class=\"token comment\">#     Source address:   192.168.49.3</span>\n<span class=\"token comment\">#     Hold timer:       157/240</span>\n<span class=\"token comment\">#     Keepalive timer:  67/80</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>总体而言比较简单，直接通过路由到目标pod对应的节点</li>\n</ul>\n<h5 id=\"bgp小结\"><a href=\"#bgp小结\" class=\"headerlink\" title=\"bgp小结\"></a>bgp小结</h5><ul>\n<li>每个节点之间通过bgp宣告路由</li>\n</ul>\n<p><img src=\"/../images/calico-bgp-1.png\" alt=\"calico-bgp\"></p>\n<p><img src=\"/../images/calico-bgp-2.png\" alt=\"calico-bgp\"></p>\n<h4 id=\"BGP-RR模式-Route-reflectors\"><a href=\"#BGP-RR模式-Route-reflectors\" class=\"headerlink\" title=\"BGP-RR模式(Route reflectors)\"></a>BGP-RR模式(Route reflectors)</h4><p><img src=\"/../images/calico-bgp-4.png\" alt=\"calico-bgp\"></p>\n<ul>\n<li>从节点中选取一部分节点作为bgp路由反射器以减少bgp对等体数量</li>\n</ul>\n<h5 id=\"路由反射部署方案\"><a href=\"#路由反射部署方案\" class=\"headerlink\" title=\"路由反射部署方案\"></a>路由反射部署方案</h5><blockquote>\n<p>测试环境为4个节点的minikube集群</p>\n</blockquote>\n<ul>\n<li><p>部署路由反射器有很多方法:</p>\n<ul>\n<li><ol>\n<li>在集群外的机器中部署bird</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>在k8s中选择专门的节点</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>部署专门的calico-node容器作为反射器</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>很显然直接在集群中部署专门的节点作为反射器比较方便且容易管理</p>\n</li>\n<li><p>选择2个节点作为反射器，这里我选择后2个</p>\n</li>\n</ul>\n<h5 id=\"确认现在的为bgp的mesh模式\"><a href=\"#确认现在的为bgp的mesh模式\" class=\"headerlink\" title=\"确认现在的为bgp的mesh模式\"></a>确认现在的为bgp的mesh模式</h5><div class=\"note warning\"><p>需要注意<code>calicoctl node status</code>这个需要再部署calico的节点上执行。。。。有点唐突</p>\n</div>\n\n<ul>\n<li>查看当前bgp邻居,可以发现已经与另外三个节点建立了邻居关系</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl <span class=\"token function\">node</span> status\n<span class=\"token comment\"># root@minikube:~# calicoctl node status</span>\n<span class=\"token comment\"># Calico process is running.</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># IPv4 BGP status</span>\n<span class=\"token comment\"># +--------------+-------------------+-------+----------+-------------+</span>\n<span class=\"token comment\"># | PEER ADDRESS |     PEER TYPE     | STATE |  SINCE   |    INFO     |</span>\n<span class=\"token comment\"># +--------------+-------------------+-------+----------+-------------+</span>\n<span class=\"token comment\"># | 192.168.49.3 | node-to-node mesh | up    | 18:13:08 | Established |</span>\n<span class=\"token comment\"># | 192.168.49.4 | node-to-node mesh | up    | 19:37:12 | Established |</span>\n<span class=\"token comment\"># | 192.168.49.5 | node-to-node mesh | up    | 02:27:27 | Established |</span>\n<span class=\"token comment\"># +--------------+-------------------+-------+----------+-------------+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl get nodes <span class=\"token parameter variable\">-o</span> wide \n<span class=\"token comment\"># NAME           ASN       IPV4              IPV6   </span>\n<span class=\"token comment\"># minikube       (64512)   192.168.49.2/24          </span>\n<span class=\"token comment\"># minikube-m02   (64512)   192.168.49.3/24          </span>\n<span class=\"token comment\"># minikube-m03   (64512)   192.168.49.4/24   # 作为反射器       </span>\n<span class=\"token comment\"># minikube-m04   (64512)   192.168.49.5/24   # 作为反射器</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"指定节点作为反射器\"><a href=\"#指定节点作为反射器\" class=\"headerlink\" title=\"指定节点作为反射器\"></a>指定节点作为反射器</h5><ul>\n<li>导出<code>calico/node</code>资源</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl get nodes minikube-m03 <span class=\"token parameter variable\">-o</span> yaml <span class=\"token operator\">></span> minikube-m03.yaml\ncalicoctl get nodes minikube-m04 <span class=\"token parameter variable\">-o</span> yaml <span class=\"token operator\">></span> minikube-m04.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在导出的文件中添加下面的字段</li>\n</ul>\n<blockquote>\n<p>routeReflectorClusterID应该是为了防止路由环路</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># ...</span>\n  <span class=\"token key atrule\">bgp</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">ipv4Address</span><span class=\"token punctuation\">:</span> 192.168.49.4/24\n    <span class=\"token key atrule\">routeReflectorClusterID</span><span class=\"token punctuation\">:</span> 1.0.0.1\n<span class=\"token comment\"># ...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>应用修改</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl replace <span class=\"token parameter variable\">-f</span> minikube-m03.yaml\n<span class=\"token comment\"># Successfully replaced 1 'Node' resource(s)</span>\ncalicoctl replace <span class=\"token parameter variable\">-f</span> minikube-m04.yaml\n<span class=\"token comment\"># Successfully replaced 1 'Node' resource(s)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在指定的节点打上标签</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl label <span class=\"token function\">node</span> minikube-m04 minikube-m03 route-reflector<span class=\"token operator\">=</span>true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"配置bgp对等体\"><a href=\"#配置bgp对等体\" class=\"headerlink\" title=\"配置bgp对等体\"></a>配置bgp对等体</h5><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> BGPPeer\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> crd.projectcalico.org/v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">-</span>rr\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nodeSelector</span><span class=\"token punctuation\">:</span> all()\n  <span class=\"token key atrule\">peerSelector</span><span class=\"token punctuation\">:</span> route<span class=\"token punctuation\">-</span>reflector == 'true'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>修改bgp配置，关闭mesh模式</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> projectcalico.org/v3\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> BGPConfiguration\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">logSeverityScreen</span><span class=\"token punctuation\">:</span> Info\n  <span class=\"token key atrule\">nodeToNodeMeshEnabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">asNumber</span><span class=\"token punctuation\">:</span> <span class=\"token number\">63400</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"查看节点bgp状态\"><a href=\"#查看节点bgp状态\" class=\"headerlink\" title=\"查看节点bgp状态\"></a>查看节点bgp状态</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># rr模式的节点上</span>\nroot@minikube-m03:~<span class=\"token comment\"># calicoctl node status</span>\nCalico process is running.\n\nIPv4 BGP status\n+--------------+---------------+-------+----------+-------------+\n<span class=\"token operator\">|</span> PEER ADDRESS <span class=\"token operator\">|</span>   PEER TYPE   <span class=\"token operator\">|</span> STATE <span class=\"token operator\">|</span>  SINCE   <span class=\"token operator\">|</span>    INFO     <span class=\"token operator\">|</span>\n+--------------+---------------+-------+----------+-------------+\n<span class=\"token operator\">|</span> <span class=\"token number\">192.168</span>.49.2 <span class=\"token operator\">|</span> <span class=\"token function\">node</span> specific <span class=\"token operator\">|</span> up    <span class=\"token operator\">|</span> 03:17:41 <span class=\"token operator\">|</span> Established <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">192.168</span>.49.3 <span class=\"token operator\">|</span> <span class=\"token function\">node</span> specific <span class=\"token operator\">|</span> up    <span class=\"token operator\">|</span> 03:17:41 <span class=\"token operator\">|</span> Established <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">192.168</span>.49.5 <span class=\"token operator\">|</span> <span class=\"token function\">node</span> specific <span class=\"token operator\">|</span> up    <span class=\"token operator\">|</span> 03:17:41 <span class=\"token operator\">|</span> Established <span class=\"token operator\">|</span>\n+--------------+---------------+-------+----------+-------------+\n<span class=\"token comment\"># 普通节点</span>\nroot@minikube:~<span class=\"token comment\"># calicoctl node status </span>\nCalico process is running.\n\nIPv4 BGP status\n+--------------+---------------+-------+----------+-------------+\n<span class=\"token operator\">|</span> PEER ADDRESS <span class=\"token operator\">|</span>   PEER TYPE   <span class=\"token operator\">|</span> STATE <span class=\"token operator\">|</span>  SINCE   <span class=\"token operator\">|</span>    INFO     <span class=\"token operator\">|</span>\n+--------------+---------------+-------+----------+-------------+\n<span class=\"token operator\">|</span> <span class=\"token number\">192.168</span>.49.4 <span class=\"token operator\">|</span> <span class=\"token function\">node</span> specific <span class=\"token operator\">|</span> up    <span class=\"token operator\">|</span> 03:17:41 <span class=\"token operator\">|</span> Established <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">192.168</span>.49.5 <span class=\"token operator\">|</span> <span class=\"token function\">node</span> specific <span class=\"token operator\">|</span> up    <span class=\"token operator\">|</span> 03:17:43 <span class=\"token operator\">|</span> Established <span class=\"token operator\">|</span>\n+--------------+---------------+-------+----------+-------------+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"BGP-TOR路由\"><a href=\"#BGP-TOR路由\" class=\"headerlink\" title=\"BGP-TOR路由\"></a>BGP-TOR路由</h4><p><code>Top of Rack</code>机架上面的交换机</p>\n<p><img src=\"/../images/calico-bgp-5.png\" alt=\"calico-bgp\"></p>\n<ul>\n<li>这个方案中所有的节点将bgp信息宣告给tor交换机由交换机负责bgp宣告</li>\n<li>需要硬件交换机和路由器中整体部署bgp网络，然后宣告给这个网络</li>\n</ul>\n<h4 id=\"IPIP-VXLAN跨子网模式\"><a href=\"#IPIP-VXLAN跨子网模式\" class=\"headerlink\" title=\"IPIP&#x2F;VXLAN跨子网模式\"></a>IPIP&#x2F;VXLAN跨子网模式</h4><ul>\n<li>当跨子网时使用<code>ipip/vxlan</code>来进行通讯</li>\n<li>将ippool中的<code>IPIPMODE</code>或<code>VXLANMODE</code>修改为<code>CrossSubnet</code>即可</li>\n</ul>\n<h5 id=\"环境说明\"><a href=\"#环境说明\" class=\"headerlink\" title=\"环境说明\"></a>环境说明</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get no\n<span class=\"token comment\"># [root@10-72-164-144 ~]# kubectl get no</span>\n<span class=\"token comment\"># NAME            STATUS   ROLES           AGE   VERSION</span>\n<span class=\"token comment\"># 10-72-137-177   Ready    control-plane   14d   v1.27.1</span>\n<span class=\"token comment\"># 10-72-164-144   Ready    control-plane   14d   v1.27.1</span>\n<span class=\"token comment\"># 10-72-164-145   Ready    control-plane   14d   v1.27.1</span>\n\nkubectl get po <span class=\"token parameter variable\">-o</span> wide\n<span class=\"token comment\"># [root@10-72-164-144 ~]# kubectl get po -o wide</span>\n<span class=\"token comment\"># NAME             READY   STATUS    RESTARTS   AGE   IP              NODE            NOMINATED NODE   READINESS GATES</span>\n<span class=\"token comment\"># net-test-5g2hg   1/1     Running   0          14d   10.244.90.196   10-72-164-145   &lt;none>           &lt;none></span>\n<span class=\"token comment\"># net-test-5j2kw   1/1     Running   0          14d   10.244.77.194   10-72-164-144   &lt;none>           &lt;none></span>\n<span class=\"token comment\"># net-test-dzhhs   1/1     Running   0          14d   10.244.90.132   10-72-137-177   &lt;none>           &lt;none></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>10.72.137.177</code>为一个子网，<code>10.72.164.144,10.72.164.145</code>为同一个子网</li>\n</ul>\n<h5 id=\"IPIP\"><a href=\"#IPIP\" class=\"headerlink\" title=\"IPIP\"></a>IPIP</h5><ul>\n<li>修改ipip为<code>CrossSubnet</code></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 关闭vxlan如果开启了</span>\ncalicoctl patch ippool default-ipv4-ippool  <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"spec\":&#123;\"vxlanMode\": \"Never\"&#125;&#125;'</span>\ncalicoctl patch ippool default-ipv4-ippool  <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"spec\":&#123;\"ipipMode\": \"CrossSubnet\"&#125;&#125;'</span>\n\n<span class=\"token comment\"># 确认修改</span>\ncalicoctl get ippool default-ipv4-ippool <span class=\"token parameter variable\">-o</span> wide\n<span class=\"token comment\"># [root@10-72-164-144 ~]# calicoctl get ippool default-ipv4-ippool -o wide</span>\n<span class=\"token comment\"># NAME                  CIDR            NAT    IPIPMODE      VXLANMODE   DISABLED   DISABLEBGPEXPORT   SELECTOR</span>\n<span class=\"token comment\"># default-ipv4-ippool   10.244.0.0/16   true   CrossSubnet   Never       false      false              all()</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看路由</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> r\n<span class=\"token comment\"># [root@10-72-164-144 ~]# ip r</span>\n<span class=\"token comment\"># default via 10.72.164.1 dev eth0</span>\n<span class=\"token comment\"># 10.72.164.0/24 dev eth0 proto kernel scope link src 10.72.164.144</span>\n<span class=\"token comment\"># blackhole 10.244.77.192/26 proto bird</span>\n<span class=\"token comment\"># 10.244.77.194 dev cali97faa6acd6c scope link</span>\n<span class=\"token comment\"># 10.244.77.195 dev cali8192f92cc2f scope link</span>\n<span class=\"token comment\"># 10.244.90.128/26 via 10.72.137.177 dev tunl0 proto bird onlink 跨子网使用了tunlo这个网卡</span>\n<span class=\"token comment\"># 10.244.90.192/26 via 10.72.164.145 dev eth0 proto bird</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>确认是ipip网卡</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> addr show  tunl0\n<span class=\"token comment\"># [root@10-72-164-144 ~]# ip addr show  tunl0</span>\n<span class=\"token comment\"># 9: tunl0@NONE: &lt;NOARP,UP,LOWER_UP> mtu 1480 qdisc noqueue state UNKNOWN qlen 1000</span>\n<span class=\"token comment\">#     link/ipip 0.0.0.0 brd 0.0.0.0</span>\n<span class=\"token comment\">#     inet 10.244.77.199/32 scope global tunl0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/../images/calico-ipip-2.png\" alt=\"calico-ipip\"></p>\n<ul>\n<li>通过路由可以看到ipip在CrossSubnet下同子网直接通过bgp(bird)获取的路由发送出去,跨子网则使用了ipip隧道</li>\n</ul>\n<h5 id=\"VXLAN\"><a href=\"#VXLAN\" class=\"headerlink\" title=\"VXLAN\"></a>VXLAN</h5><ul>\n<li>修改VXLANMODE为CrossSubnet</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl patch ippool default-ipv4-ippool  <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"spec\":&#123;\"ipipMode\": \"Never\"&#125;&#125;'</span>\ncalicoctl patch ippool default-ipv4-ippool  <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"spec\":&#123;\"vxlanMode\": \"CrossSubnet\"&#125;&#125;'</span>\n\n<span class=\"token comment\"># 确认下</span>\ncalicoctl get ippool default-ipv4-ippool <span class=\"token parameter variable\">-o</span> wide\n<span class=\"token comment\"># [root@10-72-164-144 ~]# calicoctl get ippool default-ipv4-ippool -o wide</span>\n<span class=\"token comment\"># NAME                  CIDR            NAT    IPIPMODE   VXLANMODE     DISABLED   DISABLEBGPEXPORT   SELECTOR</span>\n<span class=\"token comment\"># default-ipv4-ippool   10.244.0.0/16   true   Never      CrossSubnet   false      false              all()</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看路由</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> r\n<span class=\"token comment\"># [root@10-72-164-144 ~]# ip r</span>\n<span class=\"token comment\"># default via 10.72.164.1 dev eth0</span>\n<span class=\"token comment\"># 10.72.164.0/24 dev eth0 proto kernel scope link src 10.72.164.144</span>\n<span class=\"token comment\"># 10.244.0.192/26 via 10.72.164.145 dev eth0 proto 80 onlink</span>\n<span class=\"token comment\"># blackhole 10.244.77.192/26 proto 80</span>\n<span class=\"token comment\"># 10.244.77.194 dev cali97faa6acd6c scope link</span>\n<span class=\"token comment\"># 10.244.77.195 dev cali8192f92cc2f scope link</span>\n<span class=\"token comment\"># 10.244.90.128/26 via 10.244.90.135 dev vxlan.calico onlink 跨子网使用了vxlan</span>\n<span class=\"token comment\"># 10.244.90.192/26 via 10.72.164.145 dev eth0 proto 80 onlink 同子网其他节点</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看vxlan网卡</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> addr show vxlan.calico\n<span class=\"token comment\"># [root@10-72-164-144 ~]# ip addr show vxlan.calico</span>\n<span class=\"token comment\"># 43: vxlan.calico: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UNKNOWN</span>\n<span class=\"token comment\">#     link/ether 66:80:c0:e8:b1:d7 brd ff:ff:ff:ff:ff:ff</span>\n<span class=\"token comment\">#     inet 10.244.77.200/32 scope global vxlan.calico</span>\n<span class=\"token comment\">#        valid_lft forever preferred_lft forever</span>\n<span class=\"token comment\">#     inet6 fe80::6480:c0ff:fee8:b1d7/64 scope link</span>\n<span class=\"token comment\">#        valid_lft forever preferred_lft forever</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/../images/calico-vxlan-2.png\" alt=\"calico-vxlan\"></p>\n<ul>\n<li>结论通过路由可以看到vxlan在CrossSubnet下同子网直接通过eth0发送出去,跨子网则使用了vxlan</li>\n</ul>\n<h5 id=\"跨子网bgp-full-mesh模式下路由\"><a href=\"#跨子网bgp-full-mesh模式下路由\" class=\"headerlink\" title=\"跨子网bgp full mesh模式下路由\"></a>跨子网bgp full mesh模式下路由</h5><ul>\n<li>查看路由</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># [root@10-72-164-144 ~]# calicoctl get ippool default-ipv4-ippool -o wide</span>\n<span class=\"token comment\"># NAME                  CIDR            NAT    IPIPMODE   VXLANMODE   DISABLED   DISABLEBGPEXPORT   SELECTOR</span>\n<span class=\"token comment\"># default-ipv4-ippool   10.244.0.0/16   true   Never      Never       false      false              all()</span>\n\n<span class=\"token function\">ip</span> r\n<span class=\"token comment\"># [root@10-72-164-144 ~]# ip r</span>\n<span class=\"token comment\"># default via 10.72.164.1 dev eth0</span>\n<span class=\"token comment\"># 10.72.164.0/24 dev eth0 proto kernel scope link src 10.72.164.144</span>\n<span class=\"token comment\"># blackhole 10.244.77.192/26 proto bird</span>\n<span class=\"token comment\"># 10.244.77.194 dev cali97faa6acd6c scope link</span>\n<span class=\"token comment\"># 10.244.77.195 dev cali8192f92cc2f scope link</span>\n<span class=\"token comment\"># 10.244.90.128/26 via 10.72.164.1 dev eth0 proto bird</span>\n<span class=\"token comment\"># 10.244.90.192/26 via 10.72.164.145 dev eth0 proto bird</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>可以看到在跨子网时,路由指向了当前节点的网关，但我们的网关却不知道10.244.90.128&#x2F;26路由到哪里，所以10.244.90.128&#x2F;26的地址不通</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k get po <span class=\"token parameter variable\">-o</span> wide\n<span class=\"token comment\"># [root@10-72-164-144 ~]# k get po -o wide</span>\n<span class=\"token comment\"># NAME             READY   STATUS    RESTARTS   AGE   IP              NODE            NOMINATED NODE   READINESS GATES</span>\n<span class=\"token comment\"># net-test-5g2hg   1/1     Running   0          14d   10.244.90.196   10-72-164-145   &lt;none>           &lt;none></span>\n<span class=\"token comment\"># net-test-5j2kw   1/1     Running   0          14d   10.244.77.194   10-72-164-144   &lt;none>           &lt;none></span>\n<span class=\"token comment\"># net-test-dzhhs   1/1     Running   0          14d   10.244.90.132   10-72-137-177   &lt;none>           &lt;none></span>\nk <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> net-test-5g2hg -- <span class=\"token function\">ping</span> <span class=\"token number\">10.244</span>.90.132\n<span class=\"token comment\"># [root@10-72-164-144 ~]# k exec -it net-test-5g2hg -- ping 10.244.90.132</span>\n<span class=\"token comment\"># PING 10.244.90.132 (10.244.90.132): 56 data bytes</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>符合预期</li>\n</ul>\n<h5 id=\"将ipip和vxlan全部设置为CrossSubnet\"><a href=\"#将ipip和vxlan全部设置为CrossSubnet\" class=\"headerlink\" title=\"将ipip和vxlan全部设置为CrossSubnet\"></a>将ipip和vxlan全部设置为CrossSubnet</h5><ul>\n<li>不行</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@10-72-164-144 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># calicoctl patch ippool default-ipv4-ippool  -p '&#123;\"spec\":&#123;\"vxlanMode\": \"CrossSubnet\"&#125;&#125;'</span>\nSuccessfully patched <span class=\"token number\">1</span> <span class=\"token string\">'IPPool'</span> resource\n<span class=\"token punctuation\">[</span>root@10-72-164-144 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># calicoctl patch ippool default-ipv4-ippool  -p '&#123;\"spec\":&#123;\"ipipMode\": \"CrossSubnet\"&#125;&#125;'</span>\nHit error: updating existing resource: error with field IPPool.Spec.VXLANMode <span class=\"token operator\">=</span> <span class=\"token string\">'CrossSubnet'</span> <span class=\"token punctuation\">(</span>Cannot <span class=\"token builtin class-name\">enable</span> both VXLAN and IPIP on the same IPPool<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"EBPF\"><a href=\"#EBPF\" class=\"headerlink\" title=\"EBPF\"></a>EBPF</h4><blockquote>\n<p>epbf是一个内核虚拟机</p>\n</blockquote>\n<h5 id=\"EBPF部署\"><a href=\"#EBPF部署\" class=\"headerlink\" title=\"EBPF部署\"></a>EBPF部署</h5><h6 id=\"环境验证\"><a href=\"#环境验证\" class=\"headerlink\" title=\"环境验证\"></a>环境验证</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-rv</span>\n<span class=\"token comment\"># docker@minikube:~$ uname -rv</span>\n<span class=\"token comment\"># 5.15.49-linuxkit #1 SMP PREEMPT Tue Sep 13 07:51:32 UTC 2022</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>ebpf对内核版本要求比较高，内核版本最高5.0往上，红帽4.8往上也行</li>\n</ul>\n<h6 id=\"修改api-server地址\"><a href=\"#修改api-server地址\" class=\"headerlink\" title=\"修改api-server地址\"></a>修改api-server地址</h6><ul>\n<li>calico默认使用的是kube-proxy提供的api-server的svc地址需要改为api-server负载均衡的地址</li>\n<li>可以通过<code>kubelet</code>的配置文件来查看，</li>\n<li>创建配置文件</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConfigMap\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kubernetes<span class=\"token punctuation\">-</span>services<span class=\"token punctuation\">-</span>endpoint\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> kube<span class=\"token punctuation\">-</span>system\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">KUBERNETES_SERVICE_HOST</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"192.168.49.2\"</span> <span class=\"token comment\"># &lt;API server host></span>\n  <span class=\"token key atrule\">KUBERNETES_SERVICE_PORT</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"8443\"</span>         <span class=\"token comment\"># &lt;API server port></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>重启calico组件</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> kube-system rollout restart deployment calico-kube-controllers\nkubectl <span class=\"token parameter variable\">-n</span> kube-system rollout restart ds calico-node<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h6 id=\"开启ebpf\"><a href=\"#开启ebpf\" class=\"headerlink\" title=\"开启ebpf\"></a>开启ebpf</h6><ul>\n<li>配置kube-proxy</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl patch ds <span class=\"token parameter variable\">-n</span> kube-system kube-proxy <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"spec\":&#123;\"template\":&#123;\"spec\":&#123;\"nodeSelector\":&#123;\"non-calico\": \"true\"&#125;&#125;&#125;&#125;&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>开启ebpf</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl patch felixconfiguration default <span class=\"token parameter variable\">--patch</span><span class=\"token operator\">=</span><span class=\"token string\">'&#123;\"spec\": &#123;\"bpfEnabled\": true&#125;&#125;'</span>\n<span class=\"token comment\"># Successfully patched 1 'FelixConfiguration' resource</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h6 id=\"开启dsr\"><a href=\"#开启dsr\" class=\"headerlink\" title=\"开启dsr\"></a>开启dsr</h6><blockquote>\n<p>dsr可以保留客户端ip</p>\n</blockquote>\n<ul>\n<li><p>主要是修改<code>BPFExternalServiceMode</code>这个变量</p>\n</li>\n<li><p>开启dsr</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl patch felixconfiguration default <span class=\"token parameter variable\">--patch</span><span class=\"token operator\">=</span><span class=\"token string\">'&#123;\"spec\": &#123;\"bpfExternalServiceMode\": \"DSR\"&#125;&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>回滚</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">calicoctl patch felixconfiguration default <span class=\"token parameter variable\">--patch</span><span class=\"token operator\">=</span><span class=\"token string\">'&#123;\"spec\": &#123;\"bpfExternalServiceMode\": \"Tunnel\"&#125;&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"IP地址管理\"><a href=\"#IP地址管理\" class=\"headerlink\" title=\"IP地址管理\"></a>IP地址管理</h4><h5 id=\"静态ip\"><a href=\"#静态ip\" class=\"headerlink\" title=\"静态ip\"></a>静态ip</h5><ul>\n<li><p>一般来说pod不需要pod的ip是静态的，而是已通过service来访问，但是在安全等领域可能需要pod的ip是静态或者一小段范围</p>\n</li>\n<li><p>使用ipam里面的ip</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">'cni.projectcalico.org/ipAddrs'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'[\"192.168.0.1\"]'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h6 id=\"不使用ipam里面的ip\"><a href=\"#不使用ipam里面的ip\" class=\"headerlink\" title=\"不使用ipam里面的ip\"></a>不使用ipam里面的ip</h6><blockquote>\n<p>此功能需要cni开启特性才行</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> kube-system edit cm calico-config<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"any_name\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"cniVersion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"calico\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"ipam\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"calico-ipam\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"feature_control\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"ip_addrs_no_ipam\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>然后重启calico的agent</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> kube-system rollout restart ds calico-node<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>在pod上添加下面的注释</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">'cni.projectcalico.org/ipAddrsNoIpam'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'[\"10.0.0.1\"]'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>此时pod的ip则会设置为<code>10.0.0.1</code>,但是这个ip只能在你在pod所在的node上ping通过，路由等需要自己手动处理</li>\n</ul>\n<h5 id=\"Floating-IP-浮动ip\"><a href=\"#Floating-IP-浮动ip\" class=\"headerlink\" title=\"Floating IP(浮动ip)\"></a>Floating IP(浮动ip)</h5><blockquote>\n<p>Floating IP（浮动IP）是一种IP地址分配技术，它能够将一个IP地址从一台主机转移到另一台主机。 浮动IP通常用于云计算环境中，因为在这种环境下，虚拟资源（如虚拟机）可能随时在不同的物理主机之间移动。</p>\n</blockquote>\n<div class=\"note warning\"><p>只能在BGP模式下使用</p>\n</div>\n\n<ul>\n<li>也需要打开特性和上面noipam的类似方法不做赘述</li>\n</ul>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"any_name\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"cniVersion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"calico\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"ipam\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"calico-ipam\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"feature_control\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"floating_ips\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">'cni.projectcalico.org/floatingIPs'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'[\"10.0.0.1\"]'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"IP预留\"><a href=\"#IP预留\" class=\"headerlink\" title=\"IP预留\"></a>IP预留</h5><ul>\n<li>顾名思义保留的ip不会分配给pod</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> crd.projectcalico.org/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> IPReservation\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>ipreservation<span class=\"token punctuation\">-</span><span class=\"token number\">1</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">reservedCIDRs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> 192.168.2.3\n    <span class=\"token punctuation\">-</span> 10.0.2.3/32\n    <span class=\"token punctuation\">-</span> cafe<span class=\"token punctuation\">:</span>f00d<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>/123<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"优先级\"><a href=\"#优先级\" class=\"headerlink\" title=\"优先级\"></a>优先级</h5><p>pod的注释&gt;pod所在的ns的注释&gt;ippool</p>\n<h4 id=\"带宽限制\"><a href=\"#带宽限制\" class=\"headerlink\" title=\"带宽限制\"></a>带宽限制</h4><ul>\n<li>cni配置文件需要设置如下参数</li>\n</ul>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bandwidth\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"capabilities\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token property\">\"bandwidth\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在pod上配置带宽</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">kubernetes.io/ingress-bandwidth</span><span class=\"token punctuation\">:</span> 1M <span class=\"token comment\"># 进入</span>\n    <span class=\"token key atrule\">kubernetes.io/egress-bandwidth</span><span class=\"token punctuation\">:</span> 1M  <span class=\"token comment\"># 出口</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>实际是调用了<code>bandwidth</code>这个cni插件</li>\n</ul>\n<h4 id=\"指定MAC地址\"><a href=\"#指定MAC地址\" class=\"headerlink\" title=\"指定MAC地址\"></a>指定MAC地址</h4><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">\"cni.projectcalico.org/hwAddr\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1c:0c:0a:c0:ff:ee\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>重启pod生效</li>\n</ul>\n<h4 id=\"开启ipv6支持\"><a href=\"#开启ipv6支持\" class=\"headerlink\" title=\"开启ipv6支持\"></a>开启ipv6支持</h4><blockquote>\n<p>ipv6需要k8s同步开启双栈</p>\n</blockquote>\n<h5 id=\"修改cni配置文件\"><a href=\"#修改cni配置文件\" class=\"headerlink\" title=\"修改cni配置文件\"></a>修改cni配置文件</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> kube-system edit cm calico-config<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token property\">\"ipam\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"calico-ipam\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"assign_ipv4\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"assign_ipv6\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"修改DS环境变量\"><a href=\"#修改DS环境变量\" class=\"headerlink\" title=\"修改DS环境变量\"></a>修改DS环境变量</h5><table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>IP6</td>\n<td>autodetect</td>\n</tr>\n<tr>\n<td>FELIX_IPV6SUPPORT</td>\n<td>true</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 修改环境变量</span>\nkubectl <span class=\"token parameter variable\">-n</span> kube-system <span class=\"token builtin class-name\">set</span> <span class=\"token function\">env</span> ds/calico-node <span class=\"token parameter variable\">-c</span> calico-node <span class=\"token assign-left variable\">IP6</span><span class=\"token operator\">=</span>autodetect\nkubectl <span class=\"token parameter variable\">-n</span> kube-system <span class=\"token builtin class-name\">set</span> <span class=\"token function\">env</span> ds/calico-node <span class=\"token parameter variable\">-c</span> calico-node <span class=\"token assign-left variable\">FELIX_IPV6SUPPORT</span><span class=\"token operator\">=</span>true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://docs.tigera.io/calico/latest/about\">https://docs.tigera.io/calico/latest/about</a></p>\n","tags":["k8s","cni","网络"]},{"title":"将时间机器备份到smb上","url":"/2022/06/03/%E5%B0%86%E6%97%B6%E9%97%B4%E6%9C%BA%E5%99%A8%E5%A4%87%E4%BB%BD%E5%88%B0smb%E4%B8%8A/","content":"<p>macos的时间机器备份很方便</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>如果只是备份到优盘或者固态硬盘等设备上有的时候不够灵活，通过网络直接备份到smb文件服务器上</p>\n</blockquote>\n<h4 id=\"创建smb共享文件夹\"><a href=\"#创建smb共享文件夹\" class=\"headerlink\" title=\"创建smb共享文件夹\"></a>创建smb共享文件夹</h4><p>需要给读写权限</p>\n<h4 id=\"创建磁盘映像文件\"><a href=\"#创建磁盘映像文件\" class=\"headerlink\" title=\"创建磁盘映像文件\"></a>创建磁盘映像文件</h4><p>打开磁盘工具文件–&gt;创建空白映像</p>\n<p>这里注意<code>格式大小和容量</code></p>\n<p><img src=\"/../images/pasted-25.png\" alt=\"图\"></p>\n<p>将创建好的文件拷贝到共享文件夹里</p>\n<h4 id=\"挂载时间机器\"><a href=\"#挂载时间机器\" class=\"headerlink\" title=\"挂载时间机器\"></a>挂载时间机器</h4><h5 id=\"1-双击共享文件夹里的创建的磁盘挂载\"><a href=\"#1-双击共享文件夹里的创建的磁盘挂载\" class=\"headerlink\" title=\"1.双击共享文件夹里的创建的磁盘挂载\"></a>1.双击共享文件夹里的创建的磁盘挂载</h5><h5 id=\"2-命令行查看挂载路径\"><a href=\"#2-命令行查看挂载路径\" class=\"headerlink\" title=\"2.命令行查看挂载路径\"></a>2.命令行查看挂载路径</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">df</span> <span class=\"token parameter variable\">-h</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"3-设置时间机器备份磁盘\"><a href=\"#3-设置时间机器备份磁盘\" class=\"headerlink\" title=\"3.设置时间机器备份磁盘\"></a>3.设置时间机器备份磁盘</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> tmutil setdestination <span class=\"token operator\">&lt;</span>挂载路径<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"4-这个时候打开时间机器就可以看到我们创建的磁盘了\"><a href=\"#4-这个时候打开时间机器就可以看到我们创建的磁盘了\" class=\"headerlink\" title=\"4.这个时候打开时间机器就可以看到我们创建的磁盘了\"></a>4.这个时候打开时间机器就可以看到我们创建的磁盘了</h5>","tags":["备份"]},{"title":"在k8s集群中部署tidb","url":"/2023/11/09/%E5%9C%A8k8s%E9%9B%86%E7%BE%A4%E4%B8%AD%E9%83%A8%E7%BD%B2tidb/","content":"<p><a href=\"https://github.com/pingcap/tidb\">tidb</a>是<a href=\"https://www.pingcap.com/\">pingcap</a>开发的开源数据库</p>\n<span id=\"more\"></span>\n\n<p>其底层使用rust上层使用go开发，兼容mysql协议</p>\n<p><img src=\"/../images/tidb-1.png\" alt=\"Alt text\"></p>\n<h4 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h4><ul>\n<li>部署crd</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl create <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/pingcap/tidb-operator/master/manifests/crd.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>部署operator</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm repo <span class=\"token function\">add</span> pingcap https://charts.pingcap.org/\n\nkubectl create namespace tidb-admin\n\nhelm <span class=\"token function\">install</span> <span class=\"token parameter variable\">--namespace</span> tidb-admin tidb-operator pingcap/tidb-operator <span class=\"token parameter variable\">--version</span> v1.5.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>部署一个官方示例的集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl create namespace tidb-cluster <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n    kubectl <span class=\"token parameter variable\">-n</span> tidb-cluster apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/pingcap/tidb-operator/master/examples/basic/tidb-cluster.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k get tc\n<span class=\"token comment\"># NAME    READY   PD                  STORAGE   READY   DESIRE   TIKV                  STORAGE   READY   DESIRE   TIDB                  READY   DESIRE   AGE</span>\n<span class=\"token comment\"># basic   True    pingcap/pd:v7.1.1   1Gi       1       1        pingcap/tikv:v7.1.1   1Gi       1       1        pingcap/tidb:v7.1.1   1       1        45m</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>部署dashboard</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> tidb-cluster apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/pingcap/tidb-operator/master/examples/basic/tidb-dashboard.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>部署监控</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> tidb-cluster apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/pingcap/tidb-operator/master/examples/basic/tidb-monitor.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"连接数据库\"><a href=\"#连接数据库\" class=\"headerlink\" title=\"连接数据库\"></a>连接数据库</h4><ul>\n<li>转发svc到本地，使用使用直接写对应的svc的地址和端口就好</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl port-forward <span class=\"token parameter variable\">-n</span> tidb-cluster svc/basic-tidb <span class=\"token number\">14000</span>:4000 <span class=\"token operator\">></span> pf14000.out <span class=\"token operator\">&amp;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>mysql连接</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mysql <span class=\"token parameter variable\">--comments</span> <span class=\"token parameter variable\">-h</span> <span class=\"token number\">127.0</span>.0.1 <span class=\"token parameter variable\">-P</span> <span class=\"token number\">14000</span> <span class=\"token parameter variable\">-u</span> root\n<span class=\"token comment\"># Welcome to the MariaDB monitor.  Commands end with ; or \\g.</span>\n<span class=\"token comment\"># Your MySQL connection id is 677</span>\n<span class=\"token comment\"># Server version: 5.7.25-TiDB-v7.1.1 TiDB Server (Apache License 2.0) Community Edition, MySQL 5.7 compatible</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># MySQL [(none)]></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>创建一个表</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">use</span> test<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> hello_world <span class=\"token punctuation\">(</span>id <span class=\"token keyword\">int</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">auto_increment</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span> v <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查询版本号</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> tidb_version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\G<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查询存储状态</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span>tikv_store_status\\G<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查询集群状态</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span>cluster_info\\G<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看监控的grafana，转发下grafana的svc然后打开浏览默认密码admin&#x2F;admin,也可以将svc改成nodeport模式</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 转发</span>\nkubectl port-forward <span class=\"token parameter variable\">-n</span> tidb-cluster svc/basic-grafana <span class=\"token number\">3000</span> <span class=\"token operator\">></span> pf12333.out <span class=\"token operator\">&amp;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>tidb的ui,默认没密码</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl port-forward <span class=\"token parameter variable\">-n</span> tidb-cluster svc/basic-tidb-dashboard-exposed <span class=\"token number\">12333</span> <span class=\"token operator\">></span> pf12333.out <span class=\"token operator\">&amp;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"升级集群\"><a href=\"#升级集群\" class=\"headerlink\" title=\"升级集群\"></a>升级集群</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl patch tc basic <span class=\"token parameter variable\">-n</span> tidb-cluster <span class=\"token parameter variable\">--type</span> merge <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"spec\": &#123;\"version\": \"&lt;版本号>\"&#125; &#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"扩缩容\"><a href=\"#扩缩容\" class=\"headerlink\" title=\"扩缩容\"></a>扩缩容</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl patch <span class=\"token parameter variable\">-n</span> <span class=\"token variable\">$&#123;namespace&#125;</span> tc <span class=\"token variable\">$&#123;cluster_name&#125;</span> <span class=\"token parameter variable\">--type</span> merge <span class=\"token parameter variable\">--patch</span> <span class=\"token string\">'&#123;\"spec\":&#123;\"pd\":&#123;\"replicas\":&lt;副本数>&#125;&#125;&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://docs.pingcap.com/zh/tidb-in-kubernetes/dev/get-started\">https://docs.pingcap.com/zh/tidb-in-kubernetes/dev/get-started</a></p>\n","tags":["k8s","tikv","数据库"]},{"title":"本地大模型运行平台-ollama","url":"/2024/06/14/%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B%E8%BF%90%E8%A1%8C%E5%B9%B3%E5%8F%B0-ollama/","content":"<p>ollama是一个用go写的本地大模型运行框架,支持多种大大模型，支持多平台</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li>docker</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> pull ollama/ollama<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>脚本安装</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://ollama.com/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">sh</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h4><ul>\n<li>这就像docker一样,运行一个llama3大模型，启动完成之后会弹出一个对话框，就可以像chartGPT那样对话了</li>\n<li><code>ollama run</code>类似<code>docker run</code>如果本地没有模型则下载模型并运行</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ollama run llama3\n<span class=\"token comment\"># pulling manifest</span>\n<span class=\"token comment\"># pulling 6a0746a1ec1a... 100% ▕██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏ 4.7 GB</span>\n<span class=\"token comment\"># pulling 4fa551d4f938... 100% ▕██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏  12 KB</span>\n<span class=\"token comment\"># pulling 8ab4849b038c... 100% ▕██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏  254 B</span>\n<span class=\"token comment\"># pulling 577073ffcc6c... 100% ▕██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏  110 B</span>\n<span class=\"token comment\"># pulling 3f8eb4da87fa... 100% ▕██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏  485 B</span>\n<span class=\"token comment\"># verifying sha256 digest</span>\n<span class=\"token comment\"># writing manifest</span>\n<span class=\"token comment\"># removing any unused layers</span>\n<span class=\"token comment\"># success</span>\n<span class=\"token comment\"># >>> Send a message (/? for help)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>除了可以使用对话框以外还可以使命令行</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ollama run llama3:latest <span class=\"token string\">\"地球为什么是圆的\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>下载模型</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ollama pull <span class=\"token operator\">&lt;</span>模型<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>查看模型</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ollama list\n<span class=\"token comment\"># NAME            ID              SIZE    MODIFIED</span>\n<span class=\"token comment\"># llama3:latest   365c0bd3c000    4.7 GB  10 minutes ago</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看正在运行的模型</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ollama <span class=\"token function\">ps</span>\n<span class=\"token comment\"># NAME            ID              SIZE    PROCESSOR       UNTIL</span>\n<span class=\"token comment\"># llama3:latest   365c0bd3c000    4.9 GB  100% CPU        About a minute from now</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>删除模型</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ollama <span class=\"token function\">rm</span> <span class=\"token operator\">&lt;</span>模型<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><a href=\"https://ollama.com/library\">https://ollama.com/library</a>可以查看ollama的模型仓库，这个和<code>docker hub</code>类似</li>\n</ul>\n<h4 id=\"modelfile\"><a href=\"#modelfile\" class=\"headerlink\" title=\"modelfile\"></a>modelfile</h4><blockquote>\n<p>modelfile类似dockerfile可以在基础模型之上添加一些修改</p>\n</blockquote>\n<ul>\n<li><p>添加参数</p>\n</li>\n<li><p>编写modelfile，modelfile相关<a href=\"https://github.com/ollama/ollama/blob/main/docs/modelfile.md\">文档</a></p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">FROM qwen2:7b\n\nPARAMETER temperature <span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 设置系统提示词</span>\nSYSTEM <span class=\"token string\">\"\"</span>\"\n我是玉皇大帝\n<span class=\"token string\">\"\"</span>\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>创建新的model</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ollama create test2 <span class=\"token parameter variable\">-f</span> ./Modelfile\n<span class=\"token comment\"># transferring model data</span>\n<span class=\"token comment\"># using existing layer sha256:43f7a214e5329f672bb05404cfba1913cbb70fdaa1a17497224e1925046b0ed5</span>\n<span class=\"token comment\"># using existing layer sha256:62fbfd9ed093d6e5ac83190c86eec5369317919f4b149598d2dbb38900e9faef</span>\n<span class=\"token comment\"># using existing layer sha256:c156170b718ec29139d3653d40ed1986fd92fb7e0959b5c71f3c48f62e6636f4</span>\n<span class=\"token comment\"># creating new layer sha256:51b98d7e95aee52247df320b4c76c526d614ce6df6ed4bd20e27d49f06ff4695</span>\n<span class=\"token comment\"># using existing layer sha256:b1c932e03beb32c4ab61bb50b2fa06ab1f2ea4e99ee6495670bbe23834dc7d62</span>\n<span class=\"token comment\"># creating new layer sha256:6e63a33de34e7673b5e8e9ea0ef5e00020ca427e5a3e017009028a45ef2c2ccd</span>\n<span class=\"token comment\"># writing manifest</span>\n<span class=\"token comment\"># success</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>使用新创建的model</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ollama run test2\n<span class=\"token comment\"># >>> 我是谁</span>\n<span class=\"token comment\"># 您提及的身份是“我”，在哲学和心理学中，这通常指的是个体意识中的主体性。在不同的语境或情境下，“我”可以指代具体的人、事物或者抽象的概念。如果您是在询问您的个人身份，比如名字、角色等信息，请提供更多的上下文或背景，以便我能更准确地回答您的</span>\n<span class=\"token comment\"># 问题。</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 若您是指“玉皇大帝”，那么在古代中国的神话体系中，玉皇大帝是宇宙间最高的神祇，掌管着一切的最高主宰。他是天界之王，代表了至高的权威和智慧。如果您自称为“玉皇大帝”，则是在扮演或想象自己为这一神祇的角色。</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># 无论您是在探讨哲学问题还是讨论神话角色，您的身份都是独一无二且具有特定内涵的存在。</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># >>></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"图形化界面\"><a href=\"#图形化界面\" class=\"headerlink\" title=\"图形化界面\"></a>图形化界面</h4><blockquote>\n<p>上面这是命令行的对话，部署一个界面则可以像chartGPT一样</p>\n</blockquote>\n<ul>\n<li>使用open-webui,一件安装open-webui和ollama</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">3000</span>:8080 <span class=\"token parameter variable\">--gpus</span><span class=\"token operator\">=</span>all <span class=\"token parameter variable\">-v</span> ./ollama:/root/.ollama <span class=\"token parameter variable\">-v</span> ./open-webui:/app/backend/data <span class=\"token parameter variable\">--name</span> open-webui <span class=\"token parameter variable\">--restart</span> always ghcr.io/open-webui/open-webui:ollama<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>访问<code>你的ip</code>:3000,注册个账号，第一个是管理员</li>\n</ul>\n<p><img src=\"/../images/%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B%E8%BF%90%E8%A1%8C%E5%B9%B3%E5%8F%B0-ollama-1.png\" alt=\"alt text\"></p>\n<ul>\n<li>设置模型</li>\n</ul>\n<p><img src=\"/../images/%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B%E8%BF%90%E8%A1%8C%E5%B9%B3%E5%8F%B0-ollama-2.png\" alt=\"alt text\"></p>\n<p><img src=\"/../images/%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B%E8%BF%90%E8%A1%8C%E5%B9%B3%E5%8F%B0-ollama-3.png\" alt=\"alt text\"></p>\n<h5 id=\"自定义文档\"><a href=\"#自定义文档\" class=\"headerlink\" title=\"自定义文档\"></a>自定义文档</h5><ul>\n<li>部署的时候dokcer映射了一个open-webui目录，将文档放在此目录下的docs目录</li>\n</ul>\n<p><img src=\"/../images/%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B%E8%BF%90%E8%A1%8C%E5%B9%B3%E5%8F%B0-ollama-3.png\" alt=\"alt text\"></p>\n<ul>\n<li>在设置中设置</li>\n</ul>\n<p><img src=\"/../images/%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B%E8%BF%90%E8%A1%8C%E5%B9%B3%E5%8F%B0-ollama-4.png\" alt=\"alt text\"></p>\n<ul>\n<li>聊天框中通过<code>#</code>来选择文档(<code>@</code>可以选择模型)</li>\n</ul>\n<p><img src=\"/../images/%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B%E8%BF%90%E8%A1%8C%E5%B9%B3%E5%8F%B0-ollama-5.png\" alt=\"alt text\"></p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://github.com/ollama/ollama\">https://github.com/ollama/ollama</a><br><a href=\"https://docs.openwebui.com/\">https://docs.openwebui.com/</a><br><a href=\"https://github.com/ollama/ollama/blob/main/docs/modelfile.md\">https://github.com/ollama/ollama/blob/main/docs/modelfile.md</a></p>\n","tags":["ai"]},{"title":"测试工具","url":"/2022/10/11/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/","content":"<p>整理一些linux上常用测试工具</p>\n<span id=\"more\"></span>\n\n<h2 id=\"硬盘测试\"><a href=\"#硬盘测试\" class=\"headerlink\" title=\"硬盘测试\"></a>硬盘测试</h2><h3 id=\"fio\"><a href=\"#fio\" class=\"headerlink\" title=\"fio\"></a>fio</h3><h4 id=\"fio安装\"><a href=\"#fio安装\" class=\"headerlink\" title=\"fio安装\"></a>fio安装</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> fio<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"fio参数说明\"><a href=\"#fio参数说明\" class=\"headerlink\" title=\"fio参数说明\"></a>fio参数说明</h4><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>direct&#x3D;1</td>\n<td>忽略缓存，直接写入磁盘</td>\n</tr>\n<tr>\n<td>iodepth&#x3D;128</td>\n<td>请求的IO队列深度</td>\n</tr>\n<tr>\n<td>rw&#x3D;write</td>\n<td>读写策略，可选值randread(随机读)，randwrite(随机写)，read(顺序读)，write(顺序写)，randrw(混合随机读写)</td>\n</tr>\n<tr>\n<td>ioengine&#x3D;libaio</td>\n<td>IO引擎配置，建议使用libaio</td>\n</tr>\n<tr>\n<td>bs&#x3D;4k</td>\n<td>块大小配置，可以使用4k，8k，16k等</td>\n</tr>\n<tr>\n<td>size&#x3D;200G</td>\n<td>测试生成文件的大小</td>\n</tr>\n<tr>\n<td>numjobs&#x3D;1</td>\n<td>线程数配置</td>\n</tr>\n<tr>\n<td>runtime&#x3D;1000</td>\n<td>测试运行时长，单位秒</td>\n</tr>\n<tr>\n<td>group_reporting</td>\n<td>测试结果汇总展示</td>\n</tr>\n<tr>\n<td>name&#x3D;test</td>\n<td>测试任务名称</td>\n</tr>\n<tr>\n<td>filename&#x3D;&#x2F;data&#x2F;test</td>\n<td>测试输出的路径与文件名</td>\n</tr>\n</tbody></table>\n<h4 id=\"测试使用\"><a href=\"#测试使用\" class=\"headerlink\" title=\"测试使用\"></a>测试使用</h4><ul>\n<li>读时延</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">fio <span class=\"token parameter variable\">-direct</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-iodepth</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-rw</span><span class=\"token operator\">=</span>read <span class=\"token parameter variable\">-ioengine</span><span class=\"token operator\">=</span>libaio <span class=\"token parameter variable\">-bs</span><span class=\"token operator\">=</span>4k <span class=\"token parameter variable\">-size</span><span class=\"token operator\">=</span>200G <span class=\"token parameter variable\">-numjobs</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-runtime</span><span class=\"token operator\">=</span><span class=\"token number\">1000</span> <span class=\"token parameter variable\">-group_reporting</span> <span class=\"token parameter variable\">-name</span><span class=\"token operator\">=</span>test <span class=\"token parameter variable\">-filename</span><span class=\"token operator\">=</span>/data/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>写时延</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">fio <span class=\"token parameter variable\">-direct</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-iodepth</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-rw</span><span class=\"token operator\">=</span>write <span class=\"token parameter variable\">-ioengine</span><span class=\"token operator\">=</span>libaio <span class=\"token parameter variable\">-bs</span><span class=\"token operator\">=</span>4k <span class=\"token parameter variable\">-size</span><span class=\"token operator\">=</span>200G <span class=\"token parameter variable\">-numjobs</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-runtime</span><span class=\"token operator\">=</span><span class=\"token number\">1000</span> <span class=\"token parameter variable\">-group_reporting</span> <span class=\"token parameter variable\">-name</span><span class=\"token operator\">=</span>test <span class=\"token parameter variable\">-filename</span><span class=\"token operator\">=</span>/data/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>读带宽</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">fio <span class=\"token parameter variable\">-direct</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-iodepth</span><span class=\"token operator\">=</span><span class=\"token number\">32</span> <span class=\"token parameter variable\">-rw</span><span class=\"token operator\">=</span>read <span class=\"token parameter variable\">-ioengine</span><span class=\"token operator\">=</span>libaio <span class=\"token parameter variable\">-bs</span><span class=\"token operator\">=</span>256k <span class=\"token parameter variable\">-size</span><span class=\"token operator\">=</span>200G <span class=\"token parameter variable\">-numjobs</span><span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token parameter variable\">-runtime</span><span class=\"token operator\">=</span><span class=\"token number\">1000</span> <span class=\"token parameter variable\">-group_reporting</span> <span class=\"token parameter variable\">-name</span><span class=\"token operator\">=</span>test <span class=\"token parameter variable\">-filename</span><span class=\"token operator\">=</span>/data/test  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>写带宽</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">fio <span class=\"token parameter variable\">-direct</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-iodepth</span><span class=\"token operator\">=</span><span class=\"token number\">32</span> <span class=\"token parameter variable\">-rw</span><span class=\"token operator\">=</span>write <span class=\"token parameter variable\">-ioengine</span><span class=\"token operator\">=</span>libaio <span class=\"token parameter variable\">-bs</span><span class=\"token operator\">=</span>256k <span class=\"token parameter variable\">-size</span><span class=\"token operator\">=</span>200G <span class=\"token parameter variable\">-numjobs</span><span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token parameter variable\">-runtime</span><span class=\"token operator\">=</span><span class=\"token number\">1000</span> <span class=\"token parameter variable\">-group_reporting</span> <span class=\"token parameter variable\">-name</span><span class=\"token operator\">=</span>test <span class=\"token parameter variable\">-filename</span><span class=\"token operator\">=</span>/data/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>读IOPS</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">fio <span class=\"token parameter variable\">-direct</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-iodepth</span><span class=\"token operator\">=</span><span class=\"token number\">32</span> <span class=\"token parameter variable\">-rw</span><span class=\"token operator\">=</span>randread  <span class=\"token parameter variable\">-ioengine</span><span class=\"token operator\">=</span>libaio <span class=\"token parameter variable\">-bs</span><span class=\"token operator\">=</span>4k <span class=\"token parameter variable\">-size</span><span class=\"token operator\">=</span>200G <span class=\"token parameter variable\">-numjobs</span><span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token parameter variable\">-runtime</span><span class=\"token operator\">=</span><span class=\"token number\">1000</span> <span class=\"token parameter variable\">-group_reporting</span> <span class=\"token parameter variable\">-name</span><span class=\"token operator\">=</span>test <span class=\"token parameter variable\">-filename</span><span class=\"token operator\">=</span>/data/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>写IOPS</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">fio <span class=\"token parameter variable\">-direct</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-iodepth</span><span class=\"token operator\">=</span><span class=\"token number\">32</span> <span class=\"token parameter variable\">-rw</span><span class=\"token operator\">=</span>randwrite <span class=\"token parameter variable\">-ioengine</span><span class=\"token operator\">=</span>libaio <span class=\"token parameter variable\">-bs</span><span class=\"token operator\">=</span>4k <span class=\"token parameter variable\">-size</span><span class=\"token operator\">=</span>200G <span class=\"token parameter variable\">-numjobs</span><span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token parameter variable\">-runtime</span><span class=\"token operator\">=</span><span class=\"token number\">1000</span> <span class=\"token parameter variable\">-group_reporting</span> <span class=\"token parameter variable\">-name</span><span class=\"token operator\">=</span>test <span class=\"token parameter variable\">-filename</span><span class=\"token operator\">=</span>/data/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h2><h3 id=\"iperf3\"><a href=\"#iperf3\" class=\"headerlink\" title=\"iperf3\"></a>iperf3</h3><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> iperf3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>下载地址:<a href=\"https://iperf.fr/iperf-download.php\">https://iperf.fr/iperf-download.php</a></p>\n<h4 id=\"iperf3参数说明\"><a href=\"#iperf3参数说明\" class=\"headerlink\" title=\"iperf3参数说明\"></a>iperf3参数说明</h4><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-c</td>\n<td>客户端模式</td>\n</tr>\n<tr>\n<td>-s</td>\n<td>服务端模式</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>指定端口号</td>\n</tr>\n<tr>\n<td>-d</td>\n<td>打印调试信息</td>\n</tr>\n<tr>\n<td>-P</td>\n<td>多线程</td>\n</tr>\n<tr>\n<td>-u</td>\n<td>使用udb</td>\n</tr>\n<tr>\n<td>-t</td>\n<td>测试时间</td>\n</tr>\n<tr>\n<td>-b</td>\n<td>带宽</td>\n</tr>\n<tr>\n<td>-R</td>\n<td>双向测试</td>\n</tr>\n</tbody></table>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><ul>\n<li>基本使用</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 服务端</span>\niperf3 <span class=\"token parameter variable\">-s</span>\n<span class=\"token comment\"># 客户端</span>\niperf3 <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10.23</span>.219.49<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在tcp在100m带宽3个线程下双向测试10秒</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iperf3 <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10.23</span>.219.49 <span class=\"token parameter variable\">-i</span> <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-P</span> <span class=\"token number\">3</span> <span class=\"token parameter variable\">-R</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">10</span> <span class=\"token parameter variable\">-b</span> 100M<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>tcp测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iperf3 <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10.23</span>.219.49 <span class=\"token parameter variable\">-R</span> <span class=\"token parameter variable\">-P</span> <span class=\"token number\">10</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>udp测试</li>\n</ul>\n<p>侧重于看丢包</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iperf3 <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10.23</span>.219.49 <span class=\"token parameter variable\">-u</span> <span class=\"token parameter variable\">-b</span> 10M<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"ethr\"><a href=\"#ethr\" class=\"headerlink\" title=\"ethr\"></a>ethr</h3><p>微软出的一个综合网络测试工具<a href=\"https://github.com/Microsoft/Ethr\">https://github.com/Microsoft/Ethr</a></p>\n<h4 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h4><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-m</td>\n<td>x 表示Ethr作为外部客户端模式与共它服务端对接</td>\n</tr>\n<tr>\n<td>-c</td>\n<td>表示作为客户端模式连接服务端与iperf类似</td>\n</tr>\n<tr>\n<td>-t</td>\n<td>表示测试类型 如TCP新建:c、TCP带宽:b、TCP延迟:l</td>\n</tr>\n<tr>\n<td>-n</td>\n<td>表示并发会话&#x2F;线程数据0表示采用当前CPU数量</td>\n</tr>\n<tr>\n<td>-d</td>\n<td>表示测试时长默认10s、0表示不限时长测试</td>\n</tr>\n</tbody></table>\n<h4 id=\"erhr使用\"><a href=\"#erhr使用\" class=\"headerlink\" title=\"erhr使用\"></a>erhr使用</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 服务端</span>\nethr <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-ui</span> <span class=\"token parameter variable\">-port</span> <span class=\"token number\">9999</span>\n<span class=\"token comment\"># 客户端</span>\n\nethr <span class=\"token parameter variable\">-c</span> <span class=\"token number\">192.168</span>.1.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>-ui 开启一个文本界面</p>\n<ul>\n<li>tcp带宽测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ethr <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10.23</span>.219.49 <span class=\"token parameter variable\">-t</span> b <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-n</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-d</span> <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>tcp新建测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ethr <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10.23</span>.219.49 <span class=\"token parameter variable\">-t</span> c <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-n</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-d</span> <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>tcp 延迟测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ethr <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10.23</span>.219.49 <span class=\"token parameter variable\">-t</span> l <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-n</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-d</span> <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>udp pps测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ethr <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10.23</span>.219.49 <span class=\"token parameter variable\">-t</span> p <span class=\"token parameter variable\">-p</span> udp <span class=\"token parameter variable\">-n</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-d</span> <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"web服务测试\"><a href=\"#web服务测试\" class=\"headerlink\" title=\"web服务测试\"></a>web服务测试</h2><h3 id=\"ab-apachebench\"><a href=\"#ab-apachebench\" class=\"headerlink\" title=\"ab(apachebench)\"></a>ab(apachebench)</h3><p>ab是apachebench的缩写最开始用来测试apache httpd的也可以用来测试其他web服务器</p>\n<h4 id=\"ab安装\"><a href=\"#ab安装\" class=\"headerlink\" title=\"ab安装\"></a>ab安装</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> httpd-tools<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ab <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10</span> http://www.baidu.com/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p>-c 次数</p>\n</li>\n<li><p>-n 并发数</p>\n</li>\n</ul>\n<h2 id=\"综合测试\"><a href=\"#综合测试\" class=\"headerlink\" title=\"综合测试\"></a>综合测试</h2><h3 id=\"sysbench\"><a href=\"#sysbench\" class=\"headerlink\" title=\"sysbench\"></a>sysbench</h3><p>sysbench是个综合测试工具包括cpu硬盘数据等</p>\n<h3 id=\"安装sysbench\"><a href=\"#安装sysbench\" class=\"headerlink\" title=\"安装sysbench\"></a>安装sysbench</h3><pre class=\"line-numbers language-yum\" data-language=\"yum\"><code class=\"language-yum\">yum install -y sysbench<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"使用sysbench\"><a href=\"#使用sysbench\" class=\"headerlink\" title=\"使用sysbench\"></a>使用sysbench</h4><ul>\n<li>测试cpu</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sysbench <span class=\"token parameter variable\">--test</span><span class=\"token operator\">=</span>cpu --cpu-max-prime<span class=\"token operator\">=</span><span class=\"token number\">20000</span> run<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>测试内存</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sysbench <span class=\"token parameter variable\">--test</span><span class=\"token operator\">=</span>memory run<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>测试io</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sysbench <span class=\"token parameter variable\">--test</span><span class=\"token operator\">=</span>fileio --file-test-mode<span class=\"token operator\">=</span>seqwr run<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>测试mysql</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 准备数据</span>\nsysbench /usr/share/sysbench/oltp_read_only.lua --mysql-host<span class=\"token operator\">=</span>localhost --mysql-port<span class=\"token operator\">=</span><span class=\"token number\">3306</span> --mysql-user<span class=\"token operator\">=</span>root --mysql-db<span class=\"token operator\">=</span>test --db-driver<span class=\"token operator\">=</span>mysql <span class=\"token parameter variable\">--tables</span><span class=\"token operator\">=</span><span class=\"token number\">10</span> --table-size<span class=\"token operator\">=</span><span class=\"token number\">1000</span> <span class=\"token parameter variable\">--time</span><span class=\"token operator\">=</span><span class=\"token number\">10</span> prepare\n\n<span class=\"token comment\"># 执行测试</span>\nsysbench /usr/share/sysbench/oltp_read_only.lua --mysql-host<span class=\"token operator\">=</span>localhost --mysql-port<span class=\"token operator\">=</span><span class=\"token number\">3306</span> --mysql-user<span class=\"token operator\">=</span>root --mysql-db<span class=\"token operator\">=</span>test --db-driver<span class=\"token operator\">=</span>mysql <span class=\"token parameter variable\">--tables</span><span class=\"token operator\">=</span><span class=\"token number\">10</span> --table-size<span class=\"token operator\">=</span><span class=\"token number\">1000</span> <span class=\"token parameter variable\">--time</span><span class=\"token operator\">=</span><span class=\"token number\">10</span> run\n\n<span class=\"token comment\"># 清理</span>\nsysbench /usr/share/sysbench/oltp_read_only.lua --mysql-host<span class=\"token operator\">=</span>localhost --mysql-port<span class=\"token operator\">=</span><span class=\"token number\">3306</span> --mysql-user<span class=\"token operator\">=</span>root --mysql-db<span class=\"token operator\">=</span>test --db-driver<span class=\"token operator\">=</span>mysql <span class=\"token parameter variable\">--tables</span><span class=\"token operator\">=</span><span class=\"token number\">10</span> --table-size<span class=\"token operator\">=</span><span class=\"token number\">1000</span> <span class=\"token parameter variable\">--time</span><span class=\"token operator\">=</span><span class=\"token number\">10</span> cleanup<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>&#x2F;usr&#x2F;share&#x2F;sysbench&#x2F;下有很多测试脚本,根据测试需要填写，可以使用help命令查看参数,–help查看测试项的参数</p>\n</blockquote>\n<h2 id=\"k8s\"><a href=\"#k8s\" class=\"headerlink\" title=\"k8s\"></a>k8s</h2><ul>\n<li>kubemark</li>\n<li>testkube</li>\n</ul>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"https://mp.weixin.qq.com/s?src=11&amp;timestamp=1665469357&amp;ver=4097&amp;signature=UHpleVGTVCM4lwywMQ3B9xfQXA0H5tOi8Ju3nw9YxPQNHo9KazyAmpeLLBvXOFJh9O5OPzrsxoVkF5SCso0kIu9HlAD5EuZ9tffPaTfbVBn0QLf8h0PURQoTCtHOxjkK&amp;new=1\">https://mp.weixin.qq.com/s?src=11&amp;timestamp=1665469357&amp;ver=4097&amp;signature=UHpleVGTVCM4lwywMQ3B9xfQXA0H5tOi8Ju3nw9YxPQNHo9KazyAmpeLLBvXOFJh9O5OPzrsxoVkF5SCso0kIu9HlAD5EuZ9tffPaTfbVBn0QLf8h0PURQoTCtHOxjkK&amp;new=1</a></p>\n<p><a href=\"https://linuxhint.com/use-sysbench-for-linux-performance-testing/\">https://linuxhint.com/use-sysbench-for-linux-performance-testing/</a></p>\n","tags":["测试"]},{"title":"记一次k8s节点网络重传排查","url":"/2024/03/05/%E8%AE%B0%E4%B8%80%E6%AC%A1k8s%E8%8A%82%E7%82%B9%E7%BD%91%E7%BB%9C%E9%87%8D%E4%BC%A0%E6%8E%92%E6%9F%A5/","content":"<p>值班的时候有用户报障他们的一个定时job有超时，他们自己抓包发现网络有重传认为我们的k8s网络有问题</p>\n<p>看了下历史记录问，题是去年提出的，之前同事已经测试过长ping，且抓包未发现异常，他们发现访问的服务端和客户端的pod都在同一个节点上，怀疑用户业务自身问题</p>\n<span id=\"more\"></span>\n\n<h4 id=\"经过\"><a href=\"#经过\" class=\"headerlink\" title=\"经过\"></a>经过</h4><p>年后来了之后，用户依然出现超时问题，查看用户集群有ingress询问用户是否经过ingress过到服务端，且用户反应出现此类问题的不只是这一个业务以及测试集群也有出现</p>\n<p>从现象来看此时我也认为是客户自身业务导致，但是客户坚持认为和业务没关系</p>\n<p>客户提供了一个是集群让我们测试，以及出问题的pod</p>\n<p>于是就在客户的测试集群中使用ab测试出问题的那些pod的网络情况，并没有发现问题,因为ab没有按时间探测的功能所有把包给加大了，测试了同node和不同node</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ab <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10</span> <span class=\"token parameter variable\">-t</span> <span class=\"token number\">1000</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10000000</span> http://<span class=\"token operator\">&lt;</span>ip<span class=\"token operator\">></span>/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在测试3天之后发现ab中偶有超时最长是1000ms+，此时怀疑可能网络有问题了但不是那么的确定，因为重传有很多原因</p>\n<p>同时登录上客户的机器看了cpu，内存等情况，发现客户的内存的free很少，网卡有丢包统计但是不是很多<code>ethtool -S etho</code>等命令查看队列等，没有发现太多相关性</p>\n<p>客户表示出问题已经几个月且没有啥变更，同时我们和技术支持还有部门其他同事一块开了个会议，其他同事也进行了排查也没发现问题所在，且怀疑svc导致的得到的答复并没有svc，是pod和pod直接连接</p>\n<p>同时我们提出试试重启pod来尝试下，我又用ab压测的同时抓包，且约了客户会议</p>\n<p>抓包的结果有大量的rst，改下之后rst减少所以我认为这个属于压测问题</p>\n<p>和客户会议得知客户的服务调用链和我们之前了解的略有出入,此时心中感觉有些希望</p>\n<p>整个调用链中多了个ingress，我觉得可能是ingress导致的，查看了下ingress日志也没发现一些异常，询问用户是否可以排除ingress直接访问得到了否定的结果</p>\n<p><img src=\"/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1k8s%E8%8A%82%E7%82%B9%E7%BD%91%E7%BB%9C%E9%87%8D%E4%BC%A0%E6%8E%92%E6%9F%A5-1.png\" alt=\"alt text\"></p>\n<p>和客户会议后的第二天客户表示问题依然出现，客户部署了监控之后我们看监控也是正常的</p>\n<p>此时想抓出问题的时候的ingress包，则在客户的生产环境的node上执行了一个抓包，同时查看tcp重传相关</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">nohup</span>  tcpdump <span class=\"token parameter variable\">-i</span> any src <span class=\"token function\">host</span> <span class=\"token operator\">&lt;</span>src_ip<span class=\"token operator\">></span> and dst <span class=\"token function\">host</span> <span class=\"token operator\">&lt;</span>dest_ip<span class=\"token operator\">></span> <span class=\"token parameter variable\">-w</span> test.pcap <span class=\"token operator\">&amp;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>经过一夜抓包之后使用wireshark分析发现有大量的重传和重复确认的包，在分析包中的时候顺吧看了下系统日志,发现里面有一些oom且内存free较少，将oom和内存的情况反馈给客户</p>\n<p><img src=\"/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1k8s%E8%8A%82%E7%82%B9%E7%BD%91%E7%BB%9C%E9%87%8D%E4%BC%A0%E6%8E%92%E6%9F%A5-3.png\" alt=\"alt text\"></p>\n<p>同时让客户看了下服务端的资源情况也没发现异常，客户反馈oom的是logstash并问是否有关系，我回复关系不大</p>\n<p>此时将抓包的截图发给网络的同事让帮看看，网络的同事一看说你抓包有问题，因为在tcpdump中<code>-i</code>参数使用了any，机器内的包经过了2个网卡就会出现wireshark中有大量的重传和重复确认包</p>\n<p>恍然大悟于是改进了抓包机制，只抓pod网卡的包摒弃了<code>-i any</code>参数</p>\n<p>又抓了一夜的包。。。</p>\n<p>不如意外故障依旧，但这次抓包中就没有满屏的重传和重复确认包，但是依然有重传且和客户超时的时间前后脚</p>\n<p><img src=\"/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1k8s%E8%8A%82%E7%82%B9%E7%BD%91%E7%BB%9C%E9%87%8D%E4%BC%A0%E6%8E%92%E6%9F%A5-4.png\" alt=\"alt text\"></p>\n<p>同时将截图发给了网络的同事帮确认下，他们怀疑丢包，但是需要2端同时抓包来确认丢包</p>\n<p>已经连续抓包了好几次这次想彻底一点，让网络的同事从底层抓包将所有的客户端和server都进行抓包</p>\n<p>中途上厕所遇到了负责内核的同事，他也参加了和客户的会议，我将我这几天的情况告诉他，他说等会他看下</p>\n<p>他登录到机器之后和我们之前一样查了下cpu，内存等资源，最后他在看日志的时候发现oom了，他说这个可能会导致网络超时，</p>\n<p>我问他为啥 他说内核在执行oom的时候会放下其他工作专注杀死oom的进程，但是杀死的进程时间太长了就可能导致网络收发包出问题</p>\n<p><img src=\"/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1k8s%E8%8A%82%E7%82%B9%E7%BD%91%E7%BB%9C%E9%87%8D%E4%BC%A0%E6%8E%92%E6%9F%A5-2.png\" alt=\"alt text\"></p>\n<p>没错就是那个oom的logstash！！！</p>\n<p>于是让客户将这个logstash加大内存，客户加了内存之后k8s将其调度到其他地方</p>\n<p>处理了oom第二天之后询问客户没有发现超时问题，为了防止被打脸就延长了网络的抓包时间</p>\n<p>新的一周开始问客户是否还发生，结果没发生。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ol>\n<li><p>应该及时和客户沟通获取业务的调用链</p>\n</li>\n<li><p>wireshark分析会被<code>-i any</code>干扰</p>\n</li>\n<li><p>内核oom的时候会停止网络收发包等工作导致网络超时，至于oom事件过长是因为logstash有大约几百个线程</p>\n</li>\n</ol>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://cloud.tencent.com/developer/article/1404089\">https://cloud.tencent.com/developer/article/1404089</a></p>\n","tags":["网络","故障处理"]},{"title":"用k8s资源方式创建k8s-clusterapi","url":"/2022/12/19/%E7%94%A8k8s%E8%B5%84%E6%BA%90%E6%96%B9%E5%BC%8F%E5%88%9B%E5%BB%BAk8s-clusterapi/","content":"<p>cluster-api是k8s的一个子项目隶属于SIG Cluster Lifecycle,主要使用类似k8s风格的资源对象来管理k8s集群的生命周期</p>\n<span id=\"more\"></span>\n\n<p>k8s的部署比较复杂，且每个发行版本稍微有些不应，cluster api则致力于通过k8s得资源对象来创建，管理k8s集群</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li>clustar api的命令工具为<code>clusterctl</code></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># m1 macos</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.3.1/clusterctl-darwin-arm64 <span class=\"token parameter variable\">-o</span> clusterctl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"初始化管理集群服务端\"><a href=\"#初始化管理集群服务端\" class=\"headerlink\" title=\"初始化管理集群服务端\"></a>初始化管理集群服务端</h4><ul>\n<li>infrastructure参数指定基础架构供应商</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">clusterctl init <span class=\"token parameter variable\">--infrastructure</span> vcluster<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"使用clusterctl部署集群\"><a href=\"#使用clusterctl部署集群\" class=\"headerlink\" title=\"使用clusterctl部署集群\"></a>使用clusterctl部署集群</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HELM_VALUES</span><span class=\"token operator\">=</span><span class=\"token string\">\"service:<span class=\"token entity\" title=\"\\n\">\\n</span>  type: NodePort\"</span>\n\nkubectl create namespace <span class=\"token variable\">$&#123;CLUSTER_NAMESPACE&#125;</span>\n\n<span class=\"token comment\"># 生成cluster-api的cr并应用</span>\nclusterctl generate cluster <span class=\"token variable\">$&#123;CLUSTER_NAME&#125;</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">--infrastructure</span> vcluster <span class=\"token punctuation\">\\</span>\n    --kubernetes-version <span class=\"token variable\">$&#123;KUBERNETES_VERSION&#125;</span> <span class=\"token punctuation\">\\</span>\n    --target-namespace <span class=\"token variable\">$&#123;CLUSTER_NAMESPACE&#125;</span> <span class=\"token operator\">|</span> kubectl apply <span class=\"token parameter variable\">-f</span> -<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看集群发现已经部署好了</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">❯ vcluster list        \n NAME        NAMESPACE         STATUS    CONNECTED   CREATED                         AGE     CONTEXT   \n capi-test   clusterapi-test   Running               <span class=\"token number\">2022</span>-12-19 <span class=\"token number\">15</span>:40:46 +0800 CST   3m22s   minikube  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>查看集群详情</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">clusterctl describe cluster  capi-test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>获取创建的集群的kube-config</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">clusterctl get kubeconfig capi-test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>删除管理集群</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 删除 供应商 创建的命名空间和crd</span>\nclusterctl delete <span class=\"token parameter variable\">--infrastructure</span> aws --include-namespace --include-crd\n\n<span class=\"token comment\"># 删除所有</span>\nclusterctl delete <span class=\"token parameter variable\">--all</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"命令补全\"><a href=\"#命令补全\" class=\"headerlink\" title=\"命令补全\"></a>命令补全</h4><ul>\n<li>zsh</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 已经有了此配置可以忽略</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"autoload -U compinit; compinit\"</span> <span class=\"token operator\">>></span> ~/.zshrc\n\nclusterctl completion <span class=\"token function\">zsh</span> <span class=\"token operator\">></span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;fpath<span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span>&#125;</span>/_clusterctl\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://cluster-api.sigs.k8s.io/introduction.html\">https://cluster-api.sigs.k8s.io/introduction.html</a></p>\n","tags":["k8s","部署"]},{"title":"部署Rancher","url":"/2020/11/02/%E9%83%A8%E7%BD%B2Rancher/","content":"<p>rancer是一个多k8s集群管理工具</p>\n<span id=\"more\"></span>\n\n<h5 id=\"在k8s集群里安装\"><a href=\"#在k8s集群里安装\" class=\"headerlink\" title=\"在k8s集群里安装\"></a>在k8s集群里安装</h5><blockquote>\n<p>直接部署在k8s中具备高可用 <br>中文官方<a href=\"https://www.rancher.cn/\">https://www.rancher.cn</a>英文官网<a href=\"https://rancher.com/\">https://rancher.com</a></p>\n</blockquote>\n<h6 id=\"rancher需要cert-manager\"><a href=\"#rancher需要cert-manager\" class=\"headerlink\" title=\"rancher需要cert-manager\"></a>rancher需要cert-manager</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 添加helm仓库</span>\nhelm repo <span class=\"token function\">add</span> jetstack https://charts.jetstack.io\n\n<span class=\"token comment\"># 更新仓库</span>\nhelm repo update\n\n<span class=\"token comment\"># 使用helm安装cert-manager</span>\nhelm <span class=\"token function\">install</span> <span class=\"token punctuation\">\\</span>\n cert-manager jetstack/cert-manager <span class=\"token punctuation\">\\</span>\n <span class=\"token parameter variable\">--namespace</span> cert-manager <span class=\"token punctuation\">\\</span>\n <span class=\"token parameter variable\">--set</span> <span class=\"token assign-left variable\">installCRDs</span><span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n --create-namespace<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"使用helm安装rancher\"><a href=\"#使用helm安装rancher\" class=\"headerlink\" title=\"使用helm安装rancher\"></a>使用helm安装rancher</h6><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 添加rancher的repo仓库，这里是用latest，生产环境推荐使用stable，尝鲜使用alpha</span>\nhelm repo <span class=\"token function\">add</span> rancher-latest http://rancher-mirror.oss-cn-beijing.aliyuncs.com/server-charts/latest\n\n<span class=\"token comment\"># 安装rancher</span>\nhelm <span class=\"token function\">install</span> rancher rancher-latest/rancher <span class=\"token punctuation\">\\</span>\n <span class=\"token parameter variable\">--namespace</span> cattle-system <span class=\"token punctuation\">\\</span>\n <span class=\"token parameter variable\">--set</span> <span class=\"token assign-left variable\">hostname</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>域名<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span>\n --create-namespace<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"单节点安装\"><a href=\"#单节点安装\" class=\"headerlink\" title=\"单节点安装\"></a>单节点安装</h5><blockquote>\n<p>作为一个单独的程序管理其他的集群</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--restart</span><span class=\"token operator\">=</span>unless-stopped <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-p</span> <span class=\"token number\">80</span>:80 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">443</span>:443 <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-v</span> /data/rancher:/var/lib/rancher/ <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-v</span> /data/rancher/log/auditlog:/var/log/auditlog <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CATTLE_SYSTEM_CATALOG</span><span class=\"token operator\">=</span>bundled <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">AUDIT_LEVEL</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> <span class=\"token punctuation\">\\</span>\n rancher/rancher:stable --no-cacerts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","tags":["k8s","rancher"]},{"title":"配置docker支持gpu","url":"/2024/06/14/%E9%85%8D%E7%BD%AEdocker%E6%94%AF%E6%8C%81gpu/","content":"<p>现在很多ai相关的程序会跑在docker当中，默认docker是不支持gpu的，所以需要使其支持gpu</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装驱动\"><a href=\"#安装驱动\" class=\"headerlink\" title=\"安装驱动\"></a>安装驱动</h4><ul>\n<li><p>打开nvidia官网的<a href=\"https://www.nvidia.cn/Download/index.aspx?lang=cn\">驱动下载界面</a>根据显卡和操作系统的类型下载对应的驱动</p>\n</li>\n<li><p>安装驱动,可能会报错缺少一些依赖，把缺少的安装即可</p>\n</li>\n<li><p>centos7可能会遇到类似找不到kernel-source类似的报错需要手动添加<code>--kernel-source-path /usr/src/kernels/3.10.0-1160.119.1.el7.x86_64/</code>来配置内核源码路径</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装需要gcc支持</span>\nyum <span class=\"token function\">install</span> gcc\nyum <span class=\"token function\">install</span> kernel-devel\n\n<span class=\"token function\">bash</span> NVIDIA-Linux-x86_64-440.95.01.run <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-Z</span> <span class=\"token parameter variable\">-X</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>验证安装</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvidia-smi\n<span class=\"token comment\"># Fri Jun 14 16:55:37 2024</span>\n<span class=\"token comment\"># +-----------------------------------------------------------------------------+</span>\n<span class=\"token comment\"># | NVIDIA-SMI 440.95.01    Driver Version: 440.95.01    CUDA Version: 10.2     |</span>\n<span class=\"token comment\"># |-------------------------------+----------------------+----------------------+</span>\n<span class=\"token comment\"># | GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span>\n<span class=\"token comment\"># | Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span>\n<span class=\"token comment\"># |===============================+======================+======================|</span>\n<span class=\"token comment\"># |   0  Tesla V100-PCIE...  Off  | 00000000:00:03.0 Off |                    0 |</span>\n<span class=\"token comment\"># | N/A   32C    P0    36W / 250W |      0MiB / 16160MiB |      0%      Default |</span>\n<span class=\"token comment\"># +-------------------------------+----------------------+----------------------+</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># +-----------------------------------------------------------------------------+</span>\n<span class=\"token comment\"># | Processes:                                                       GPU Memory |</span>\n<span class=\"token comment\"># |  GPU       PID   Type   Process name                             Usage      |</span>\n<span class=\"token comment\"># |=============================================================================|</span>\n<span class=\"token comment\"># |  No running processes found                                                 |</span>\n<span class=\"token comment\"># +-----------------------------------------------------------------------------+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h4><ul>\n<li>使用官方一件脚本安装</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://get.docker.com <span class=\"token operator\">|</span> <span class=\"token function\">bash</span> <span class=\"token parameter variable\">-s</span> <span class=\"token function\">docker</span> <span class=\"token parameter variable\">--mirror</span> Aliyun<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>启动</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl start  <span class=\"token function\">docker</span>\nsystemctl <span class=\"token builtin class-name\">enable</span> <span class=\"token function\">docker</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>验证安装</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">ps</span>\n<span class=\"token comment\"># CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"安装nvidia-toolkit\"><a href=\"#安装nvidia-toolkit\" class=\"headerlink\" title=\"安装nvidia-toolkit\"></a>安装nvidia-toolkit</h4><ul>\n<li>配置yaml仓库</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-L</span> https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/yum.repos.d/nvidia-container-toolkit.repo\n\nyum-config-manager <span class=\"token parameter variable\">--enable</span> nvidia-container-toolkit-experimental<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>安装toolkit</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> nvidia-container-toolkit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>配置</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvidia-ctk runtime configure <span class=\"token parameter variable\">--runtime</span><span class=\"token operator\">=</span>docker\nsystemctl restart <span class=\"token function\">docker</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>测试,出现下面则表示安装成功</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">docker run <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>rm <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>runtime=nvidia <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>gpus all ubuntu nvidia<span class=\"token punctuation\">-</span>smi\n<span class=\"token comment\"># Fri Jun 14 09:24:04 2024</span>\n<span class=\"token comment\"># +-----------------------------------------------------------------------------+</span>\n<span class=\"token comment\"># | NVIDIA-SMI 440.95.01    Driver Version: 440.95.01    CUDA Version: 10.2     |</span>\n<span class=\"token comment\"># |-------------------------------+----------------------+----------------------+</span>\n<span class=\"token comment\"># | GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span>\n<span class=\"token comment\"># | Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span>\n<span class=\"token comment\"># |===============================+======================+======================|</span>\n<span class=\"token comment\"># |   0  Tesla V100-PCIE...  Off  | 00000000:00:03.0 Off |                    0 |</span>\n<span class=\"token comment\"># | N/A   36C    P0    35W / 250W |      0MiB / 16160MiB |      0%      Default |</span>\n<span class=\"token comment\"># +-------------------------------+----------------------+----------------------+</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># +-----------------------------------------------------------------------------+</span>\n<span class=\"token comment\"># | Processes:                                                       GPU Memory |</span>\n<span class=\"token comment\"># |  GPU       PID   Type   Process name                             Usage      |</span>\n<span class=\"token comment\"># |=============================================================================|</span>\n<span class=\"token comment\"># |  No running processes found                                                 |</span>\n<span class=\"token comment\"># +-----------------------------------------------------------------------------+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"k8s-containerd配置\"><a href=\"#k8s-containerd配置\" class=\"headerlink\" title=\"k8s containerd配置\"></a>k8s containerd配置</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> nvidia-ctk runtime configure <span class=\"token parameter variable\">--runtime</span><span class=\"token operator\">=</span>containerd\n<span class=\"token function\">sudo</span> systemctl restart containerd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html\">https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html</a></p>\n","tags":["gpu"]},{"title":"404","url":"//404.html","content":"<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">██╗  ██╗ ██████╗ ██╗  ██╗    ███╗   ██╗ ██████╗ ████████╗\n██║  ██║██╔═████╗██║  ██║    ████╗  ██║██╔═══██╗╚══██╔══╝\n███████║██║██╔██║███████║    ██╔██╗ ██║██║   ██║   ██║\n╚════██║████╔╝██║╚════██║    ██║╚██╗██║██║   ██║   ██║\n     ██║╚██████╔╝     ██║    ██║ ╚████║╚██████╔╝   ██║\n     ╚═╝ ╚═════╝      ╚═╝    ╚═╝  ╚═══╝ ╚═════╝    ╚═╝\n\n    ███████╗ ██████╗ ██╗   ██╗███╗   ██╗██████╗\n    ██╔════╝██╔═══██╗██║   ██║████╗  ██║██╔══██╗\n    █████╗  ██║   ██║██║   ██║██╔██╗ ██║██║  ██║\n    ██╔══╝  ██║   ██║██║   ██║██║╚██╗██║██║  ██║\n    ██║     ╚██████╔╝╚██████╔╝██║ ╚████║██████╔╝\n    ╚═╝      ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"},{"title":"tags","url":"/tags/index.html","content":""},{"title":"about","url":"/about/index.html","content":"<p>随着年纪的增长和技术解除的越来越多<br>有些东西记不太住<br>遂用此博客记录解决问题的过程和方法</p>\n"}]